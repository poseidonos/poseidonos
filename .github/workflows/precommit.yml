name: C-Precommit_VM_Test

on:
  pull_request:
    branches: [ main release/v0.12.0 ]

  workflow_dispatch:
    inputs:
       logLevel:
          description: 'Log level'     
          required: true
          default: 'warning'
       tags:
          description: 'Test scenario tags'

jobs:
  IO_Exception_Test:
    runs-on: VM
    steps:
    
    - run: |
        sudo chown -R $USER:$USER $GITHUB_WORKSPACE

    - uses: actions/checkout@v2

    - name: Build Setup
      working-directory: ${{github.workspace}}
      run: | 
        chmod +x .github/workflows/script/build_setup.sh
        .github/workflows/script/build_setup.sh -r ${{github.sha}} -d ${{github.workspace}} -c --with-fpic 

    - name: IO + Exception Simple
      id: io_exception_simple
      working-directory: ${{github.workspace}}
      run: |
        chmod +x .github/workflows/script/io_exception/io_exception.sh
        .github/workflows/script/io_exception/io_exception.sh ${{github.workspace}}

    - name: Upload POS log
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: IO_Exception_LOG
        path: |
          /var/log/pos

    - name: Clean Backup After IO_Exception Test
      if:  always() && steps.io_exception_simple.outcome != 'success'
      working-directory: ${{github.workspace}}
      run: |
        chmod +x .github/workflows/script/clean_backup.sh
        .github/workflows/script/clean_backup.sh -i 127.0.0.1 -p "C-Precommit_VM_Test" -n "IO_Exception" -r ${{github.sha}} -d ${{github.workspace}}

    - name: Upload POS Core Dump
      if:  always() && steps.io_exception_simple.outcome != 'success'
      uses: actions/upload-artifact@v3
      with:
        name: IO_Exception_CORE_DUMP
        path: |
          ${{github.workspace}}/tool/dump/*.tar.gz*


  Normal_IO_NPOR_SPOR_Test:
    runs-on: VM
    steps:

    - run: |
        sudo chown -R $USER:$USER $GITHUB_WORKSPACE

    - uses: actions/checkout@v2

    - name: Build Setup
      working-directory: ${{github.workspace}}
      run: | 
        chmod +x .github/workflows/script/build_setup.sh
        .github/workflows/script/build_setup.sh -r ${{github.sha}} -d ${{github.workspace}} -c --with-fpic
    
    - name: Normal IO Test
      id: normal_io_test
      working-directory: ${{github.workspace}}
      run: |
        chmod +x .github/workflows/script/normal_io_npor_spor/normal_io.sh
        .github/workflows/script/normal_io_npor_spor/normal_io.sh ${{github.workspace}}

    - name: NPOR Test
      id: npor_test
      working-directory: ${{github.workspace}}
      run: |
        chmod +x .github/workflows/script/normal_io_npor_spor/npor.sh
        .github/workflows/script/normal_io_npor_spor/npor.sh ${{github.workspace}}

    - name: SPOR Test
      id: spor_test
      working-directory: ${{github.workspace}}
      run: |
        chmod +x .github/workflows/script/normal_io_npor_spor/spor_precommit.sh
        .github/workflows/script/normal_io_npor_spor/spor_precommit.sh ${{github.workspace}}

    - name: Upload POS log
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: Normal_IO_NPOR_SPOR_LOG
        path: |
          /var/log/pos

    - name: Clean Backup After Normal_IO_NPOR_SPOR Test
      if: always() && (steps.normal_io_test.outcome != 'success' || steps.npor_test.outcome != 'success' || steps.spor_test.outcome != 'success')
      working-directory: ${{github.workspace}}
      run: |
        chmod +x .github/workflows/script/clean_backup.sh
        .github/workflows/script/clean_backup.sh -i 127.0.0.1 -p "C-Precommit_VM_Test" -n "Normal_IO_NPOR_SPOR" -r ${{github.sha}} -d ${{github.workspace}}

    - name: Upload POS Core Dump
      if: always() && (steps.normal_io_test.outcome != 'success' || steps.npor_test.outcome != 'success' || steps.spor_test.outcome != 'success')
      uses: actions/upload-artifact@v3
      with:
        name: Normal_IO_NPOR_SPOR_CORE_DUMP
        path: |
          ${{github.workspace}}/tool/dump/*.tar.gz*

  Rebuild_SPOR_test:
    runs-on: VM
    steps:

    - run: |
        sudo chown -R $USER:$USER $GITHUB_WORKSPACE

    - uses: actions/checkout@v2

    - name: Build Setup
      working-directory: ${{github.workspace}}
      run: | 
        chmod +x .github/workflows/script/build_setup.sh
        .github/workflows/script/build_setup.sh -r ${{github.sha}} -d ${{github.workspace}} -c --with-fpic 
    
    - name: Rebuild SPOR Test
      id: rebuild_spor_test
      timeout-minutes: 8
      working-directory: ${{github.workspace}}
      run: |
        chmod +x .github/workflows/script/rebuild_spor/rebuild_spor.sh
        .github/workflows/script/rebuild_spor/rebuild_spor.sh ${{github.workspace}}

    - name: Upload POS log
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: Rebuild_SPOR_LOG
        path: |
          /var/log/pos

    - name: Clean Backup After Rebuild_SPOR Test
      if: always() && steps.rebuild_spor_test.outcome != 'success'
      working-directory: ${{github.workspace}}
      run: |
        chmod +x .github/workflows/script/clean_backup.sh
        .github/workflows/script/clean_backup.sh -i 127.0.0.1 -p "C-Precommit_VM_Test" -n "rebuild_spor" -r ${{github.sha}} -d ${{github.workspace}}

    - name: Upload POS Core Dump
      if: always() && steps.rebuild_spor_test.outcome != 'success'
      uses: actions/upload-artifact@v3
      with:
        name: Rebuild_SPOR_CORE_DUMP
        path: |
          ${{github.workspace}}/tool/dump/*.tar.gz*


  Rebuild_Test:
    runs-on: VM
    steps:

    - run: |
        sudo chown -R $USER:$USER $GITHUB_WORKSPACE

    - uses: actions/checkout@v2

    - name: Build Setup
      working-directory: ${{github.workspace}}
      run: | 
        chmod +x .github/workflows/script/build_setup.sh
        .github/workflows/script/build_setup.sh -r ${{github.sha}} -d ${{github.workspace}} -c --with-fpic 
    
    - name: Rebuild Test 
      id: rebuild_test
      timeout-minutes: 8
      working-directory: ${{github.workspace}}
      run: |
        chmod +x .github/workflows/script/rebuild/rebuild.sh
        .github/workflows/script/rebuild/rebuild.sh ${{github.workspace}}

    - name: Upload POS log
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: Rebuild_LOG
        path: |
          /var/log/pos

    - name: Clean Backup After Rebuild Test
      if: always() && steps.rebuild_test.outcome != 'success'
      working-directory: ${{github.workspace}}
      run: |
        chmod +x .github/workflows/script/clean_backup.sh
        .github/workflows/script/clean_backup.sh -i 127.0.0.1 -p "C-Precommit_VM_Test" -n "rebuild" -r ${{github.sha}} -d ${{github.workspace}}

    - name: Upload POS Core Dump
      if: always() && steps.rebuild_test.outcome != 'success'
      uses: actions/upload-artifact@v3
      with:
        name: Rebuild_CORE_DUMP
        path: |
          ${{github.workspace}}/tool/dump/*.tar.gz*

  Rebuild_RAID6_Test:
      runs-on: VM
      steps:

      - run: |
          sudo chown -R $USER:$USER $GITHUB_WORKSPACE

      - uses: actions/checkout@v2

      - name: Build Setup
        working-directory: ${{github.workspace}}
        run: | 
          chmod +x .github/workflows/script/build_setup.sh
          .github/workflows/script/build_setup.sh -r ${{github.sha}} -d ${{github.workspace}} -c --with-fpic 

      - name: Rebuild RAID6 Test 
        id: rebuild_raid6_test
        timeout-minutes: 8
        working-directory: ${{github.workspace}}
        run: |
          chmod +x .github/workflows/script/rebuild_raid6/rebuild_raid6.sh
          .github/workflows/script/rebuild_raid6/rebuild_raid6.sh ${{github.workspace}}

      - name: Multi-device Rebuild RAID6 Test 
        id: multi_device_rebuild_raid6_test
        timeout-minutes: 8
        working-directory: ${{github.workspace}}
        run: |
          chmod +x .github/workflows/script/rebuild_raid6/multi_device_rebuild_raid6_test.sh
          .github/workflows/script/rebuild_raid6/multi_device_rebuild_raid6_test.sh ${{github.workspace}}

      - name: Upload POS log
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Rebuild_RAID6_LOG
          path: |
            /var/log/pos

      - name: Clean Backup After Rebuild RAID6 Test
        if: always() && steps.rebuild_raid6_test.outcome != 'success'
        working-directory: ${{github.workspace}}
        run: |
          chmod +x .github/workflows/script/clean_backup.sh
          .github/workflows/script/clean_backup.sh -i 127.0.0.1 -p "C-Precommit_VM_Test" -n "rebuild_raid6" -r ${{github.sha}} -d ${{github.workspace}}

      - name: Upload POS Core Dump
        if: always() && steps.rebuild_raid6_test.outcome != 'success'
        uses: actions/upload-artifact@v3
        with:
          name: Rebuild_RAID6_CORE_DUMP
          path: |
            ${{github.workspace}}/tool/dump/*.tar.gz*

  Rotational_Rebuild_Test:
    runs-on: VM
    steps:

    - run: |
        sudo chown -R $USER:$USER $GITHUB_WORKSPACE

    - uses: actions/checkout@v2

    - name: Build Setup
      working-directory: ${{github.workspace}}
      run: | 
        chmod +x .github/workflows/script/build_setup.sh
        .github/workflows/script/build_setup.sh -r ${{github.sha}} -d ${{github.workspace}} -c --with-fpic 
    
    - name: Rotational Rebuild Test
      id: rotational_rebuild_test
      timeout-minutes: 8
      working-directory: ${{github.workspace}}
      run: |
        chmod +x .github/workflows/script/rotational_rebuild/rotational_rebuild.sh
        .github/workflows/script/rotational_rebuild/rotational_rebuild.sh ${{github.workspace}}

    - name: Upload POS log
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: Rotational_Rebuild_LOG
        path: |
          /var/log/pos

    - name: Clean Backup After Rotational_Rebuild Test
      if: always() && steps.rotational_rebuild_test.outcome != 'success'
      working-directory: ${{github.workspace}}
      run: |
        chmod +x .github/workflows/script/clean_backup.sh
        .github/workflows/script/clean_backup.sh -i 127.0.0.1 -p "C-Precommit_VM_Test" -n "rotational_rebuild" -r ${{github.sha}} -d ${{github.workspace}}

    - name: Upload POS Core Dump
      if: always() && steps.rotational_rebuild_test.outcome != 'success'
      uses: actions/upload-artifact@v3
      with:
        name: Rotational_Rebuild_CORE_DUMP
        path: |
          ${{github.workspace}}/tool/dump/*.tar.gz*


  Unit_Test:
    runs-on: VM
    steps:

    - run: |
        sudo chown -R $USER:$USER $GITHUB_WORKSPACE

    - uses: actions/checkout@v2

    - name: Build Setup
      working-directory: ${{github.workspace}}
      run: | 
        chmod +x .github/workflows/script/build_setup.sh
        .github/workflows/script/build_setup.sh -r ${{github.sha}} -d ${{github.workspace}} -c --with-fpic
         
    # Need separation building from running
    - name: UT Build and Run
      working-directory: ${{github.workspace}}
      run: |
        chmod +x .github/workflows/script/unit/ut_build_run_precommit.sh
        .github/workflows/script/unit/ut_build_run_precommit.sh ${{github.workspace}}

    - name: Copy UT Result to CI Server
      if: always()
      working-directory: ${{github.workspace}}
      run: |
        chmod +x .github/workflows/script/unit/copy_ut_result.sh
        .github/workflows/script/unit/copy_ut_result.sh ${{github.workspace}} ${{github.sha}}

    - uses: mikepenz/action-junit-report@v2
      if: always() 
      with:
        report_paths: 'UnitTestResult/*.xml'

    - name: Upload POS log
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: Unit_LOG
        path: |
          /var/log/pos

  Volume_Test:
    runs-on: VM
    steps:

    - run: |
        sudo chown -R $USER:$USER $GITHUB_WORKSPACE

    - uses: actions/checkout@v2

    - name: Build Setup
      working-directory: ${{github.workspace}}
      run: | 
        chmod +x .github/workflows/script/build_setup.sh
        .github/workflows/script/build_setup.sh -r ${{github.sha}} -d ${{github.workspace}} -c --with-fpic 
    
    - name: Volume Test
      id: volume_test
      working-directory: ${{github.workspace}}
      run: |
        chmod +x .github/workflows/script/volume/volume_precommit.sh
        .github/workflows/script/volume/volume_precommit.sh ${{github.workspace}}

    - name: Upload POS log
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: Volume_LOG
        path: |
          /var/log/pos

    - name: Clean Backup After Volume Test
      if: always() && steps.volume_test.outcome != 'success'
      working-directory: ${{github.workspace}}
      run: |
        chmod +x .github/workflows/script/clean_backup.sh
        .github/workflows/script/clean_backup.sh -i 127.0.0.1 -p "C-Precommit_VM_Test" -n "volume" -r ${{github.sha}} -d ${{github.workspace}}

    - name: Upload POS Core Dump
      if: always() && steps.volume_test.outcome != 'success'
      uses: actions/upload-artifact@v3
      with:
        name: Volume_CORE_DUMP
        path: |
          ${{github.workspace}}/tool/dump/*.tar.gz*


  WBT_IO_ST:
    runs-on: VM
    steps:

    - run: |
        sudo chown -R $USER:$USER $GITHUB_WORKSPACE

    - uses: actions/checkout@v2

    - name: Build Setup
      working-directory: ${{github.workspace}}
      run: | 
        chmod +x .github/workflows/script/build_setup.sh
        .github/workflows/script/build_setup.sh -r ${{github.sha}} -d ${{github.workspace}} -c --with-fpic 
    
    - name: WBT Command Test
      id: wbt_command_test
      working-directory: ${{github.workspace}}
      run: |
        chmod +x .github/workflows/script/wb_io_st/wbt_command_pre.sh
        .github/workflows/script/wb_io_st/wbt_command_pre.sh ${{github.workspace}} 

    - name: IO System Level Test
      id: io_system_level_test
      working-directory: ${{github.workspace}}
      run: |
        chmod +x .github/workflows/script/wb_io_st/io_system_level.sh
        .github/workflows/script/wb_io_st/io_system_level.sh ${{github.workspace}} ${{github.sha}}

    - name: Upload POS log
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: WBT_IO_ST_LOG
        path: |
          /var/log/pos

