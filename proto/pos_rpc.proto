syntax = "proto3";
package pos_rpc;

service Health {
    rpc Check(HealthCheckRequest) returns (HealthCheckResponse);
}

message HealthCheckRequest {
    // nothing
}

message HealthCheckResponse {
    enum ServingStatus {
        UNKNOWN = 0;
        SERVING = 1;
        NOT_SERVING = 2;
    }
    ServingStatus status = 1;
    optional string reason = 2;
}

///////////////////////////////////////////////////////////////////////////////////

service PosManagement {
    rpc CreateArray (CreateArrayRequest) returns (PosResponse) {}
    rpc DeleteArray (DeleteArrayRequest) returns (PosResponse) {}
    rpc CreateVolume (CreateVolumeRequest) returns (PosResponse) {}
    rpc DeleteVolume (DeleteVolumeRequest) returns (PosResponse) {}
    rpc MountVolume (MountVolumeRequest) returns (PosResponse) {}
    rpc UnmountVolume (UnmountVolumeRequest) returns (PosResponse) {}
    rpc UpdateVoluemMeta (UpdateVoluemMetaRequest) returns (PosResponse) {}

    rpc GetArrayList (GetArrayListRequest) returns (ArrayListResponse) {}
    rpc GetVolumeList (GetVolumeListRequest) returns (VolumeListResponse) {}
}

message CreateArrayRequest {
    string array_name = 1;
    uint64 capacity = 2;    // capacity in bytes
}

message DeleteArrayRequest {
    string array_name = 1;
}

message CreateVolumeRequest {
    string array_name = 1;
    string volume_name = 2;
    uint64 capacity = 3;
}

message DeleteVolumeRequest {
    string array_name = 1;
    string volume_name = 2;
}

message MountVolumeRequest {
    string array_name = 1;
    string volume_name = 2;
}

message UnmountVolumeRequest {
    string array_name = 1;
    string volume_name = 2;
}

message UpdateVoluemMetaRequest {
    string array_name = 1;
}

enum PosResult {
    SUCCESS = 0;
    FAIL = 1;
}

message PosResponse {
    PosResult result = 1;
    optional string reason = 2;
}

message GetArrayListRequest {
    // nothing
}

message ArrayInfo {
    string array_name = 1;
    uint64 total_capacity = 2; // size in bytes
    uint64 used_capacity = 3; // size in bytes

    enum ArrayState {
        OFFLINE = 0;
        PAUSE = 1;
        NORMAL = 2;
        BUSY = 3;
        STOP = 4;
        SNAPSHOT = 5;
    }
    ArrayState state = 4;
}

message ArrayListResponse {
    PosResult result = 1;
    optional string reason = 2;
    repeated ArrayInfo infos = 3;
}

message GetVolumeListRequest {
    string array_name = 1;
}

message VolumeInfo {
    string volume_name = 1;
    uint64 total_capacity = 2;
    uint64 used_capacity = 3;

    enum VolumeState {
        UNKNOWN = 0;
        MOUNTED = 1;
        UNMOUNTED = 2;
    }
    VolumeState state = 4;
}

message VolumeListResponse {
    PosResult result = 1;
    optional string reason = 2;
    repeated VolumeInfo infos = 3;
}

///////////////////////////////////////////////////////////////////////////////////

service PosIo {
    rpc ReadBlocks(ReadBlocksRequest) returns (ReadBlocksResponse) {}
    rpc WriteBlocks(WriteBlocksRequest) returns (WriteBlocksResponse) {}
    rpc WriteHostBlocks(WriteHostBlocksRequest) returns (WriteHostBlocksResponse) {}
    //rpc ReadBlocksSync(ReadBlocksSyncRequest) returns (ReadBlocksSyncResponse) {} // FakePOS-only sync API
    //rpc WriteBlocksSync(WriteBlocksSyncRequest) returns (WriteBlocksSyncResponse) {} // FakePOS-only sync API
    //rpc WriteHostRequestSync(WriteHostRequestSyncRequest) returns (WriteHostRequestSyncResponse) {} // FakePOS-only sync API
    rpc CompleteHostWrite(CompleteHostWriteRequest) returns (CompleteHostWriteResponse) {}
}

message Chunk {
    bytes content = 1;  // 4KB data
}

message ReadBlocksRequest {
    string array_name = 1;
    string volume_name = 2;
    uint64 rba = 3;
    uint64 num_blocks = 4;
}

message ReadBlocksResponse {
    PosResult result = 1;
    optional string reason = 2;
    repeated Chunk data = 3;
}

message WriteBlocksRequest {
    string array_name = 1;
    string volume_name = 2;
    uint64 rba = 3;
    uint64 num_blocks = 4;
    uint64 lsn = 5;
    repeated Chunk data = 6;    
}

message WriteBlocksResponse {
    PosResult result = 1;
    optional string reason = 2;
}

message WriteHostBlocksRequest {
    string array_name = 1;
    string volume_name = 2;
    uint64 rba = 3;
    uint64 num_blocks = 4;
    uint64 lsn = 5;
}

message WriteHostBlocksResponse {
    PosResult result = 1;
    optional string reason = 2;
}

message CompleteHostWriteRequest {
    string array_name = 1;
    string volume_name = 2;
    uint64 lsn = 3;
}

message CompleteHostWriteResponse {
    PosResult result = 1;
    optional string reason = 2;
}

///////////////////////////////////////////////////////////////////////////////////

service PosControl {
    rpc StartVolumeSync(StartVolumeSyncRequest) returns (StartVolumeSyncResponse) {}
    rpc FinishVolumeSync(FinishVolumeSyncRequest) returns (FinishVolumeSyncResponse) {}
    rpc SuspendWrite(SuspendWriteRequest) returns (SuspendWriteResponse) {}
    rpc ResumeWrite(ResumeWriteRequest) returns (ResumeWriteResponse) {}
}

message StartVolumeSyncRequest {
    string array_name = 1;
    string volume_name = 2;
    bool is_primary = 3;
}

message StartVolumeSyncResponse {
    PosResult result = 1;
    optional string reason = 2;
}

message FinishVolumeSyncRequest {
    string array_name = 1;
    string volume_name = 2;
    bool is_primary = 3;
}

message FinishVolumeSyncResponse {
    PosResult result = 1;
    optional string reason = 2;
}

message SuspendWriteRequest {
    string array_name = 1;
    string volume_name = 2;
}

message SuspendWriteResponse {
    PosResult result = 1;
    optional string reason = 2;
}

message ResumeWriteRequest {
    string array_name = 1;
    string volume_name = 2;
}

message ResumeWriteResponse {
    PosResult result = 1;
    optional string reason = 2;
}