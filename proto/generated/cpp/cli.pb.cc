// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cli.proto

#include "cli.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace grpc_cli {
constexpr Status::Status(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : event_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , description_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , cause_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , solution_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , code_(0){}
struct StatusDefaultTypeInternal {
  constexpr StatusDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StatusDefaultTypeInternal() {}
  union {
    Status _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StatusDefaultTypeInternal _Status_default_instance_;
constexpr PosInfo::PosInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : version_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct PosInfoDefaultTypeInternal {
  constexpr PosInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PosInfoDefaultTypeInternal() {}
  union {
    PosInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PosInfoDefaultTypeInternal _PosInfo_default_instance_;
constexpr StartSystemRequest::StartSystemRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct StartSystemRequestDefaultTypeInternal {
  constexpr StartSystemRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StartSystemRequestDefaultTypeInternal() {}
  union {
    StartSystemRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StartSystemRequestDefaultTypeInternal _StartSystemRequest_default_instance_;
constexpr SystemInfoRequest::SystemInfoRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct SystemInfoRequestDefaultTypeInternal {
  constexpr SystemInfoRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SystemInfoRequestDefaultTypeInternal() {}
  union {
    SystemInfoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SystemInfoRequestDefaultTypeInternal _SystemInfoRequest_default_instance_;
constexpr SystemInfoResponse_Result_Data::SystemInfoResponse_Result_Data(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : version_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , biosversion_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , biosvendor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , biosreleasedate_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , systemmanufacturer_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , systemproductname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , systemserialnumber_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , systemuuid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , baseboardmanufacturer_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , baseboardproductname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , baseboardserialnumber_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , baseboardversion_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , processormanufacturer_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , processorversion_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , processorfrequency_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct SystemInfoResponse_Result_DataDefaultTypeInternal {
  constexpr SystemInfoResponse_Result_DataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SystemInfoResponse_Result_DataDefaultTypeInternal() {}
  union {
    SystemInfoResponse_Result_Data _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SystemInfoResponse_Result_DataDefaultTypeInternal _SystemInfoResponse_Result_Data_default_instance_;
constexpr SystemInfoResponse_Result::SystemInfoResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr)
  , data_(nullptr){}
struct SystemInfoResponse_ResultDefaultTypeInternal {
  constexpr SystemInfoResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SystemInfoResponse_ResultDefaultTypeInternal() {}
  union {
    SystemInfoResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SystemInfoResponse_ResultDefaultTypeInternal _SystemInfoResponse_Result_default_instance_;
constexpr SystemInfoResponse::SystemInfoResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct SystemInfoResponseDefaultTypeInternal {
  constexpr SystemInfoResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SystemInfoResponseDefaultTypeInternal() {}
  union {
    SystemInfoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SystemInfoResponseDefaultTypeInternal _SystemInfoResponse_default_instance_;
constexpr StopSystemRequest::StopSystemRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct StopSystemRequestDefaultTypeInternal {
  constexpr StopSystemRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StopSystemRequestDefaultTypeInternal() {}
  union {
    StopSystemRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StopSystemRequestDefaultTypeInternal _StopSystemRequest_default_instance_;
constexpr StopSystemResponse_Result::StopSystemResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct StopSystemResponse_ResultDefaultTypeInternal {
  constexpr StopSystemResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StopSystemResponse_ResultDefaultTypeInternal() {}
  union {
    StopSystemResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StopSystemResponse_ResultDefaultTypeInternal _StopSystemResponse_Result_default_instance_;
constexpr StopSystemResponse::StopSystemResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct StopSystemResponseDefaultTypeInternal {
  constexpr StopSystemResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StopSystemResponseDefaultTypeInternal() {}
  union {
    StopSystemResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StopSystemResponseDefaultTypeInternal _StopSystemResponse_default_instance_;
constexpr GetSystemPropertyRequest::GetSystemPropertyRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetSystemPropertyRequestDefaultTypeInternal {
  constexpr GetSystemPropertyRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetSystemPropertyRequestDefaultTypeInternal() {}
  union {
    GetSystemPropertyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetSystemPropertyRequestDefaultTypeInternal _GetSystemPropertyRequest_default_instance_;
constexpr GetSystemPropertyResponse_Result_Data::GetSystemPropertyResponse_Result_Data(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : rebuild_policy_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetSystemPropertyResponse_Result_DataDefaultTypeInternal {
  constexpr GetSystemPropertyResponse_Result_DataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetSystemPropertyResponse_Result_DataDefaultTypeInternal() {}
  union {
    GetSystemPropertyResponse_Result_Data _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetSystemPropertyResponse_Result_DataDefaultTypeInternal _GetSystemPropertyResponse_Result_Data_default_instance_;
constexpr GetSystemPropertyResponse_Result::GetSystemPropertyResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr)
  , data_(nullptr){}
struct GetSystemPropertyResponse_ResultDefaultTypeInternal {
  constexpr GetSystemPropertyResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetSystemPropertyResponse_ResultDefaultTypeInternal() {}
  union {
    GetSystemPropertyResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetSystemPropertyResponse_ResultDefaultTypeInternal _GetSystemPropertyResponse_Result_default_instance_;
constexpr GetSystemPropertyResponse::GetSystemPropertyResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct GetSystemPropertyResponseDefaultTypeInternal {
  constexpr GetSystemPropertyResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetSystemPropertyResponseDefaultTypeInternal() {}
  union {
    GetSystemPropertyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetSystemPropertyResponseDefaultTypeInternal _GetSystemPropertyResponse_default_instance_;
constexpr SetSystemPropertyRequest_Param::SetSystemPropertyRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : level_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct SetSystemPropertyRequest_ParamDefaultTypeInternal {
  constexpr SetSystemPropertyRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetSystemPropertyRequest_ParamDefaultTypeInternal() {}
  union {
    SetSystemPropertyRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetSystemPropertyRequest_ParamDefaultTypeInternal _SetSystemPropertyRequest_Param_default_instance_;
constexpr SetSystemPropertyRequest::SetSystemPropertyRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct SetSystemPropertyRequestDefaultTypeInternal {
  constexpr SetSystemPropertyRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetSystemPropertyRequestDefaultTypeInternal() {}
  union {
    SetSystemPropertyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetSystemPropertyRequestDefaultTypeInternal _SetSystemPropertyRequest_default_instance_;
constexpr SetSystemPropertyResponse_Result::SetSystemPropertyResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct SetSystemPropertyResponse_ResultDefaultTypeInternal {
  constexpr SetSystemPropertyResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetSystemPropertyResponse_ResultDefaultTypeInternal() {}
  union {
    SetSystemPropertyResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetSystemPropertyResponse_ResultDefaultTypeInternal _SetSystemPropertyResponse_Result_default_instance_;
constexpr SetSystemPropertyResponse::SetSystemPropertyResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct SetSystemPropertyResponseDefaultTypeInternal {
  constexpr SetSystemPropertyResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetSystemPropertyResponseDefaultTypeInternal() {}
  union {
    SetSystemPropertyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetSystemPropertyResponseDefaultTypeInternal _SetSystemPropertyResponse_default_instance_;
constexpr StartTelemetryRequest::StartTelemetryRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct StartTelemetryRequestDefaultTypeInternal {
  constexpr StartTelemetryRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StartTelemetryRequestDefaultTypeInternal() {}
  union {
    StartTelemetryRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StartTelemetryRequestDefaultTypeInternal _StartTelemetryRequest_default_instance_;
constexpr StartTelemetryResponse_Result::StartTelemetryResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct StartTelemetryResponse_ResultDefaultTypeInternal {
  constexpr StartTelemetryResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StartTelemetryResponse_ResultDefaultTypeInternal() {}
  union {
    StartTelemetryResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StartTelemetryResponse_ResultDefaultTypeInternal _StartTelemetryResponse_Result_default_instance_;
constexpr StartTelemetryResponse::StartTelemetryResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct StartTelemetryResponseDefaultTypeInternal {
  constexpr StartTelemetryResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StartTelemetryResponseDefaultTypeInternal() {}
  union {
    StartTelemetryResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StartTelemetryResponseDefaultTypeInternal _StartTelemetryResponse_default_instance_;
constexpr StopTelemetryRequest::StopTelemetryRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct StopTelemetryRequestDefaultTypeInternal {
  constexpr StopTelemetryRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StopTelemetryRequestDefaultTypeInternal() {}
  union {
    StopTelemetryRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StopTelemetryRequestDefaultTypeInternal _StopTelemetryRequest_default_instance_;
constexpr StopTelemetryResponse_Result::StopTelemetryResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct StopTelemetryResponse_ResultDefaultTypeInternal {
  constexpr StopTelemetryResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StopTelemetryResponse_ResultDefaultTypeInternal() {}
  union {
    StopTelemetryResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StopTelemetryResponse_ResultDefaultTypeInternal _StopTelemetryResponse_Result_default_instance_;
constexpr StopTelemetryResponse::StopTelemetryResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct StopTelemetryResponseDefaultTypeInternal {
  constexpr StopTelemetryResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StopTelemetryResponseDefaultTypeInternal() {}
  union {
    StopTelemetryResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StopTelemetryResponseDefaultTypeInternal _StopTelemetryResponse_default_instance_;
constexpr SetTelemetryPropertyRequest_Param::SetTelemetryPropertyRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : publicationlistpath_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct SetTelemetryPropertyRequest_ParamDefaultTypeInternal {
  constexpr SetTelemetryPropertyRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetTelemetryPropertyRequest_ParamDefaultTypeInternal() {}
  union {
    SetTelemetryPropertyRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetTelemetryPropertyRequest_ParamDefaultTypeInternal _SetTelemetryPropertyRequest_Param_default_instance_;
constexpr SetTelemetryPropertyRequest::SetTelemetryPropertyRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct SetTelemetryPropertyRequestDefaultTypeInternal {
  constexpr SetTelemetryPropertyRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetTelemetryPropertyRequestDefaultTypeInternal() {}
  union {
    SetTelemetryPropertyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetTelemetryPropertyRequestDefaultTypeInternal _SetTelemetryPropertyRequest_default_instance_;
constexpr SetTelemetryPropertyResponse_Result::SetTelemetryPropertyResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct SetTelemetryPropertyResponse_ResultDefaultTypeInternal {
  constexpr SetTelemetryPropertyResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetTelemetryPropertyResponse_ResultDefaultTypeInternal() {}
  union {
    SetTelemetryPropertyResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetTelemetryPropertyResponse_ResultDefaultTypeInternal _SetTelemetryPropertyResponse_Result_default_instance_;
constexpr SetTelemetryPropertyResponse::SetTelemetryPropertyResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct SetTelemetryPropertyResponseDefaultTypeInternal {
  constexpr SetTelemetryPropertyResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetTelemetryPropertyResponseDefaultTypeInternal() {}
  union {
    SetTelemetryPropertyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetTelemetryPropertyResponseDefaultTypeInternal _SetTelemetryPropertyResponse_default_instance_;
constexpr GetTelemetryPropertyRequest::GetTelemetryPropertyRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetTelemetryPropertyRequestDefaultTypeInternal {
  constexpr GetTelemetryPropertyRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetTelemetryPropertyRequestDefaultTypeInternal() {}
  union {
    GetTelemetryPropertyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetTelemetryPropertyRequestDefaultTypeInternal _GetTelemetryPropertyRequest_default_instance_;
constexpr GetTelemetryPropertyResponse_Result_TelemetryProperty::GetTelemetryPropertyResponse_Result_TelemetryProperty(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : publicationlistpath_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , status_(false){}
struct GetTelemetryPropertyResponse_Result_TelemetryPropertyDefaultTypeInternal {
  constexpr GetTelemetryPropertyResponse_Result_TelemetryPropertyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetTelemetryPropertyResponse_Result_TelemetryPropertyDefaultTypeInternal() {}
  union {
    GetTelemetryPropertyResponse_Result_TelemetryProperty _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetTelemetryPropertyResponse_Result_TelemetryPropertyDefaultTypeInternal _GetTelemetryPropertyResponse_Result_TelemetryProperty_default_instance_;
constexpr GetTelemetryPropertyResponse_Result::GetTelemetryPropertyResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr)
  , data_(nullptr){}
struct GetTelemetryPropertyResponse_ResultDefaultTypeInternal {
  constexpr GetTelemetryPropertyResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetTelemetryPropertyResponse_ResultDefaultTypeInternal() {}
  union {
    GetTelemetryPropertyResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetTelemetryPropertyResponse_ResultDefaultTypeInternal _GetTelemetryPropertyResponse_Result_default_instance_;
constexpr GetTelemetryPropertyResponse::GetTelemetryPropertyResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct GetTelemetryPropertyResponseDefaultTypeInternal {
  constexpr GetTelemetryPropertyResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetTelemetryPropertyResponseDefaultTypeInternal() {}
  union {
    GetTelemetryPropertyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetTelemetryPropertyResponseDefaultTypeInternal _GetTelemetryPropertyResponse_default_instance_;
constexpr ResetEventWrrRequest::ResetEventWrrRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ResetEventWrrRequestDefaultTypeInternal {
  constexpr ResetEventWrrRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResetEventWrrRequestDefaultTypeInternal() {}
  union {
    ResetEventWrrRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResetEventWrrRequestDefaultTypeInternal _ResetEventWrrRequest_default_instance_;
constexpr ResetEventWrrResponse_Result::ResetEventWrrResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct ResetEventWrrResponse_ResultDefaultTypeInternal {
  constexpr ResetEventWrrResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResetEventWrrResponse_ResultDefaultTypeInternal() {}
  union {
    ResetEventWrrResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResetEventWrrResponse_ResultDefaultTypeInternal _ResetEventWrrResponse_Result_default_instance_;
constexpr ResetEventWrrResponse::ResetEventWrrResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct ResetEventWrrResponseDefaultTypeInternal {
  constexpr ResetEventWrrResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResetEventWrrResponseDefaultTypeInternal() {}
  union {
    ResetEventWrrResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResetEventWrrResponseDefaultTypeInternal _ResetEventWrrResponse_default_instance_;
constexpr ResetMbrRequest::ResetMbrRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ResetMbrRequestDefaultTypeInternal {
  constexpr ResetMbrRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResetMbrRequestDefaultTypeInternal() {}
  union {
    ResetMbrRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResetMbrRequestDefaultTypeInternal _ResetMbrRequest_default_instance_;
constexpr ResetMbrResponse_Result::ResetMbrResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct ResetMbrResponse_ResultDefaultTypeInternal {
  constexpr ResetMbrResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResetMbrResponse_ResultDefaultTypeInternal() {}
  union {
    ResetMbrResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResetMbrResponse_ResultDefaultTypeInternal _ResetMbrResponse_Result_default_instance_;
constexpr ResetMbrResponse::ResetMbrResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct ResetMbrResponseDefaultTypeInternal {
  constexpr ResetMbrResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResetMbrResponseDefaultTypeInternal() {}
  union {
    ResetMbrResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResetMbrResponseDefaultTypeInternal _ResetMbrResponse_default_instance_;
constexpr DumpMemorySnapshotRequest_Param::DumpMemorySnapshotRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : path_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DumpMemorySnapshotRequest_ParamDefaultTypeInternal {
  constexpr DumpMemorySnapshotRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DumpMemorySnapshotRequest_ParamDefaultTypeInternal() {}
  union {
    DumpMemorySnapshotRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DumpMemorySnapshotRequest_ParamDefaultTypeInternal _DumpMemorySnapshotRequest_Param_default_instance_;
constexpr DumpMemorySnapshotRequest::DumpMemorySnapshotRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct DumpMemorySnapshotRequestDefaultTypeInternal {
  constexpr DumpMemorySnapshotRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DumpMemorySnapshotRequestDefaultTypeInternal() {}
  union {
    DumpMemorySnapshotRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DumpMemorySnapshotRequestDefaultTypeInternal _DumpMemorySnapshotRequest_default_instance_;
constexpr DumpMemorySnapshotResponse_Result::DumpMemorySnapshotResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct DumpMemorySnapshotResponse_ResultDefaultTypeInternal {
  constexpr DumpMemorySnapshotResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DumpMemorySnapshotResponse_ResultDefaultTypeInternal() {}
  union {
    DumpMemorySnapshotResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DumpMemorySnapshotResponse_ResultDefaultTypeInternal _DumpMemorySnapshotResponse_Result_default_instance_;
constexpr DumpMemorySnapshotResponse::DumpMemorySnapshotResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct DumpMemorySnapshotResponseDefaultTypeInternal {
  constexpr DumpMemorySnapshotResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DumpMemorySnapshotResponseDefaultTypeInternal() {}
  union {
    DumpMemorySnapshotResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DumpMemorySnapshotResponseDefaultTypeInternal _DumpMemorySnapshotResponse_default_instance_;
constexpr StopRebuildingRequest_Param::StopRebuildingRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct StopRebuildingRequest_ParamDefaultTypeInternal {
  constexpr StopRebuildingRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StopRebuildingRequest_ParamDefaultTypeInternal() {}
  union {
    StopRebuildingRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StopRebuildingRequest_ParamDefaultTypeInternal _StopRebuildingRequest_Param_default_instance_;
constexpr StopRebuildingRequest::StopRebuildingRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct StopRebuildingRequestDefaultTypeInternal {
  constexpr StopRebuildingRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StopRebuildingRequestDefaultTypeInternal() {}
  union {
    StopRebuildingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StopRebuildingRequestDefaultTypeInternal _StopRebuildingRequest_default_instance_;
constexpr StopRebuildingResponse_Result::StopRebuildingResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct StopRebuildingResponse_ResultDefaultTypeInternal {
  constexpr StopRebuildingResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StopRebuildingResponse_ResultDefaultTypeInternal() {}
  union {
    StopRebuildingResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StopRebuildingResponse_ResultDefaultTypeInternal _StopRebuildingResponse_Result_default_instance_;
constexpr StopRebuildingResponse::StopRebuildingResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct StopRebuildingResponseDefaultTypeInternal {
  constexpr StopRebuildingResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StopRebuildingResponseDefaultTypeInternal() {}
  union {
    StopRebuildingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StopRebuildingResponseDefaultTypeInternal _StopRebuildingResponse_default_instance_;
constexpr UpdateEventWrrRequest_Param::UpdateEventWrrRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , weight_(PROTOBUF_LONGLONG(0)){}
struct UpdateEventWrrRequest_ParamDefaultTypeInternal {
  constexpr UpdateEventWrrRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateEventWrrRequest_ParamDefaultTypeInternal() {}
  union {
    UpdateEventWrrRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateEventWrrRequest_ParamDefaultTypeInternal _UpdateEventWrrRequest_Param_default_instance_;
constexpr UpdateEventWrrRequest::UpdateEventWrrRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct UpdateEventWrrRequestDefaultTypeInternal {
  constexpr UpdateEventWrrRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateEventWrrRequestDefaultTypeInternal() {}
  union {
    UpdateEventWrrRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateEventWrrRequestDefaultTypeInternal _UpdateEventWrrRequest_default_instance_;
constexpr UpdateEventWrrResponse_Result::UpdateEventWrrResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct UpdateEventWrrResponse_ResultDefaultTypeInternal {
  constexpr UpdateEventWrrResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateEventWrrResponse_ResultDefaultTypeInternal() {}
  union {
    UpdateEventWrrResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateEventWrrResponse_ResultDefaultTypeInternal _UpdateEventWrrResponse_Result_default_instance_;
constexpr UpdateEventWrrResponse::UpdateEventWrrResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct UpdateEventWrrResponseDefaultTypeInternal {
  constexpr UpdateEventWrrResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateEventWrrResponseDefaultTypeInternal() {}
  union {
    UpdateEventWrrResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateEventWrrResponseDefaultTypeInternal _UpdateEventWrrResponse_default_instance_;
constexpr AddSpareRequest_SpareDeviceName::AddSpareRequest_SpareDeviceName(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : devicename_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct AddSpareRequest_SpareDeviceNameDefaultTypeInternal {
  constexpr AddSpareRequest_SpareDeviceNameDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AddSpareRequest_SpareDeviceNameDefaultTypeInternal() {}
  union {
    AddSpareRequest_SpareDeviceName _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AddSpareRequest_SpareDeviceNameDefaultTypeInternal _AddSpareRequest_SpareDeviceName_default_instance_;
constexpr AddSpareRequest_Param::AddSpareRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : spare_()
  , array_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct AddSpareRequest_ParamDefaultTypeInternal {
  constexpr AddSpareRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AddSpareRequest_ParamDefaultTypeInternal() {}
  union {
    AddSpareRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AddSpareRequest_ParamDefaultTypeInternal _AddSpareRequest_Param_default_instance_;
constexpr AddSpareRequest::AddSpareRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct AddSpareRequestDefaultTypeInternal {
  constexpr AddSpareRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AddSpareRequestDefaultTypeInternal() {}
  union {
    AddSpareRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AddSpareRequestDefaultTypeInternal _AddSpareRequest_default_instance_;
constexpr AddSpareResponse_Result::AddSpareResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct AddSpareResponse_ResultDefaultTypeInternal {
  constexpr AddSpareResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AddSpareResponse_ResultDefaultTypeInternal() {}
  union {
    AddSpareResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AddSpareResponse_ResultDefaultTypeInternal _AddSpareResponse_Result_default_instance_;
constexpr AddSpareResponse::AddSpareResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct AddSpareResponseDefaultTypeInternal {
  constexpr AddSpareResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AddSpareResponseDefaultTypeInternal() {}
  union {
    AddSpareResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AddSpareResponseDefaultTypeInternal _AddSpareResponse_default_instance_;
constexpr DeviceNameList::DeviceNameList(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : devicename_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeviceNameListDefaultTypeInternal {
  constexpr DeviceNameListDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeviceNameListDefaultTypeInternal() {}
  union {
    DeviceNameList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeviceNameListDefaultTypeInternal _DeviceNameList_default_instance_;
constexpr RemoveSpareRequest_SpareDeviceName::RemoveSpareRequest_SpareDeviceName(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : devicename_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct RemoveSpareRequest_SpareDeviceNameDefaultTypeInternal {
  constexpr RemoveSpareRequest_SpareDeviceNameDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveSpareRequest_SpareDeviceNameDefaultTypeInternal() {}
  union {
    RemoveSpareRequest_SpareDeviceName _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveSpareRequest_SpareDeviceNameDefaultTypeInternal _RemoveSpareRequest_SpareDeviceName_default_instance_;
constexpr RemoveSpareRequest_Param::RemoveSpareRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : spare_()
  , array_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct RemoveSpareRequest_ParamDefaultTypeInternal {
  constexpr RemoveSpareRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveSpareRequest_ParamDefaultTypeInternal() {}
  union {
    RemoveSpareRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveSpareRequest_ParamDefaultTypeInternal _RemoveSpareRequest_Param_default_instance_;
constexpr RemoveSpareRequest::RemoveSpareRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct RemoveSpareRequestDefaultTypeInternal {
  constexpr RemoveSpareRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveSpareRequestDefaultTypeInternal() {}
  union {
    RemoveSpareRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveSpareRequestDefaultTypeInternal _RemoveSpareRequest_default_instance_;
constexpr RemoveSpareResponse_Result::RemoveSpareResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct RemoveSpareResponse_ResultDefaultTypeInternal {
  constexpr RemoveSpareResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveSpareResponse_ResultDefaultTypeInternal() {}
  union {
    RemoveSpareResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveSpareResponse_ResultDefaultTypeInternal _RemoveSpareResponse_Result_default_instance_;
constexpr RemoveSpareResponse::RemoveSpareResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct RemoveSpareResponseDefaultTypeInternal {
  constexpr RemoveSpareResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveSpareResponseDefaultTypeInternal() {}
  union {
    RemoveSpareResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveSpareResponseDefaultTypeInternal _RemoveSpareResponse_default_instance_;
constexpr ReplaceArrayDeviceRequest_Param::ReplaceArrayDeviceRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : array_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , device_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ReplaceArrayDeviceRequest_ParamDefaultTypeInternal {
  constexpr ReplaceArrayDeviceRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReplaceArrayDeviceRequest_ParamDefaultTypeInternal() {}
  union {
    ReplaceArrayDeviceRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ReplaceArrayDeviceRequest_ParamDefaultTypeInternal _ReplaceArrayDeviceRequest_Param_default_instance_;
constexpr ReplaceArrayDeviceRequest::ReplaceArrayDeviceRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct ReplaceArrayDeviceRequestDefaultTypeInternal {
  constexpr ReplaceArrayDeviceRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReplaceArrayDeviceRequestDefaultTypeInternal() {}
  union {
    ReplaceArrayDeviceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ReplaceArrayDeviceRequestDefaultTypeInternal _ReplaceArrayDeviceRequest_default_instance_;
constexpr ReplaceArrayDeviceResponse_Result::ReplaceArrayDeviceResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct ReplaceArrayDeviceResponse_ResultDefaultTypeInternal {
  constexpr ReplaceArrayDeviceResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReplaceArrayDeviceResponse_ResultDefaultTypeInternal() {}
  union {
    ReplaceArrayDeviceResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ReplaceArrayDeviceResponse_ResultDefaultTypeInternal _ReplaceArrayDeviceResponse_Result_default_instance_;
constexpr ReplaceArrayDeviceResponse::ReplaceArrayDeviceResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct ReplaceArrayDeviceResponseDefaultTypeInternal {
  constexpr ReplaceArrayDeviceResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReplaceArrayDeviceResponseDefaultTypeInternal() {}
  union {
    ReplaceArrayDeviceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ReplaceArrayDeviceResponseDefaultTypeInternal _ReplaceArrayDeviceResponse_default_instance_;
constexpr CreateArrayRequest_Param::CreateArrayRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : buffer_()
  , data_()
  , spare_()
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , raidtype_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CreateArrayRequest_ParamDefaultTypeInternal {
  constexpr CreateArrayRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateArrayRequest_ParamDefaultTypeInternal() {}
  union {
    CreateArrayRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateArrayRequest_ParamDefaultTypeInternal _CreateArrayRequest_Param_default_instance_;
constexpr CreateArrayRequest::CreateArrayRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct CreateArrayRequestDefaultTypeInternal {
  constexpr CreateArrayRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateArrayRequestDefaultTypeInternal() {}
  union {
    CreateArrayRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateArrayRequestDefaultTypeInternal _CreateArrayRequest_default_instance_;
constexpr CreateArrayResponse_Result::CreateArrayResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct CreateArrayResponse_ResultDefaultTypeInternal {
  constexpr CreateArrayResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateArrayResponse_ResultDefaultTypeInternal() {}
  union {
    CreateArrayResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateArrayResponse_ResultDefaultTypeInternal _CreateArrayResponse_Result_default_instance_;
constexpr CreateArrayResponse::CreateArrayResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct CreateArrayResponseDefaultTypeInternal {
  constexpr CreateArrayResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateArrayResponseDefaultTypeInternal() {}
  union {
    CreateArrayResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateArrayResponseDefaultTypeInternal _CreateArrayResponse_default_instance_;
constexpr AutocreateArrayRequest_Param::AutocreateArrayRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : buffer_()
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , raidtype_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , numdata_(0)
  , numspare_(0){}
struct AutocreateArrayRequest_ParamDefaultTypeInternal {
  constexpr AutocreateArrayRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AutocreateArrayRequest_ParamDefaultTypeInternal() {}
  union {
    AutocreateArrayRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AutocreateArrayRequest_ParamDefaultTypeInternal _AutocreateArrayRequest_Param_default_instance_;
constexpr AutocreateArrayRequest::AutocreateArrayRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct AutocreateArrayRequestDefaultTypeInternal {
  constexpr AutocreateArrayRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AutocreateArrayRequestDefaultTypeInternal() {}
  union {
    AutocreateArrayRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AutocreateArrayRequestDefaultTypeInternal _AutocreateArrayRequest_default_instance_;
constexpr AutocreateArrayResponse_Result::AutocreateArrayResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct AutocreateArrayResponse_ResultDefaultTypeInternal {
  constexpr AutocreateArrayResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AutocreateArrayResponse_ResultDefaultTypeInternal() {}
  union {
    AutocreateArrayResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AutocreateArrayResponse_ResultDefaultTypeInternal _AutocreateArrayResponse_Result_default_instance_;
constexpr AutocreateArrayResponse::AutocreateArrayResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct AutocreateArrayResponseDefaultTypeInternal {
  constexpr AutocreateArrayResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AutocreateArrayResponseDefaultTypeInternal() {}
  union {
    AutocreateArrayResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AutocreateArrayResponseDefaultTypeInternal _AutocreateArrayResponse_default_instance_;
constexpr DeleteArrayRequest_Param::DeleteArrayRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteArrayRequest_ParamDefaultTypeInternal {
  constexpr DeleteArrayRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteArrayRequest_ParamDefaultTypeInternal() {}
  union {
    DeleteArrayRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteArrayRequest_ParamDefaultTypeInternal _DeleteArrayRequest_Param_default_instance_;
constexpr DeleteArrayRequest::DeleteArrayRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct DeleteArrayRequestDefaultTypeInternal {
  constexpr DeleteArrayRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteArrayRequestDefaultTypeInternal() {}
  union {
    DeleteArrayRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteArrayRequestDefaultTypeInternal _DeleteArrayRequest_default_instance_;
constexpr DeleteArrayResponse_Result::DeleteArrayResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct DeleteArrayResponse_ResultDefaultTypeInternal {
  constexpr DeleteArrayResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteArrayResponse_ResultDefaultTypeInternal() {}
  union {
    DeleteArrayResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteArrayResponse_ResultDefaultTypeInternal _DeleteArrayResponse_Result_default_instance_;
constexpr DeleteArrayResponse::DeleteArrayResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct DeleteArrayResponseDefaultTypeInternal {
  constexpr DeleteArrayResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteArrayResponseDefaultTypeInternal() {}
  union {
    DeleteArrayResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteArrayResponseDefaultTypeInternal _DeleteArrayResponse_default_instance_;
constexpr MountArrayRequest_Param::MountArrayRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , targetaddress_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , enablewritethrough_(false){}
struct MountArrayRequest_ParamDefaultTypeInternal {
  constexpr MountArrayRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MountArrayRequest_ParamDefaultTypeInternal() {}
  union {
    MountArrayRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MountArrayRequest_ParamDefaultTypeInternal _MountArrayRequest_Param_default_instance_;
constexpr MountArrayRequest::MountArrayRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct MountArrayRequestDefaultTypeInternal {
  constexpr MountArrayRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MountArrayRequestDefaultTypeInternal() {}
  union {
    MountArrayRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MountArrayRequestDefaultTypeInternal _MountArrayRequest_default_instance_;
constexpr MountArrayResponse_Result::MountArrayResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct MountArrayResponse_ResultDefaultTypeInternal {
  constexpr MountArrayResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MountArrayResponse_ResultDefaultTypeInternal() {}
  union {
    MountArrayResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MountArrayResponse_ResultDefaultTypeInternal _MountArrayResponse_Result_default_instance_;
constexpr MountArrayResponse::MountArrayResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct MountArrayResponseDefaultTypeInternal {
  constexpr MountArrayResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MountArrayResponseDefaultTypeInternal() {}
  union {
    MountArrayResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MountArrayResponseDefaultTypeInternal _MountArrayResponse_default_instance_;
constexpr UnmountArrayRequest_Param::UnmountArrayRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct UnmountArrayRequest_ParamDefaultTypeInternal {
  constexpr UnmountArrayRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UnmountArrayRequest_ParamDefaultTypeInternal() {}
  union {
    UnmountArrayRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UnmountArrayRequest_ParamDefaultTypeInternal _UnmountArrayRequest_Param_default_instance_;
constexpr UnmountArrayRequest::UnmountArrayRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct UnmountArrayRequestDefaultTypeInternal {
  constexpr UnmountArrayRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UnmountArrayRequestDefaultTypeInternal() {}
  union {
    UnmountArrayRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UnmountArrayRequestDefaultTypeInternal _UnmountArrayRequest_default_instance_;
constexpr UnmountArrayResponse_Result::UnmountArrayResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct UnmountArrayResponse_ResultDefaultTypeInternal {
  constexpr UnmountArrayResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UnmountArrayResponse_ResultDefaultTypeInternal() {}
  union {
    UnmountArrayResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UnmountArrayResponse_ResultDefaultTypeInternal _UnmountArrayResponse_Result_default_instance_;
constexpr UnmountArrayResponse::UnmountArrayResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct UnmountArrayResponseDefaultTypeInternal {
  constexpr UnmountArrayResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UnmountArrayResponseDefaultTypeInternal() {}
  union {
    UnmountArrayResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UnmountArrayResponseDefaultTypeInternal _UnmountArrayResponse_default_instance_;
constexpr Array::Array(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : devicelist_()
  , uniqueid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , state_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , situation_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , createdatetime_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , updatedatetime_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rebuildingprogress_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , gcmode_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , metaraid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , dataraid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , index_(0)
  , writethroughenabled_(false)
  , capacity_(PROTOBUF_ULONGLONG(0))
  , used_(PROTOBUF_ULONGLONG(0)){}
struct ArrayDefaultTypeInternal {
  constexpr ArrayDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ArrayDefaultTypeInternal() {}
  union {
    Array _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ArrayDefaultTypeInternal _Array_default_instance_;
constexpr ListArrayRequest::ListArrayRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListArrayRequestDefaultTypeInternal {
  constexpr ListArrayRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListArrayRequestDefaultTypeInternal() {}
  union {
    ListArrayRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListArrayRequestDefaultTypeInternal _ListArrayRequest_default_instance_;
constexpr ListArrayResponse_Result_ArrayList::ListArrayResponse_Result_ArrayList(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : arraylist_(){}
struct ListArrayResponse_Result_ArrayListDefaultTypeInternal {
  constexpr ListArrayResponse_Result_ArrayListDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListArrayResponse_Result_ArrayListDefaultTypeInternal() {}
  union {
    ListArrayResponse_Result_ArrayList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListArrayResponse_Result_ArrayListDefaultTypeInternal _ListArrayResponse_Result_ArrayList_default_instance_;
constexpr ListArrayResponse_Result::ListArrayResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr)
  , data_(nullptr){}
struct ListArrayResponse_ResultDefaultTypeInternal {
  constexpr ListArrayResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListArrayResponse_ResultDefaultTypeInternal() {}
  union {
    ListArrayResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListArrayResponse_ResultDefaultTypeInternal _ListArrayResponse_Result_default_instance_;
constexpr ListArrayResponse::ListArrayResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct ListArrayResponseDefaultTypeInternal {
  constexpr ListArrayResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListArrayResponseDefaultTypeInternal() {}
  union {
    ListArrayResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListArrayResponseDefaultTypeInternal _ListArrayResponse_default_instance_;
constexpr ArrayInfoRequest_Param::ArrayInfoRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ArrayInfoRequest_ParamDefaultTypeInternal {
  constexpr ArrayInfoRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ArrayInfoRequest_ParamDefaultTypeInternal() {}
  union {
    ArrayInfoRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ArrayInfoRequest_ParamDefaultTypeInternal _ArrayInfoRequest_Param_default_instance_;
constexpr ArrayInfoRequest::ArrayInfoRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct ArrayInfoRequestDefaultTypeInternal {
  constexpr ArrayInfoRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ArrayInfoRequestDefaultTypeInternal() {}
  union {
    ArrayInfoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ArrayInfoRequestDefaultTypeInternal _ArrayInfoRequest_default_instance_;
constexpr ArrayInfoResponse_Result::ArrayInfoResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr)
  , data_(nullptr){}
struct ArrayInfoResponse_ResultDefaultTypeInternal {
  constexpr ArrayInfoResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ArrayInfoResponse_ResultDefaultTypeInternal() {}
  union {
    ArrayInfoResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ArrayInfoResponse_ResultDefaultTypeInternal _ArrayInfoResponse_Result_default_instance_;
constexpr ArrayInfoResponse::ArrayInfoResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct ArrayInfoResponseDefaultTypeInternal {
  constexpr ArrayInfoResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ArrayInfoResponseDefaultTypeInternal() {}
  union {
    ArrayInfoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ArrayInfoResponseDefaultTypeInternal _ArrayInfoResponse_default_instance_;
constexpr RebuildArrayRequest_Param::RebuildArrayRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct RebuildArrayRequest_ParamDefaultTypeInternal {
  constexpr RebuildArrayRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RebuildArrayRequest_ParamDefaultTypeInternal() {}
  union {
    RebuildArrayRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RebuildArrayRequest_ParamDefaultTypeInternal _RebuildArrayRequest_Param_default_instance_;
constexpr RebuildArrayRequest::RebuildArrayRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct RebuildArrayRequestDefaultTypeInternal {
  constexpr RebuildArrayRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RebuildArrayRequestDefaultTypeInternal() {}
  union {
    RebuildArrayRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RebuildArrayRequestDefaultTypeInternal _RebuildArrayRequest_default_instance_;
constexpr RebuildArrayResponse_Result::RebuildArrayResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct RebuildArrayResponse_ResultDefaultTypeInternal {
  constexpr RebuildArrayResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RebuildArrayResponse_ResultDefaultTypeInternal() {}
  union {
    RebuildArrayResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RebuildArrayResponse_ResultDefaultTypeInternal _RebuildArrayResponse_Result_default_instance_;
constexpr RebuildArrayResponse::RebuildArrayResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct RebuildArrayResponseDefaultTypeInternal {
  constexpr RebuildArrayResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RebuildArrayResponseDefaultTypeInternal() {}
  union {
    RebuildArrayResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RebuildArrayResponseDefaultTypeInternal _RebuildArrayResponse_default_instance_;
constexpr ListNodeRequest::ListNodeRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListNodeRequestDefaultTypeInternal {
  constexpr ListNodeRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListNodeRequestDefaultTypeInternal() {}
  union {
    ListNodeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListNodeRequestDefaultTypeInternal _ListNodeRequest_default_instance_;
constexpr ListNodeResponse_Result_Node::ListNodeResponse_Result_Node(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , ip_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , lastseen_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListNodeResponse_Result_NodeDefaultTypeInternal {
  constexpr ListNodeResponse_Result_NodeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListNodeResponse_Result_NodeDefaultTypeInternal() {}
  union {
    ListNodeResponse_Result_Node _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListNodeResponse_Result_NodeDefaultTypeInternal _ListNodeResponse_Result_Node_default_instance_;
constexpr ListNodeResponse_Result::ListNodeResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_()
  , status_(nullptr){}
struct ListNodeResponse_ResultDefaultTypeInternal {
  constexpr ListNodeResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListNodeResponse_ResultDefaultTypeInternal() {}
  union {
    ListNodeResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListNodeResponse_ResultDefaultTypeInternal _ListNodeResponse_Result_default_instance_;
constexpr ListNodeResponse::ListNodeResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct ListNodeResponseDefaultTypeInternal {
  constexpr ListNodeResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListNodeResponseDefaultTypeInternal() {}
  union {
    ListNodeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListNodeResponseDefaultTypeInternal _ListNodeResponse_default_instance_;
constexpr ListHaVolumeRequest::ListHaVolumeRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListHaVolumeRequestDefaultTypeInternal {
  constexpr ListHaVolumeRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListHaVolumeRequestDefaultTypeInternal() {}
  union {
    ListHaVolumeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListHaVolumeRequestDefaultTypeInternal _ListHaVolumeRequest_default_instance_;
constexpr ListHaVolumeResponse_Result_Volume::ListHaVolumeResponse_Result_Volume(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , nodename_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , arrayname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , lastseen_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , size_(PROTOBUF_LONGLONG(0))
  , id_(0){}
struct ListHaVolumeResponse_Result_VolumeDefaultTypeInternal {
  constexpr ListHaVolumeResponse_Result_VolumeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListHaVolumeResponse_Result_VolumeDefaultTypeInternal() {}
  union {
    ListHaVolumeResponse_Result_Volume _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListHaVolumeResponse_Result_VolumeDefaultTypeInternal _ListHaVolumeResponse_Result_Volume_default_instance_;
constexpr ListHaVolumeResponse_Result::ListHaVolumeResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_()
  , status_(nullptr){}
struct ListHaVolumeResponse_ResultDefaultTypeInternal {
  constexpr ListHaVolumeResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListHaVolumeResponse_ResultDefaultTypeInternal() {}
  union {
    ListHaVolumeResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListHaVolumeResponse_ResultDefaultTypeInternal _ListHaVolumeResponse_Result_default_instance_;
constexpr ListHaVolumeResponse::ListHaVolumeResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct ListHaVolumeResponseDefaultTypeInternal {
  constexpr ListHaVolumeResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListHaVolumeResponseDefaultTypeInternal() {}
  union {
    ListHaVolumeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListHaVolumeResponseDefaultTypeInternal _ListHaVolumeResponse_default_instance_;
constexpr ListHaReplicationRequest::ListHaReplicationRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListHaReplicationRequestDefaultTypeInternal {
  constexpr ListHaReplicationRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListHaReplicationRequestDefaultTypeInternal() {}
  union {
    ListHaReplicationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListHaReplicationRequestDefaultTypeInternal _ListHaReplicationRequest_default_instance_;
constexpr ListHaReplicationResponse_Result_Replication::ListHaReplicationResponse_Result_Replication(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(0)
  , sourcevolumeid_(0)
  , sourcewalvolume_id_(0)
  , destinationvolumeid_(0)
  , destinationwalvolumeid_(0){}
struct ListHaReplicationResponse_Result_ReplicationDefaultTypeInternal {
  constexpr ListHaReplicationResponse_Result_ReplicationDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListHaReplicationResponse_Result_ReplicationDefaultTypeInternal() {}
  union {
    ListHaReplicationResponse_Result_Replication _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListHaReplicationResponse_Result_ReplicationDefaultTypeInternal _ListHaReplicationResponse_Result_Replication_default_instance_;
constexpr ListHaReplicationResponse_Result::ListHaReplicationResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_()
  , status_(nullptr){}
struct ListHaReplicationResponse_ResultDefaultTypeInternal {
  constexpr ListHaReplicationResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListHaReplicationResponse_ResultDefaultTypeInternal() {}
  union {
    ListHaReplicationResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListHaReplicationResponse_ResultDefaultTypeInternal _ListHaReplicationResponse_Result_default_instance_;
constexpr ListHaReplicationResponse::ListHaReplicationResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct ListHaReplicationResponseDefaultTypeInternal {
  constexpr ListHaReplicationResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListHaReplicationResponseDefaultTypeInternal() {}
  union {
    ListHaReplicationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListHaReplicationResponseDefaultTypeInternal _ListHaReplicationResponse_default_instance_;
constexpr StartHaReplicationRequest_Param::StartHaReplicationRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : primarynodename_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , primaryarrayname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , primaryvolumename_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , primarywalvolumename_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , secondarynodename_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , secondaryarrayname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , secondaryvolumename_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , secondarywalvolumename_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , stuats_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , timestamp_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct StartHaReplicationRequest_ParamDefaultTypeInternal {
  constexpr StartHaReplicationRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StartHaReplicationRequest_ParamDefaultTypeInternal() {}
  union {
    StartHaReplicationRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StartHaReplicationRequest_ParamDefaultTypeInternal _StartHaReplicationRequest_Param_default_instance_;
constexpr StartHaReplicationRequest::StartHaReplicationRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct StartHaReplicationRequestDefaultTypeInternal {
  constexpr StartHaReplicationRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StartHaReplicationRequestDefaultTypeInternal() {}
  union {
    StartHaReplicationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StartHaReplicationRequestDefaultTypeInternal _StartHaReplicationRequest_default_instance_;
constexpr StartHaReplicationResponse_Result::StartHaReplicationResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct StartHaReplicationResponse_ResultDefaultTypeInternal {
  constexpr StartHaReplicationResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StartHaReplicationResponse_ResultDefaultTypeInternal() {}
  union {
    StartHaReplicationResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StartHaReplicationResponse_ResultDefaultTypeInternal _StartHaReplicationResponse_Result_default_instance_;
constexpr StartHaReplicationResponse::StartHaReplicationResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct StartHaReplicationResponseDefaultTypeInternal {
  constexpr StartHaReplicationResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StartHaReplicationResponseDefaultTypeInternal() {}
  union {
    StartHaReplicationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StartHaReplicationResponseDefaultTypeInternal _StartHaReplicationResponse_default_instance_;
constexpr SetLogLevelRequest_Param::SetLogLevelRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : level_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct SetLogLevelRequest_ParamDefaultTypeInternal {
  constexpr SetLogLevelRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetLogLevelRequest_ParamDefaultTypeInternal() {}
  union {
    SetLogLevelRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetLogLevelRequest_ParamDefaultTypeInternal _SetLogLevelRequest_Param_default_instance_;
constexpr SetLogLevelRequest::SetLogLevelRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct SetLogLevelRequestDefaultTypeInternal {
  constexpr SetLogLevelRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetLogLevelRequestDefaultTypeInternal() {}
  union {
    SetLogLevelRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetLogLevelRequestDefaultTypeInternal _SetLogLevelRequest_default_instance_;
constexpr SetLogLevelResponse_Result::SetLogLevelResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct SetLogLevelResponse_ResultDefaultTypeInternal {
  constexpr SetLogLevelResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetLogLevelResponse_ResultDefaultTypeInternal() {}
  union {
    SetLogLevelResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetLogLevelResponse_ResultDefaultTypeInternal _SetLogLevelResponse_Result_default_instance_;
constexpr SetLogLevelResponse::SetLogLevelResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct SetLogLevelResponseDefaultTypeInternal {
  constexpr SetLogLevelResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetLogLevelResponseDefaultTypeInternal() {}
  union {
    SetLogLevelResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetLogLevelResponseDefaultTypeInternal _SetLogLevelResponse_default_instance_;
constexpr SetLogPreferenceRequest_Param::SetLogPreferenceRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : structuredlogging_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct SetLogPreferenceRequest_ParamDefaultTypeInternal {
  constexpr SetLogPreferenceRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetLogPreferenceRequest_ParamDefaultTypeInternal() {}
  union {
    SetLogPreferenceRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetLogPreferenceRequest_ParamDefaultTypeInternal _SetLogPreferenceRequest_Param_default_instance_;
constexpr SetLogPreferenceRequest::SetLogPreferenceRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct SetLogPreferenceRequestDefaultTypeInternal {
  constexpr SetLogPreferenceRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetLogPreferenceRequestDefaultTypeInternal() {}
  union {
    SetLogPreferenceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetLogPreferenceRequestDefaultTypeInternal _SetLogPreferenceRequest_default_instance_;
constexpr SetLogPreferenceResponse_Result::SetLogPreferenceResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct SetLogPreferenceResponse_ResultDefaultTypeInternal {
  constexpr SetLogPreferenceResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetLogPreferenceResponse_ResultDefaultTypeInternal() {}
  union {
    SetLogPreferenceResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetLogPreferenceResponse_ResultDefaultTypeInternal _SetLogPreferenceResponse_Result_default_instance_;
constexpr SetLogPreferenceResponse::SetLogPreferenceResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct SetLogPreferenceResponseDefaultTypeInternal {
  constexpr SetLogPreferenceResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetLogPreferenceResponseDefaultTypeInternal() {}
  union {
    SetLogPreferenceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetLogPreferenceResponseDefaultTypeInternal _SetLogPreferenceResponse_default_instance_;
constexpr LoggerInfoRequest::LoggerInfoRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct LoggerInfoRequestDefaultTypeInternal {
  constexpr LoggerInfoRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~LoggerInfoRequestDefaultTypeInternal() {}
  union {
    LoggerInfoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT LoggerInfoRequestDefaultTypeInternal _LoggerInfoRequest_default_instance_;
constexpr LoggerInfoResponse_Result_LoggerInfo::LoggerInfoResponse_Result_LoggerInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : minorlogpath_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , majorlogpath_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , logfilesizeinmb_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , minallowableloglevel_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , filterincluded_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , filterexcluded_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , logfilerotationcount_(0)
  , filterenabled_(0)
  , structuredlogging_(false){}
struct LoggerInfoResponse_Result_LoggerInfoDefaultTypeInternal {
  constexpr LoggerInfoResponse_Result_LoggerInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~LoggerInfoResponse_Result_LoggerInfoDefaultTypeInternal() {}
  union {
    LoggerInfoResponse_Result_LoggerInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT LoggerInfoResponse_Result_LoggerInfoDefaultTypeInternal _LoggerInfoResponse_Result_LoggerInfo_default_instance_;
constexpr LoggerInfoResponse_Result::LoggerInfoResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr)
  , data_(nullptr){}
struct LoggerInfoResponse_ResultDefaultTypeInternal {
  constexpr LoggerInfoResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~LoggerInfoResponse_ResultDefaultTypeInternal() {}
  union {
    LoggerInfoResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT LoggerInfoResponse_ResultDefaultTypeInternal _LoggerInfoResponse_Result_default_instance_;
constexpr LoggerInfoResponse::LoggerInfoResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct LoggerInfoResponseDefaultTypeInternal {
  constexpr LoggerInfoResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~LoggerInfoResponseDefaultTypeInternal() {}
  union {
    LoggerInfoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT LoggerInfoResponseDefaultTypeInternal _LoggerInfoResponse_default_instance_;
constexpr GetLogLevelRequest::GetLogLevelRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetLogLevelRequestDefaultTypeInternal {
  constexpr GetLogLevelRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetLogLevelRequestDefaultTypeInternal() {}
  union {
    GetLogLevelRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetLogLevelRequestDefaultTypeInternal _GetLogLevelRequest_default_instance_;
constexpr GetLogLevelResponse_Result_LogLevel::GetLogLevelResponse_Result_LogLevel(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : level_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetLogLevelResponse_Result_LogLevelDefaultTypeInternal {
  constexpr GetLogLevelResponse_Result_LogLevelDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetLogLevelResponse_Result_LogLevelDefaultTypeInternal() {}
  union {
    GetLogLevelResponse_Result_LogLevel _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetLogLevelResponse_Result_LogLevelDefaultTypeInternal _GetLogLevelResponse_Result_LogLevel_default_instance_;
constexpr GetLogLevelResponse_Result::GetLogLevelResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr)
  , data_(nullptr){}
struct GetLogLevelResponse_ResultDefaultTypeInternal {
  constexpr GetLogLevelResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetLogLevelResponse_ResultDefaultTypeInternal() {}
  union {
    GetLogLevelResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetLogLevelResponse_ResultDefaultTypeInternal _GetLogLevelResponse_Result_default_instance_;
constexpr GetLogLevelResponse::GetLogLevelResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct GetLogLevelResponseDefaultTypeInternal {
  constexpr GetLogLevelResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetLogLevelResponseDefaultTypeInternal() {}
  union {
    GetLogLevelResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetLogLevelResponseDefaultTypeInternal _GetLogLevelResponse_default_instance_;
constexpr ApplyLogFilterRequest::ApplyLogFilterRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ApplyLogFilterRequestDefaultTypeInternal {
  constexpr ApplyLogFilterRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ApplyLogFilterRequestDefaultTypeInternal() {}
  union {
    ApplyLogFilterRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ApplyLogFilterRequestDefaultTypeInternal _ApplyLogFilterRequest_default_instance_;
constexpr ApplyLogFilterResponse_Result::ApplyLogFilterResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct ApplyLogFilterResponse_ResultDefaultTypeInternal {
  constexpr ApplyLogFilterResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ApplyLogFilterResponse_ResultDefaultTypeInternal() {}
  union {
    ApplyLogFilterResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ApplyLogFilterResponse_ResultDefaultTypeInternal _ApplyLogFilterResponse_Result_default_instance_;
constexpr ApplyLogFilterResponse::ApplyLogFilterResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct ApplyLogFilterResponseDefaultTypeInternal {
  constexpr ApplyLogFilterResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ApplyLogFilterResponseDefaultTypeInternal() {}
  union {
    ApplyLogFilterResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ApplyLogFilterResponseDefaultTypeInternal _ApplyLogFilterResponse_default_instance_;
constexpr CreateDeviceRequest_Param::CreateDeviceRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , devtype_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , numblocks_(0u)
  , blocksize_(0u)
  , numa_(0u){}
struct CreateDeviceRequest_ParamDefaultTypeInternal {
  constexpr CreateDeviceRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateDeviceRequest_ParamDefaultTypeInternal() {}
  union {
    CreateDeviceRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateDeviceRequest_ParamDefaultTypeInternal _CreateDeviceRequest_Param_default_instance_;
constexpr CreateDeviceRequest::CreateDeviceRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct CreateDeviceRequestDefaultTypeInternal {
  constexpr CreateDeviceRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateDeviceRequestDefaultTypeInternal() {}
  union {
    CreateDeviceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateDeviceRequestDefaultTypeInternal _CreateDeviceRequest_default_instance_;
constexpr CreateDeviceResponse_Result::CreateDeviceResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct CreateDeviceResponse_ResultDefaultTypeInternal {
  constexpr CreateDeviceResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateDeviceResponse_ResultDefaultTypeInternal() {}
  union {
    CreateDeviceResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateDeviceResponse_ResultDefaultTypeInternal _CreateDeviceResponse_Result_default_instance_;
constexpr CreateDeviceResponse::CreateDeviceResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct CreateDeviceResponseDefaultTypeInternal {
  constexpr CreateDeviceResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateDeviceResponseDefaultTypeInternal() {}
  union {
    CreateDeviceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateDeviceResponseDefaultTypeInternal _CreateDeviceResponse_default_instance_;
constexpr ScanDeviceRequest::ScanDeviceRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ScanDeviceRequestDefaultTypeInternal {
  constexpr ScanDeviceRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ScanDeviceRequestDefaultTypeInternal() {}
  union {
    ScanDeviceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ScanDeviceRequestDefaultTypeInternal _ScanDeviceRequest_default_instance_;
constexpr ScanDeviceResponse_Result::ScanDeviceResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct ScanDeviceResponse_ResultDefaultTypeInternal {
  constexpr ScanDeviceResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ScanDeviceResponse_ResultDefaultTypeInternal() {}
  union {
    ScanDeviceResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ScanDeviceResponse_ResultDefaultTypeInternal _ScanDeviceResponse_Result_default_instance_;
constexpr ScanDeviceResponse::ScanDeviceResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct ScanDeviceResponseDefaultTypeInternal {
  constexpr ScanDeviceResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ScanDeviceResponseDefaultTypeInternal() {}
  union {
    ScanDeviceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ScanDeviceResponseDefaultTypeInternal _ScanDeviceResponse_default_instance_;
constexpr Device::Device(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , type_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , class__(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , modelnumber_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , numa_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , serialnumber_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , size_(PROTOBUF_ULONGLONG(0)){}
struct DeviceDefaultTypeInternal {
  constexpr DeviceDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeviceDefaultTypeInternal() {}
  union {
    Device _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeviceDefaultTypeInternal _Device_default_instance_;
constexpr ListDeviceRequest::ListDeviceRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListDeviceRequestDefaultTypeInternal {
  constexpr ListDeviceRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListDeviceRequestDefaultTypeInternal() {}
  union {
    ListDeviceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListDeviceRequestDefaultTypeInternal _ListDeviceRequest_default_instance_;
constexpr ListDeviceResponse_Result_DeviceList::ListDeviceResponse_Result_DeviceList(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : devicelist_(){}
struct ListDeviceResponse_Result_DeviceListDefaultTypeInternal {
  constexpr ListDeviceResponse_Result_DeviceListDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListDeviceResponse_Result_DeviceListDefaultTypeInternal() {}
  union {
    ListDeviceResponse_Result_DeviceList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListDeviceResponse_Result_DeviceListDefaultTypeInternal _ListDeviceResponse_Result_DeviceList_default_instance_;
constexpr ListDeviceResponse_Result::ListDeviceResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr)
  , data_(nullptr){}
struct ListDeviceResponse_ResultDefaultTypeInternal {
  constexpr ListDeviceResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListDeviceResponse_ResultDefaultTypeInternal() {}
  union {
    ListDeviceResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListDeviceResponse_ResultDefaultTypeInternal _ListDeviceResponse_Result_default_instance_;
constexpr ListDeviceResponse::ListDeviceResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct ListDeviceResponseDefaultTypeInternal {
  constexpr ListDeviceResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListDeviceResponseDefaultTypeInternal() {}
  union {
    ListDeviceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListDeviceResponseDefaultTypeInternal _ListDeviceResponse_default_instance_;
constexpr SmartLog::SmartLog(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : temperaturesensor_()
  , availablesparespace_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , temperature_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , devicereliability_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , readonly_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , volatilememorybackup_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , currenttemperature_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , availablespare_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , availablesparethreshold_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , lifepercentageused_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , dataunitsread_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , dataunitswritten_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , hostreadcommands_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , hostwritecommands_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , controllerbusytime_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , powercycles_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , poweronhours_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , unsafeshutdowns_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , unrecoverablemediaerrors_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , lifetimeerrorlogentries_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , warningtemperaturetime_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , criticaltemperaturetime_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct SmartLogDefaultTypeInternal {
  constexpr SmartLogDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SmartLogDefaultTypeInternal() {}
  union {
    SmartLog _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SmartLogDefaultTypeInternal _SmartLog_default_instance_;
constexpr GetSmartLogRequest_Param::GetSmartLogRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetSmartLogRequest_ParamDefaultTypeInternal {
  constexpr GetSmartLogRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetSmartLogRequest_ParamDefaultTypeInternal() {}
  union {
    GetSmartLogRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetSmartLogRequest_ParamDefaultTypeInternal _GetSmartLogRequest_Param_default_instance_;
constexpr GetSmartLogRequest::GetSmartLogRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct GetSmartLogRequestDefaultTypeInternal {
  constexpr GetSmartLogRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetSmartLogRequestDefaultTypeInternal() {}
  union {
    GetSmartLogRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetSmartLogRequestDefaultTypeInternal _GetSmartLogRequest_default_instance_;
constexpr GetSmartLogResponse_Result::GetSmartLogResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr)
  , data_(nullptr){}
struct GetSmartLogResponse_ResultDefaultTypeInternal {
  constexpr GetSmartLogResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetSmartLogResponse_ResultDefaultTypeInternal() {}
  union {
    GetSmartLogResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetSmartLogResponse_ResultDefaultTypeInternal _GetSmartLogResponse_Result_default_instance_;
constexpr GetSmartLogResponse::GetSmartLogResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct GetSmartLogResponseDefaultTypeInternal {
  constexpr GetSmartLogResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetSmartLogResponseDefaultTypeInternal() {}
  union {
    GetSmartLogResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetSmartLogResponseDefaultTypeInternal _GetSmartLogResponse_default_instance_;
constexpr CreateSubsystemRequest_Param::CreateSubsystemRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : nqn_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , serialnumber_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , modelnumber_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , maxnamespaces_(0u)
  , allowanyhost_(false)
  , anareporting_(false){}
struct CreateSubsystemRequest_ParamDefaultTypeInternal {
  constexpr CreateSubsystemRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateSubsystemRequest_ParamDefaultTypeInternal() {}
  union {
    CreateSubsystemRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateSubsystemRequest_ParamDefaultTypeInternal _CreateSubsystemRequest_Param_default_instance_;
constexpr CreateSubsystemRequest::CreateSubsystemRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct CreateSubsystemRequestDefaultTypeInternal {
  constexpr CreateSubsystemRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateSubsystemRequestDefaultTypeInternal() {}
  union {
    CreateSubsystemRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateSubsystemRequestDefaultTypeInternal _CreateSubsystemRequest_default_instance_;
constexpr CreateSubsystemResponse_Result::CreateSubsystemResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct CreateSubsystemResponse_ResultDefaultTypeInternal {
  constexpr CreateSubsystemResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateSubsystemResponse_ResultDefaultTypeInternal() {}
  union {
    CreateSubsystemResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateSubsystemResponse_ResultDefaultTypeInternal _CreateSubsystemResponse_Result_default_instance_;
constexpr CreateSubsystemResponse::CreateSubsystemResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct CreateSubsystemResponseDefaultTypeInternal {
  constexpr CreateSubsystemResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateSubsystemResponseDefaultTypeInternal() {}
  union {
    CreateSubsystemResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateSubsystemResponseDefaultTypeInternal _CreateSubsystemResponse_default_instance_;
constexpr DeleteSubsystemRequest_Param::DeleteSubsystemRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : subnqn_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteSubsystemRequest_ParamDefaultTypeInternal {
  constexpr DeleteSubsystemRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteSubsystemRequest_ParamDefaultTypeInternal() {}
  union {
    DeleteSubsystemRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteSubsystemRequest_ParamDefaultTypeInternal _DeleteSubsystemRequest_Param_default_instance_;
constexpr DeleteSubsystemRequest::DeleteSubsystemRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct DeleteSubsystemRequestDefaultTypeInternal {
  constexpr DeleteSubsystemRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteSubsystemRequestDefaultTypeInternal() {}
  union {
    DeleteSubsystemRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteSubsystemRequestDefaultTypeInternal _DeleteSubsystemRequest_default_instance_;
constexpr DeleteSubsystemResponse_Result::DeleteSubsystemResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct DeleteSubsystemResponse_ResultDefaultTypeInternal {
  constexpr DeleteSubsystemResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteSubsystemResponse_ResultDefaultTypeInternal() {}
  union {
    DeleteSubsystemResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteSubsystemResponse_ResultDefaultTypeInternal _DeleteSubsystemResponse_Result_default_instance_;
constexpr DeleteSubsystemResponse::DeleteSubsystemResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct DeleteSubsystemResponseDefaultTypeInternal {
  constexpr DeleteSubsystemResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteSubsystemResponseDefaultTypeInternal() {}
  union {
    DeleteSubsystemResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteSubsystemResponseDefaultTypeInternal _DeleteSubsystemResponse_default_instance_;
constexpr AddListenerRequest_Param::AddListenerRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : subnqn_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , transporttype_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , targetaddress_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , transportserviceid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , uuid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct AddListenerRequest_ParamDefaultTypeInternal {
  constexpr AddListenerRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AddListenerRequest_ParamDefaultTypeInternal() {}
  union {
    AddListenerRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AddListenerRequest_ParamDefaultTypeInternal _AddListenerRequest_Param_default_instance_;
constexpr AddListenerRequest::AddListenerRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct AddListenerRequestDefaultTypeInternal {
  constexpr AddListenerRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AddListenerRequestDefaultTypeInternal() {}
  union {
    AddListenerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AddListenerRequestDefaultTypeInternal _AddListenerRequest_default_instance_;
constexpr AddListenerResponse_Result::AddListenerResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct AddListenerResponse_ResultDefaultTypeInternal {
  constexpr AddListenerResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AddListenerResponse_ResultDefaultTypeInternal() {}
  union {
    AddListenerResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AddListenerResponse_ResultDefaultTypeInternal _AddListenerResponse_Result_default_instance_;
constexpr AddListenerResponse::AddListenerResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct AddListenerResponseDefaultTypeInternal {
  constexpr AddListenerResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AddListenerResponseDefaultTypeInternal() {}
  union {
    AddListenerResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AddListenerResponseDefaultTypeInternal _AddListenerResponse_default_instance_;
constexpr RemoveListenerRequest_Param::RemoveListenerRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : subnqn_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , transporttype_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , targetaddress_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , transportserviceid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct RemoveListenerRequest_ParamDefaultTypeInternal {
  constexpr RemoveListenerRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveListenerRequest_ParamDefaultTypeInternal() {}
  union {
    RemoveListenerRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveListenerRequest_ParamDefaultTypeInternal _RemoveListenerRequest_Param_default_instance_;
constexpr RemoveListenerRequest::RemoveListenerRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct RemoveListenerRequestDefaultTypeInternal {
  constexpr RemoveListenerRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveListenerRequestDefaultTypeInternal() {}
  union {
    RemoveListenerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveListenerRequestDefaultTypeInternal _RemoveListenerRequest_default_instance_;
constexpr RemoveListenerResponse_Result::RemoveListenerResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct RemoveListenerResponse_ResultDefaultTypeInternal {
  constexpr RemoveListenerResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveListenerResponse_ResultDefaultTypeInternal() {}
  union {
    RemoveListenerResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveListenerResponse_ResultDefaultTypeInternal _RemoveListenerResponse_Result_default_instance_;
constexpr RemoveListenerResponse::RemoveListenerResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct RemoveListenerResponseDefaultTypeInternal {
  constexpr RemoveListenerResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveListenerResponseDefaultTypeInternal() {}
  union {
    RemoveListenerResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveListenerResponseDefaultTypeInternal _RemoveListenerResponse_default_instance_;
constexpr Listener_Address::Listener_Address(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : trtype_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , adrfam_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , traddr_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , trsvcid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , uuid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct Listener_AddressDefaultTypeInternal {
  constexpr Listener_AddressDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Listener_AddressDefaultTypeInternal() {}
  union {
    Listener_Address _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Listener_AddressDefaultTypeInternal _Listener_Address_default_instance_;
constexpr Listener::Listener(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : anastate_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , address_(nullptr){}
struct ListenerDefaultTypeInternal {
  constexpr ListenerDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListenerDefaultTypeInternal() {}
  union {
    Listener _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListenerDefaultTypeInternal _Listener_default_instance_;
constexpr ListListenerRequest_Param::ListListenerRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : subnqn_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListListenerRequest_ParamDefaultTypeInternal {
  constexpr ListListenerRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListListenerRequest_ParamDefaultTypeInternal() {}
  union {
    ListListenerRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListListenerRequest_ParamDefaultTypeInternal _ListListenerRequest_Param_default_instance_;
constexpr ListListenerRequest::ListListenerRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct ListListenerRequestDefaultTypeInternal {
  constexpr ListListenerRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListListenerRequestDefaultTypeInternal() {}
  union {
    ListListenerRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListListenerRequestDefaultTypeInternal _ListListenerRequest_default_instance_;
constexpr ListListenerResponse_Result_ListenerList::ListListenerResponse_Result_ListenerList(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : listenerlist_(){}
struct ListListenerResponse_Result_ListenerListDefaultTypeInternal {
  constexpr ListListenerResponse_Result_ListenerListDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListListenerResponse_Result_ListenerListDefaultTypeInternal() {}
  union {
    ListListenerResponse_Result_ListenerList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListListenerResponse_Result_ListenerListDefaultTypeInternal _ListListenerResponse_Result_ListenerList_default_instance_;
constexpr ListListenerResponse_Result::ListListenerResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr)
  , data_(nullptr){}
struct ListListenerResponse_ResultDefaultTypeInternal {
  constexpr ListListenerResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListListenerResponse_ResultDefaultTypeInternal() {}
  union {
    ListListenerResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListListenerResponse_ResultDefaultTypeInternal _ListListenerResponse_Result_default_instance_;
constexpr ListListenerResponse::ListListenerResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct ListListenerResponseDefaultTypeInternal {
  constexpr ListListenerResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListListenerResponseDefaultTypeInternal() {}
  union {
    ListListenerResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListListenerResponseDefaultTypeInternal _ListListenerResponse_default_instance_;
constexpr Subsystem_AddressInfo::Subsystem_AddressInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : transporttype_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , addressfamily_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , targetaddress_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , transportserviceid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , uuid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct Subsystem_AddressInfoDefaultTypeInternal {
  constexpr Subsystem_AddressInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Subsystem_AddressInfoDefaultTypeInternal() {}
  union {
    Subsystem_AddressInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Subsystem_AddressInfoDefaultTypeInternal _Subsystem_AddressInfo_default_instance_;
constexpr Subsystem_Host::Subsystem_Host(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : nqn_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct Subsystem_HostDefaultTypeInternal {
  constexpr Subsystem_HostDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Subsystem_HostDefaultTypeInternal() {}
  union {
    Subsystem_Host _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Subsystem_HostDefaultTypeInternal _Subsystem_Host_default_instance_;
constexpr Subsystem_Namespace::Subsystem_Namespace(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : bdevname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , uuid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , nsid_(0){}
struct Subsystem_NamespaceDefaultTypeInternal {
  constexpr Subsystem_NamespaceDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Subsystem_NamespaceDefaultTypeInternal() {}
  union {
    Subsystem_Namespace _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Subsystem_NamespaceDefaultTypeInternal _Subsystem_Namespace_default_instance_;
constexpr Subsystem::Subsystem(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : listenaddresses_()
  , hosts_()
  , namespaces_()
  , nqn_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , subtype_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , serialnumber_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , modelnumber_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , uuid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , allowanyhost_(0)
  , maxnamespaces_(0){}
struct SubsystemDefaultTypeInternal {
  constexpr SubsystemDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SubsystemDefaultTypeInternal() {}
  union {
    Subsystem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SubsystemDefaultTypeInternal _Subsystem_default_instance_;
constexpr ListSubsystemRequest::ListSubsystemRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListSubsystemRequestDefaultTypeInternal {
  constexpr ListSubsystemRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListSubsystemRequestDefaultTypeInternal() {}
  union {
    ListSubsystemRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListSubsystemRequestDefaultTypeInternal _ListSubsystemRequest_default_instance_;
constexpr ListSubsystemResponse_Result_SubsystemList::ListSubsystemResponse_Result_SubsystemList(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : subsystemlist_(){}
struct ListSubsystemResponse_Result_SubsystemListDefaultTypeInternal {
  constexpr ListSubsystemResponse_Result_SubsystemListDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListSubsystemResponse_Result_SubsystemListDefaultTypeInternal() {}
  union {
    ListSubsystemResponse_Result_SubsystemList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListSubsystemResponse_Result_SubsystemListDefaultTypeInternal _ListSubsystemResponse_Result_SubsystemList_default_instance_;
constexpr ListSubsystemResponse_Result::ListSubsystemResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr)
  , data_(nullptr){}
struct ListSubsystemResponse_ResultDefaultTypeInternal {
  constexpr ListSubsystemResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListSubsystemResponse_ResultDefaultTypeInternal() {}
  union {
    ListSubsystemResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListSubsystemResponse_ResultDefaultTypeInternal _ListSubsystemResponse_Result_default_instance_;
constexpr ListSubsystemResponse::ListSubsystemResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct ListSubsystemResponseDefaultTypeInternal {
  constexpr ListSubsystemResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListSubsystemResponseDefaultTypeInternal() {}
  union {
    ListSubsystemResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListSubsystemResponseDefaultTypeInternal _ListSubsystemResponse_default_instance_;
constexpr SubsystemInfoRequest_Param::SubsystemInfoRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : subnqn_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct SubsystemInfoRequest_ParamDefaultTypeInternal {
  constexpr SubsystemInfoRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SubsystemInfoRequest_ParamDefaultTypeInternal() {}
  union {
    SubsystemInfoRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SubsystemInfoRequest_ParamDefaultTypeInternal _SubsystemInfoRequest_Param_default_instance_;
constexpr SubsystemInfoRequest::SubsystemInfoRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct SubsystemInfoRequestDefaultTypeInternal {
  constexpr SubsystemInfoRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SubsystemInfoRequestDefaultTypeInternal() {}
  union {
    SubsystemInfoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SubsystemInfoRequestDefaultTypeInternal _SubsystemInfoRequest_default_instance_;
constexpr SubsystemInfoResponse_Result_SubsystemList::SubsystemInfoResponse_Result_SubsystemList(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : subsystemlist_(){}
struct SubsystemInfoResponse_Result_SubsystemListDefaultTypeInternal {
  constexpr SubsystemInfoResponse_Result_SubsystemListDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SubsystemInfoResponse_Result_SubsystemListDefaultTypeInternal() {}
  union {
    SubsystemInfoResponse_Result_SubsystemList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SubsystemInfoResponse_Result_SubsystemListDefaultTypeInternal _SubsystemInfoResponse_Result_SubsystemList_default_instance_;
constexpr SubsystemInfoResponse_Result::SubsystemInfoResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr)
  , data_(nullptr){}
struct SubsystemInfoResponse_ResultDefaultTypeInternal {
  constexpr SubsystemInfoResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SubsystemInfoResponse_ResultDefaultTypeInternal() {}
  union {
    SubsystemInfoResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SubsystemInfoResponse_ResultDefaultTypeInternal _SubsystemInfoResponse_Result_default_instance_;
constexpr SubsystemInfoResponse::SubsystemInfoResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct SubsystemInfoResponseDefaultTypeInternal {
  constexpr SubsystemInfoResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SubsystemInfoResponseDefaultTypeInternal() {}
  union {
    SubsystemInfoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SubsystemInfoResponseDefaultTypeInternal _SubsystemInfoResponse_default_instance_;
constexpr CreateTransportRequest_Param::CreateTransportRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : transporttype_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , bufcachesize_(0)
  , numsharedbuf_(0){}
struct CreateTransportRequest_ParamDefaultTypeInternal {
  constexpr CreateTransportRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateTransportRequest_ParamDefaultTypeInternal() {}
  union {
    CreateTransportRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateTransportRequest_ParamDefaultTypeInternal _CreateTransportRequest_Param_default_instance_;
constexpr CreateTransportRequest::CreateTransportRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct CreateTransportRequestDefaultTypeInternal {
  constexpr CreateTransportRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateTransportRequestDefaultTypeInternal() {}
  union {
    CreateTransportRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateTransportRequestDefaultTypeInternal _CreateTransportRequest_default_instance_;
constexpr CreateTransportResponse_Result::CreateTransportResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct CreateTransportResponse_ResultDefaultTypeInternal {
  constexpr CreateTransportResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateTransportResponse_ResultDefaultTypeInternal() {}
  union {
    CreateTransportResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateTransportResponse_ResultDefaultTypeInternal _CreateTransportResponse_Result_default_instance_;
constexpr CreateTransportResponse::CreateTransportResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct CreateTransportResponseDefaultTypeInternal {
  constexpr CreateTransportResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateTransportResponseDefaultTypeInternal() {}
  union {
    CreateTransportResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateTransportResponseDefaultTypeInternal _CreateTransportResponse_default_instance_;
constexpr ListTransportRequest::ListTransportRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListTransportRequestDefaultTypeInternal {
  constexpr ListTransportRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListTransportRequestDefaultTypeInternal() {}
  union {
    ListTransportRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListTransportRequestDefaultTypeInternal _ListTransportRequest_default_instance_;
constexpr Transport::Transport(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : type_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , maxqueuedepth_(0)
  , maxioqpairsperctrlr_(0)
  , incapsuledatasize_(0)
  , maxiosize_(0)
  , iounitsize_(0)
  , aborttimeoutsec_(0)
  , bufcachesize_(0)
  , numsharedbuf_(0){}
struct TransportDefaultTypeInternal {
  constexpr TransportDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TransportDefaultTypeInternal() {}
  union {
    Transport _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TransportDefaultTypeInternal _Transport_default_instance_;
constexpr ListTransportResponse_Result_TransportList::ListTransportResponse_Result_TransportList(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : transportlist_(){}
struct ListTransportResponse_Result_TransportListDefaultTypeInternal {
  constexpr ListTransportResponse_Result_TransportListDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListTransportResponse_Result_TransportListDefaultTypeInternal() {}
  union {
    ListTransportResponse_Result_TransportList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListTransportResponse_Result_TransportListDefaultTypeInternal _ListTransportResponse_Result_TransportList_default_instance_;
constexpr ListTransportResponse_Result::ListTransportResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr)
  , data_(nullptr){}
struct ListTransportResponse_ResultDefaultTypeInternal {
  constexpr ListTransportResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListTransportResponse_ResultDefaultTypeInternal() {}
  union {
    ListTransportResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListTransportResponse_ResultDefaultTypeInternal _ListTransportResponse_Result_default_instance_;
constexpr ListTransportResponse::ListTransportResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct ListTransportResponseDefaultTypeInternal {
  constexpr ListTransportResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListTransportResponseDefaultTypeInternal() {}
  union {
    ListTransportResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListTransportResponseDefaultTypeInternal _ListTransportResponse_default_instance_;
constexpr CreateVolumeRequest_Param::CreateVolumeRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , array_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , uuid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , size_(PROTOBUF_ULONGLONG(0))
  , maxiops_(PROTOBUF_ULONGLONG(0))
  , maxbw_(PROTOBUF_ULONGLONG(0))
  , nsid_(0)
  , iswalvol_(false)
  , isprimary_(false)
  , isananonoptimized_(false){}
struct CreateVolumeRequest_ParamDefaultTypeInternal {
  constexpr CreateVolumeRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateVolumeRequest_ParamDefaultTypeInternal() {}
  union {
    CreateVolumeRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateVolumeRequest_ParamDefaultTypeInternal _CreateVolumeRequest_Param_default_instance_;
constexpr CreateVolumeRequest::CreateVolumeRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct CreateVolumeRequestDefaultTypeInternal {
  constexpr CreateVolumeRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateVolumeRequestDefaultTypeInternal() {}
  union {
    CreateVolumeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateVolumeRequestDefaultTypeInternal _CreateVolumeRequest_default_instance_;
constexpr CreateVolumeResponse_Result_CreateVolumeData::CreateVolumeResponse_Result_CreateVolumeData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : targetaddress_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CreateVolumeResponse_Result_CreateVolumeDataDefaultTypeInternal {
  constexpr CreateVolumeResponse_Result_CreateVolumeDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateVolumeResponse_Result_CreateVolumeDataDefaultTypeInternal() {}
  union {
    CreateVolumeResponse_Result_CreateVolumeData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateVolumeResponse_Result_CreateVolumeDataDefaultTypeInternal _CreateVolumeResponse_Result_CreateVolumeData_default_instance_;
constexpr CreateVolumeResponse_Result::CreateVolumeResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr)
  , data_(nullptr){}
struct CreateVolumeResponse_ResultDefaultTypeInternal {
  constexpr CreateVolumeResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateVolumeResponse_ResultDefaultTypeInternal() {}
  union {
    CreateVolumeResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateVolumeResponse_ResultDefaultTypeInternal _CreateVolumeResponse_Result_default_instance_;
constexpr CreateVolumeResponse::CreateVolumeResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct CreateVolumeResponseDefaultTypeInternal {
  constexpr CreateVolumeResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateVolumeResponseDefaultTypeInternal() {}
  union {
    CreateVolumeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateVolumeResponseDefaultTypeInternal _CreateVolumeResponse_default_instance_;
constexpr DeleteVolumeRequest_Param::DeleteVolumeRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , array_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteVolumeRequest_ParamDefaultTypeInternal {
  constexpr DeleteVolumeRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteVolumeRequest_ParamDefaultTypeInternal() {}
  union {
    DeleteVolumeRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteVolumeRequest_ParamDefaultTypeInternal _DeleteVolumeRequest_Param_default_instance_;
constexpr DeleteVolumeRequest::DeleteVolumeRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct DeleteVolumeRequestDefaultTypeInternal {
  constexpr DeleteVolumeRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteVolumeRequestDefaultTypeInternal() {}
  union {
    DeleteVolumeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteVolumeRequestDefaultTypeInternal _DeleteVolumeRequest_default_instance_;
constexpr DeleteVolumeResponse_Result::DeleteVolumeResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct DeleteVolumeResponse_ResultDefaultTypeInternal {
  constexpr DeleteVolumeResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteVolumeResponse_ResultDefaultTypeInternal() {}
  union {
    DeleteVolumeResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteVolumeResponse_ResultDefaultTypeInternal _DeleteVolumeResponse_Result_default_instance_;
constexpr DeleteVolumeResponse::DeleteVolumeResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct DeleteVolumeResponseDefaultTypeInternal {
  constexpr DeleteVolumeResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteVolumeResponseDefaultTypeInternal() {}
  union {
    DeleteVolumeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteVolumeResponseDefaultTypeInternal _DeleteVolumeResponse_default_instance_;
constexpr UnmountVolumeRequest_Param::UnmountVolumeRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , array_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct UnmountVolumeRequest_ParamDefaultTypeInternal {
  constexpr UnmountVolumeRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UnmountVolumeRequest_ParamDefaultTypeInternal() {}
  union {
    UnmountVolumeRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UnmountVolumeRequest_ParamDefaultTypeInternal _UnmountVolumeRequest_Param_default_instance_;
constexpr UnmountVolumeRequest::UnmountVolumeRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct UnmountVolumeRequestDefaultTypeInternal {
  constexpr UnmountVolumeRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UnmountVolumeRequestDefaultTypeInternal() {}
  union {
    UnmountVolumeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UnmountVolumeRequestDefaultTypeInternal _UnmountVolumeRequest_default_instance_;
constexpr UnmountVolumeResponse_Result::UnmountVolumeResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct UnmountVolumeResponse_ResultDefaultTypeInternal {
  constexpr UnmountVolumeResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UnmountVolumeResponse_ResultDefaultTypeInternal() {}
  union {
    UnmountVolumeResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UnmountVolumeResponse_ResultDefaultTypeInternal _UnmountVolumeResponse_Result_default_instance_;
constexpr UnmountVolumeResponse::UnmountVolumeResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct UnmountVolumeResponseDefaultTypeInternal {
  constexpr UnmountVolumeResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UnmountVolumeResponseDefaultTypeInternal() {}
  union {
    UnmountVolumeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UnmountVolumeResponseDefaultTypeInternal _UnmountVolumeResponse_default_instance_;
constexpr MountVolumeRequest_Param::MountVolumeRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , subnqn_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , array_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , nsid_(0u){}
struct MountVolumeRequest_ParamDefaultTypeInternal {
  constexpr MountVolumeRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MountVolumeRequest_ParamDefaultTypeInternal() {}
  union {
    MountVolumeRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MountVolumeRequest_ParamDefaultTypeInternal _MountVolumeRequest_Param_default_instance_;
constexpr MountVolumeRequest::MountVolumeRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct MountVolumeRequestDefaultTypeInternal {
  constexpr MountVolumeRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MountVolumeRequestDefaultTypeInternal() {}
  union {
    MountVolumeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MountVolumeRequestDefaultTypeInternal _MountVolumeRequest_default_instance_;
constexpr MountVolumeResponse_Result::MountVolumeResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct MountVolumeResponse_ResultDefaultTypeInternal {
  constexpr MountVolumeResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MountVolumeResponse_ResultDefaultTypeInternal() {}
  union {
    MountVolumeResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MountVolumeResponse_ResultDefaultTypeInternal _MountVolumeResponse_Result_default_instance_;
constexpr MountVolumeResponse::MountVolumeResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct MountVolumeResponseDefaultTypeInternal {
  constexpr MountVolumeResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MountVolumeResponseDefaultTypeInternal() {}
  union {
    MountVolumeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MountVolumeResponseDefaultTypeInternal _MountVolumeResponse_default_instance_;
constexpr SetVolumePropertyRequest_Param::SetVolumePropertyRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , array_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , newvolumename_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , size_(PROTOBUF_ULONGLONG(0))
  , maxiops_(PROTOBUF_ULONGLONG(0))
  , maxbw_(PROTOBUF_ULONGLONG(0))
  , updateprimaryvol_(false)
  , isprimaryvol_(false){}
struct SetVolumePropertyRequest_ParamDefaultTypeInternal {
  constexpr SetVolumePropertyRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetVolumePropertyRequest_ParamDefaultTypeInternal() {}
  union {
    SetVolumePropertyRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetVolumePropertyRequest_ParamDefaultTypeInternal _SetVolumePropertyRequest_Param_default_instance_;
constexpr SetVolumePropertyRequest::SetVolumePropertyRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct SetVolumePropertyRequestDefaultTypeInternal {
  constexpr SetVolumePropertyRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetVolumePropertyRequestDefaultTypeInternal() {}
  union {
    SetVolumePropertyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetVolumePropertyRequestDefaultTypeInternal _SetVolumePropertyRequest_default_instance_;
constexpr SetVolumePropertyResponse_Result::SetVolumePropertyResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct SetVolumePropertyResponse_ResultDefaultTypeInternal {
  constexpr SetVolumePropertyResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetVolumePropertyResponse_ResultDefaultTypeInternal() {}
  union {
    SetVolumePropertyResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetVolumePropertyResponse_ResultDefaultTypeInternal _SetVolumePropertyResponse_Result_default_instance_;
constexpr SetVolumePropertyResponse::SetVolumePropertyResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct SetVolumePropertyResponseDefaultTypeInternal {
  constexpr SetVolumePropertyResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetVolumePropertyResponseDefaultTypeInternal() {}
  union {
    SetVolumePropertyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetVolumePropertyResponseDefaultTypeInternal _SetVolumePropertyResponse_default_instance_;
constexpr Volume::Volume(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , subnqn_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , uuid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , arrayname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , total_(PROTOBUF_ULONGLONG(0))
  , remain_(PROTOBUF_ULONGLONG(0))
  , maxiops_(PROTOBUF_ULONGLONG(0))
  , maxbw_(PROTOBUF_ULONGLONG(0))
  , miniops_(PROTOBUF_ULONGLONG(0))
  , minbw_(PROTOBUF_ULONGLONG(0))
  , index_(0){}
struct VolumeDefaultTypeInternal {
  constexpr VolumeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~VolumeDefaultTypeInternal() {}
  union {
    Volume _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT VolumeDefaultTypeInternal _Volume_default_instance_;
constexpr ListVolumeRequest_Param::ListVolumeRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : array_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListVolumeRequest_ParamDefaultTypeInternal {
  constexpr ListVolumeRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListVolumeRequest_ParamDefaultTypeInternal() {}
  union {
    ListVolumeRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListVolumeRequest_ParamDefaultTypeInternal _ListVolumeRequest_Param_default_instance_;
constexpr ListVolumeRequest::ListVolumeRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct ListVolumeRequestDefaultTypeInternal {
  constexpr ListVolumeRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListVolumeRequestDefaultTypeInternal() {}
  union {
    ListVolumeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListVolumeRequestDefaultTypeInternal _ListVolumeRequest_default_instance_;
constexpr ListVolumeResponse_Result_VolumeList::ListVolumeResponse_Result_VolumeList(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : volumes_(){}
struct ListVolumeResponse_Result_VolumeListDefaultTypeInternal {
  constexpr ListVolumeResponse_Result_VolumeListDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListVolumeResponse_Result_VolumeListDefaultTypeInternal() {}
  union {
    ListVolumeResponse_Result_VolumeList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListVolumeResponse_Result_VolumeListDefaultTypeInternal _ListVolumeResponse_Result_VolumeList_default_instance_;
constexpr ListVolumeResponse_Result::ListVolumeResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr)
  , data_(nullptr){}
struct ListVolumeResponse_ResultDefaultTypeInternal {
  constexpr ListVolumeResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListVolumeResponse_ResultDefaultTypeInternal() {}
  union {
    ListVolumeResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListVolumeResponse_ResultDefaultTypeInternal _ListVolumeResponse_Result_default_instance_;
constexpr ListVolumeResponse::ListVolumeResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct ListVolumeResponseDefaultTypeInternal {
  constexpr ListVolumeResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListVolumeResponseDefaultTypeInternal() {}
  union {
    ListVolumeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListVolumeResponseDefaultTypeInternal _ListVolumeResponse_default_instance_;
constexpr QosVolumeNameParam::QosVolumeNameParam(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : volumename_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct QosVolumeNameParamDefaultTypeInternal {
  constexpr QosVolumeNameParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~QosVolumeNameParamDefaultTypeInternal() {}
  union {
    QosVolumeNameParam _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT QosVolumeNameParamDefaultTypeInternal _QosVolumeNameParam_default_instance_;
constexpr QosCreateVolumePolicyRequest_Param::QosCreateVolumePolicyRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : vol_()
  , array_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , minbw_(PROTOBUF_LONGLONG(0))
  , miniops_(PROTOBUF_LONGLONG(0))
  , maxbw_(PROTOBUF_LONGLONG(0))
  , maxiops_(PROTOBUF_LONGLONG(0)){}
struct QosCreateVolumePolicyRequest_ParamDefaultTypeInternal {
  constexpr QosCreateVolumePolicyRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~QosCreateVolumePolicyRequest_ParamDefaultTypeInternal() {}
  union {
    QosCreateVolumePolicyRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT QosCreateVolumePolicyRequest_ParamDefaultTypeInternal _QosCreateVolumePolicyRequest_Param_default_instance_;
constexpr QosCreateVolumePolicyRequest::QosCreateVolumePolicyRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct QosCreateVolumePolicyRequestDefaultTypeInternal {
  constexpr QosCreateVolumePolicyRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~QosCreateVolumePolicyRequestDefaultTypeInternal() {}
  union {
    QosCreateVolumePolicyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT QosCreateVolumePolicyRequestDefaultTypeInternal _QosCreateVolumePolicyRequest_default_instance_;
constexpr QosCreateVolumePolicyResponse_Result::QosCreateVolumePolicyResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct QosCreateVolumePolicyResponse_ResultDefaultTypeInternal {
  constexpr QosCreateVolumePolicyResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~QosCreateVolumePolicyResponse_ResultDefaultTypeInternal() {}
  union {
    QosCreateVolumePolicyResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT QosCreateVolumePolicyResponse_ResultDefaultTypeInternal _QosCreateVolumePolicyResponse_Result_default_instance_;
constexpr QosCreateVolumePolicyResponse::QosCreateVolumePolicyResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct QosCreateVolumePolicyResponseDefaultTypeInternal {
  constexpr QosCreateVolumePolicyResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~QosCreateVolumePolicyResponseDefaultTypeInternal() {}
  union {
    QosCreateVolumePolicyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT QosCreateVolumePolicyResponseDefaultTypeInternal _QosCreateVolumePolicyResponse_default_instance_;
constexpr QosResetVolumePolicyRequest_Param::QosResetVolumePolicyRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : vol_()
  , array_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct QosResetVolumePolicyRequest_ParamDefaultTypeInternal {
  constexpr QosResetVolumePolicyRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~QosResetVolumePolicyRequest_ParamDefaultTypeInternal() {}
  union {
    QosResetVolumePolicyRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT QosResetVolumePolicyRequest_ParamDefaultTypeInternal _QosResetVolumePolicyRequest_Param_default_instance_;
constexpr QosResetVolumePolicyRequest::QosResetVolumePolicyRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct QosResetVolumePolicyRequestDefaultTypeInternal {
  constexpr QosResetVolumePolicyRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~QosResetVolumePolicyRequestDefaultTypeInternal() {}
  union {
    QosResetVolumePolicyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT QosResetVolumePolicyRequestDefaultTypeInternal _QosResetVolumePolicyRequest_default_instance_;
constexpr VolumeInfoRequest_Param::VolumeInfoRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : array_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , volume_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct VolumeInfoRequest_ParamDefaultTypeInternal {
  constexpr VolumeInfoRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~VolumeInfoRequest_ParamDefaultTypeInternal() {}
  union {
    VolumeInfoRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT VolumeInfoRequest_ParamDefaultTypeInternal _VolumeInfoRequest_Param_default_instance_;
constexpr VolumeInfoRequest::VolumeInfoRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct VolumeInfoRequestDefaultTypeInternal {
  constexpr VolumeInfoRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~VolumeInfoRequestDefaultTypeInternal() {}
  union {
    VolumeInfoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT VolumeInfoRequestDefaultTypeInternal _VolumeInfoRequest_default_instance_;
constexpr QosResetVolumePolicyResponse_Result::QosResetVolumePolicyResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct QosResetVolumePolicyResponse_ResultDefaultTypeInternal {
  constexpr QosResetVolumePolicyResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~QosResetVolumePolicyResponse_ResultDefaultTypeInternal() {}
  union {
    QosResetVolumePolicyResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT QosResetVolumePolicyResponse_ResultDefaultTypeInternal _QosResetVolumePolicyResponse_Result_default_instance_;
constexpr QosResetVolumePolicyResponse::QosResetVolumePolicyResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct QosResetVolumePolicyResponseDefaultTypeInternal {
  constexpr QosResetVolumePolicyResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~QosResetVolumePolicyResponseDefaultTypeInternal() {}
  union {
    QosResetVolumePolicyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT QosResetVolumePolicyResponseDefaultTypeInternal _QosResetVolumePolicyResponse_default_instance_;
constexpr VolumeInfoResponse_Result::VolumeInfoResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr)
  , data_(nullptr){}
struct VolumeInfoResponse_ResultDefaultTypeInternal {
  constexpr VolumeInfoResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~VolumeInfoResponse_ResultDefaultTypeInternal() {}
  union {
    VolumeInfoResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT VolumeInfoResponse_ResultDefaultTypeInternal _VolumeInfoResponse_Result_default_instance_;
constexpr VolumeInfoResponse::VolumeInfoResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct VolumeInfoResponseDefaultTypeInternal {
  constexpr VolumeInfoResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~VolumeInfoResponseDefaultTypeInternal() {}
  union {
    VolumeInfoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT VolumeInfoResponseDefaultTypeInternal _VolumeInfoResponse_default_instance_;
constexpr VolumeRenameRequest_Param::VolumeRenameRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : array_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , newname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct VolumeRenameRequest_ParamDefaultTypeInternal {
  constexpr VolumeRenameRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~VolumeRenameRequest_ParamDefaultTypeInternal() {}
  union {
    VolumeRenameRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT VolumeRenameRequest_ParamDefaultTypeInternal _VolumeRenameRequest_Param_default_instance_;
constexpr VolumeRenameRequest::VolumeRenameRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct VolumeRenameRequestDefaultTypeInternal {
  constexpr VolumeRenameRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~VolumeRenameRequestDefaultTypeInternal() {}
  union {
    VolumeRenameRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT VolumeRenameRequestDefaultTypeInternal _VolumeRenameRequest_default_instance_;
constexpr VolumeRenameResponse_Result::VolumeRenameResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct VolumeRenameResponse_ResultDefaultTypeInternal {
  constexpr VolumeRenameResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~VolumeRenameResponse_ResultDefaultTypeInternal() {}
  union {
    VolumeRenameResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT VolumeRenameResponse_ResultDefaultTypeInternal _VolumeRenameResponse_Result_default_instance_;
constexpr VolumeRenameResponse::VolumeRenameResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct VolumeRenameResponseDefaultTypeInternal {
  constexpr VolumeRenameResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~VolumeRenameResponseDefaultTypeInternal() {}
  union {
    VolumeRenameResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT VolumeRenameResponseDefaultTypeInternal _VolumeRenameResponse_default_instance_;
constexpr ListWBTRequest::ListWBTRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListWBTRequestDefaultTypeInternal {
  constexpr ListWBTRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListWBTRequestDefaultTypeInternal() {}
  union {
    ListWBTRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListWBTRequestDefaultTypeInternal _ListWBTRequest_default_instance_;
constexpr WBTTest::WBTTest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : testname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct WBTTestDefaultTypeInternal {
  constexpr WBTTestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~WBTTestDefaultTypeInternal() {}
  union {
    WBTTest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT WBTTestDefaultTypeInternal _WBTTest_default_instance_;
constexpr ListWBTResponse_Result_Tests::ListWBTResponse_Result_Tests(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : testlist_(){}
struct ListWBTResponse_Result_TestsDefaultTypeInternal {
  constexpr ListWBTResponse_Result_TestsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListWBTResponse_Result_TestsDefaultTypeInternal() {}
  union {
    ListWBTResponse_Result_Tests _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListWBTResponse_Result_TestsDefaultTypeInternal _ListWBTResponse_Result_Tests_default_instance_;
constexpr ListWBTResponse_Result::ListWBTResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr)
  , data_(nullptr){}
struct ListWBTResponse_ResultDefaultTypeInternal {
  constexpr ListWBTResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListWBTResponse_ResultDefaultTypeInternal() {}
  union {
    ListWBTResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListWBTResponse_ResultDefaultTypeInternal _ListWBTResponse_Result_default_instance_;
constexpr ListWBTResponse::ListWBTResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct ListWBTResponseDefaultTypeInternal {
  constexpr ListWBTResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListWBTResponseDefaultTypeInternal() {}
  union {
    ListWBTResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListWBTResponseDefaultTypeInternal _ListWBTResponse_default_instance_;
constexpr ListQOSPolicyRequest_Param_Volume::ListQOSPolicyRequest_Param_Volume(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : volumename_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListQOSPolicyRequest_Param_VolumeDefaultTypeInternal {
  constexpr ListQOSPolicyRequest_Param_VolumeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListQOSPolicyRequest_Param_VolumeDefaultTypeInternal() {}
  union {
    ListQOSPolicyRequest_Param_Volume _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListQOSPolicyRequest_Param_VolumeDefaultTypeInternal _ListQOSPolicyRequest_Param_Volume_default_instance_;
constexpr ListQOSPolicyRequest_Param::ListQOSPolicyRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : vol_()
  , array_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListQOSPolicyRequest_ParamDefaultTypeInternal {
  constexpr ListQOSPolicyRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListQOSPolicyRequest_ParamDefaultTypeInternal() {}
  union {
    ListQOSPolicyRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListQOSPolicyRequest_ParamDefaultTypeInternal _ListQOSPolicyRequest_Param_default_instance_;
constexpr ListQOSPolicyRequest::ListQOSPolicyRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct ListQOSPolicyRequestDefaultTypeInternal {
  constexpr ListQOSPolicyRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListQOSPolicyRequestDefaultTypeInternal() {}
  union {
    ListQOSPolicyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListQOSPolicyRequestDefaultTypeInternal _ListQOSPolicyRequest_default_instance_;
constexpr QOSResult_Arrays::QOSResult_Arrays(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : arrayname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct QOSResult_ArraysDefaultTypeInternal {
  constexpr QOSResult_ArraysDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~QOSResult_ArraysDefaultTypeInternal() {}
  union {
    QOSResult_Arrays _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT QOSResult_ArraysDefaultTypeInternal _QOSResult_Arrays_default_instance_;
constexpr QOSResult_RebuildPolicy::QOSResult_RebuildPolicy(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : rebuild_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct QOSResult_RebuildPolicyDefaultTypeInternal {
  constexpr QOSResult_RebuildPolicyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~QOSResult_RebuildPolicyDefaultTypeInternal() {}
  union {
    QOSResult_RebuildPolicy _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT QOSResult_RebuildPolicyDefaultTypeInternal _QOSResult_RebuildPolicy_default_instance_;
constexpr QOSResult_VolumePolicies::QOSResult_VolumePolicies(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : maxbw_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , maxiops_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , miniops_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , minbw_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , min_bw_guarantee_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , min_iops_guarantee_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , id_(0){}
struct QOSResult_VolumePoliciesDefaultTypeInternal {
  constexpr QOSResult_VolumePoliciesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~QOSResult_VolumePoliciesDefaultTypeInternal() {}
  union {
    QOSResult_VolumePolicies _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT QOSResult_VolumePoliciesDefaultTypeInternal _QOSResult_VolumePolicies_default_instance_;
constexpr QOSResult::QOSResult(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : arrayname_()
  , rebuildpolicy_()
  , volumepolicies_(){}
struct QOSResultDefaultTypeInternal {
  constexpr QOSResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~QOSResultDefaultTypeInternal() {}
  union {
    QOSResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT QOSResultDefaultTypeInternal _QOSResult_default_instance_;
constexpr ListQOSPolicyResponse_Result_ListQOSResult::ListQOSPolicyResponse_Result_ListQOSResult(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : qosresult_(){}
struct ListQOSPolicyResponse_Result_ListQOSResultDefaultTypeInternal {
  constexpr ListQOSPolicyResponse_Result_ListQOSResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListQOSPolicyResponse_Result_ListQOSResultDefaultTypeInternal() {}
  union {
    ListQOSPolicyResponse_Result_ListQOSResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListQOSPolicyResponse_Result_ListQOSResultDefaultTypeInternal _ListQOSPolicyResponse_Result_ListQOSResult_default_instance_;
constexpr ListQOSPolicyResponse_Result::ListQOSPolicyResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr)
  , data_(nullptr){}
struct ListQOSPolicyResponse_ResultDefaultTypeInternal {
  constexpr ListQOSPolicyResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListQOSPolicyResponse_ResultDefaultTypeInternal() {}
  union {
    ListQOSPolicyResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListQOSPolicyResponse_ResultDefaultTypeInternal _ListQOSPolicyResponse_Result_default_instance_;
constexpr ListQOSPolicyResponse::ListQOSPolicyResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct ListQOSPolicyResponseDefaultTypeInternal {
  constexpr ListQOSPolicyResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListQOSPolicyResponseDefaultTypeInternal() {}
  union {
    ListQOSPolicyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListQOSPolicyResponseDefaultTypeInternal _ListQOSPolicyResponse_default_instance_;
constexpr WBTRequest_Param_ArgvEntry_DoNotUse::WBTRequest_Param_ArgvEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct WBTRequest_Param_ArgvEntry_DoNotUseDefaultTypeInternal {
  constexpr WBTRequest_Param_ArgvEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~WBTRequest_Param_ArgvEntry_DoNotUseDefaultTypeInternal() {}
  union {
    WBTRequest_Param_ArgvEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT WBTRequest_Param_ArgvEntry_DoNotUseDefaultTypeInternal _WBTRequest_Param_ArgvEntry_DoNotUse_default_instance_;
constexpr WBTRequest_Param::WBTRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : argv_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , testname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct WBTRequest_ParamDefaultTypeInternal {
  constexpr WBTRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~WBTRequest_ParamDefaultTypeInternal() {}
  union {
    WBTRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT WBTRequest_ParamDefaultTypeInternal _WBTRequest_Param_default_instance_;
constexpr WBTRequest::WBTRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct WBTRequestDefaultTypeInternal {
  constexpr WBTRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~WBTRequestDefaultTypeInternal() {}
  union {
    WBTRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT WBTRequestDefaultTypeInternal _WBTRequest_default_instance_;
constexpr WBTResponse_Result_TestData::WBTResponse_Result_TestData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : testdata_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct WBTResponse_Result_TestDataDefaultTypeInternal {
  constexpr WBTResponse_Result_TestDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~WBTResponse_Result_TestDataDefaultTypeInternal() {}
  union {
    WBTResponse_Result_TestData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT WBTResponse_Result_TestDataDefaultTypeInternal _WBTResponse_Result_TestData_default_instance_;
constexpr WBTResponse_Result::WBTResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr)
  , data_(nullptr){}
struct WBTResponse_ResultDefaultTypeInternal {
  constexpr WBTResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~WBTResponse_ResultDefaultTypeInternal() {}
  union {
    WBTResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT WBTResponse_ResultDefaultTypeInternal _WBTResponse_Result_default_instance_;
constexpr WBTResponse::WBTResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct WBTResponseDefaultTypeInternal {
  constexpr WBTResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~WBTResponseDefaultTypeInternal() {}
  union {
    WBTResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT WBTResponseDefaultTypeInternal _WBTResponse_default_instance_;
}  // namespace grpc_cli
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_cli_2eproto[260];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_cli_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_cli_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_cli_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Status, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Status, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Status, code_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Status, event_name_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Status, description_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Status, cause_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Status, solution_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Status, message_),
  5,
  0,
  1,
  2,
  3,
  4,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::PosInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::PosInfo, version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartSystemRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartSystemRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartSystemRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartSystemRequest, requestor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoRequest, requestor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoResponse_Result_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoResponse_Result_Data, version_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoResponse_Result_Data, biosversion_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoResponse_Result_Data, biosvendor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoResponse_Result_Data, biosreleasedate_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoResponse_Result_Data, systemmanufacturer_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoResponse_Result_Data, systemproductname_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoResponse_Result_Data, systemserialnumber_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoResponse_Result_Data, systemuuid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoResponse_Result_Data, baseboardmanufacturer_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoResponse_Result_Data, baseboardproductname_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoResponse_Result_Data, baseboardserialnumber_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoResponse_Result_Data, baseboardversion_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoResponse_Result_Data, processormanufacturer_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoResponse_Result_Data, processorversion_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoResponse_Result_Data, processorfrequency_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoResponse_Result, status_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoResponse_Result, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopSystemRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopSystemRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopSystemRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopSystemRequest, requestor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopSystemResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopSystemResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopSystemResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopSystemResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopSystemResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopSystemResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopSystemResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSystemPropertyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSystemPropertyRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSystemPropertyRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSystemPropertyRequest, requestor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSystemPropertyResponse_Result_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSystemPropertyResponse_Result_Data, rebuild_policy_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSystemPropertyResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSystemPropertyResponse_Result, status_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSystemPropertyResponse_Result, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSystemPropertyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSystemPropertyResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSystemPropertyResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSystemPropertyResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSystemPropertyResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetSystemPropertyRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetSystemPropertyRequest_Param, level_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetSystemPropertyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetSystemPropertyRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetSystemPropertyRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetSystemPropertyRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetSystemPropertyRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetSystemPropertyResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetSystemPropertyResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetSystemPropertyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetSystemPropertyResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetSystemPropertyResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetSystemPropertyResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetSystemPropertyResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartTelemetryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartTelemetryRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartTelemetryRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartTelemetryRequest, requestor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartTelemetryResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartTelemetryResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartTelemetryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartTelemetryResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartTelemetryResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartTelemetryResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartTelemetryResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopTelemetryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopTelemetryRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopTelemetryRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopTelemetryRequest, requestor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopTelemetryResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopTelemetryResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopTelemetryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopTelemetryResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopTelemetryResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopTelemetryResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopTelemetryResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetTelemetryPropertyRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetTelemetryPropertyRequest_Param, publicationlistpath_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetTelemetryPropertyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetTelemetryPropertyRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetTelemetryPropertyRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetTelemetryPropertyRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetTelemetryPropertyRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetTelemetryPropertyResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetTelemetryPropertyResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetTelemetryPropertyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetTelemetryPropertyResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetTelemetryPropertyResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetTelemetryPropertyResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetTelemetryPropertyResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetTelemetryPropertyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetTelemetryPropertyRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetTelemetryPropertyRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetTelemetryPropertyRequest, requestor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetTelemetryPropertyResponse_Result_TelemetryProperty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetTelemetryPropertyResponse_Result_TelemetryProperty, status_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetTelemetryPropertyResponse_Result_TelemetryProperty, publicationlistpath_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetTelemetryPropertyResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetTelemetryPropertyResponse_Result, status_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetTelemetryPropertyResponse_Result, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetTelemetryPropertyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetTelemetryPropertyResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetTelemetryPropertyResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetTelemetryPropertyResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetTelemetryPropertyResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetEventWrrRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetEventWrrRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetEventWrrRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetEventWrrRequest, requestor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetEventWrrResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetEventWrrResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetEventWrrResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetEventWrrResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetEventWrrResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetEventWrrResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetEventWrrResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetMbrRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetMbrRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetMbrRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetMbrRequest, requestor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetMbrResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetMbrResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetMbrResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetMbrResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetMbrResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetMbrResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetMbrResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DumpMemorySnapshotRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DumpMemorySnapshotRequest_Param, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DumpMemorySnapshotRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DumpMemorySnapshotRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DumpMemorySnapshotRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DumpMemorySnapshotRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DumpMemorySnapshotRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DumpMemorySnapshotResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DumpMemorySnapshotResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DumpMemorySnapshotResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DumpMemorySnapshotResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DumpMemorySnapshotResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DumpMemorySnapshotResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DumpMemorySnapshotResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopRebuildingRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopRebuildingRequest_Param, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopRebuildingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopRebuildingRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopRebuildingRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopRebuildingRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopRebuildingRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopRebuildingResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopRebuildingResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopRebuildingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopRebuildingResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopRebuildingResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopRebuildingResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopRebuildingResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UpdateEventWrrRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UpdateEventWrrRequest_Param, name_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UpdateEventWrrRequest_Param, weight_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UpdateEventWrrRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UpdateEventWrrRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UpdateEventWrrRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UpdateEventWrrRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UpdateEventWrrRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UpdateEventWrrResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UpdateEventWrrResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UpdateEventWrrResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UpdateEventWrrResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UpdateEventWrrResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UpdateEventWrrResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UpdateEventWrrResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddSpareRequest_SpareDeviceName, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddSpareRequest_SpareDeviceName, devicename_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddSpareRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddSpareRequest_Param, array_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddSpareRequest_Param, spare_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddSpareRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddSpareRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddSpareRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddSpareRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddSpareRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddSpareResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddSpareResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddSpareResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddSpareResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddSpareResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddSpareResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddSpareResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeviceNameList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeviceNameList, devicename_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveSpareRequest_SpareDeviceName, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveSpareRequest_SpareDeviceName, devicename_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveSpareRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveSpareRequest_Param, array_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveSpareRequest_Param, spare_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveSpareRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveSpareRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveSpareRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveSpareRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveSpareRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveSpareResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveSpareResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveSpareResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveSpareResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveSpareResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveSpareResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveSpareResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ReplaceArrayDeviceRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ReplaceArrayDeviceRequest_Param, array_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ReplaceArrayDeviceRequest_Param, device_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ReplaceArrayDeviceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ReplaceArrayDeviceRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ReplaceArrayDeviceRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ReplaceArrayDeviceRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ReplaceArrayDeviceRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ReplaceArrayDeviceResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ReplaceArrayDeviceResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ReplaceArrayDeviceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ReplaceArrayDeviceResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ReplaceArrayDeviceResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ReplaceArrayDeviceResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ReplaceArrayDeviceResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayRequest_Param, name_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayRequest_Param, buffer_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayRequest_Param, data_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayRequest_Param, spare_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayRequest_Param, raidtype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayRequest_Param, name_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayRequest_Param, buffer_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayRequest_Param, numdata_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayRequest_Param, numspare_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayRequest_Param, raidtype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteArrayRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteArrayRequest_Param, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteArrayRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteArrayRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteArrayRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteArrayRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteArrayRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteArrayResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteArrayResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteArrayResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteArrayResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteArrayResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteArrayResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteArrayResponse, info_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountArrayRequest_Param, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountArrayRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountArrayRequest_Param, name_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountArrayRequest_Param, enablewritethrough_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountArrayRequest_Param, targetaddress_),
  ~0u,
  1,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountArrayRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountArrayRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountArrayRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountArrayRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountArrayRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountArrayResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountArrayResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountArrayResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountArrayResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountArrayResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountArrayResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountArrayResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountArrayRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountArrayRequest_Param, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountArrayRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountArrayRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountArrayRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountArrayRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountArrayRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountArrayResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountArrayResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountArrayResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountArrayResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountArrayResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountArrayResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountArrayResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Array, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Array, index_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Array, uniqueid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Array, name_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Array, status_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Array, state_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Array, situation_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Array, createdatetime_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Array, updatedatetime_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Array, rebuildingprogress_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Array, capacity_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Array, used_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Array, gcmode_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Array, metaraid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Array, dataraid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Array, writethroughenabled_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Array, devicelist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListArrayRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListArrayRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListArrayRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListArrayRequest, requestor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListArrayResponse_Result_ArrayList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListArrayResponse_Result_ArrayList, arraylist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListArrayResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListArrayResponse_Result, status_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListArrayResponse_Result, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListArrayResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListArrayResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListArrayResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListArrayResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListArrayResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ArrayInfoRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ArrayInfoRequest_Param, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ArrayInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ArrayInfoRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ArrayInfoRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ArrayInfoRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ArrayInfoRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ArrayInfoResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ArrayInfoResponse_Result, status_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ArrayInfoResponse_Result, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ArrayInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ArrayInfoResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ArrayInfoResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ArrayInfoResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ArrayInfoResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RebuildArrayRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RebuildArrayRequest_Param, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RebuildArrayRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RebuildArrayRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RebuildArrayRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RebuildArrayRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RebuildArrayRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RebuildArrayResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RebuildArrayResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RebuildArrayResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RebuildArrayResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RebuildArrayResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RebuildArrayResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RebuildArrayResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListNodeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListNodeRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListNodeRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListNodeRequest, requestor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListNodeResponse_Result_Node, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListNodeResponse_Result_Node, name_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListNodeResponse_Result_Node, ip_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListNodeResponse_Result_Node, lastseen_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListNodeResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListNodeResponse_Result, status_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListNodeResponse_Result, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListNodeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListNodeResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListNodeResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListNodeResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListNodeResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaVolumeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaVolumeRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaVolumeRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaVolumeRequest, requestor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaVolumeResponse_Result_Volume, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaVolumeResponse_Result_Volume, id_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaVolumeResponse_Result_Volume, name_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaVolumeResponse_Result_Volume, nodename_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaVolumeResponse_Result_Volume, arrayname_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaVolumeResponse_Result_Volume, size_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaVolumeResponse_Result_Volume, lastseen_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaVolumeResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaVolumeResponse_Result, status_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaVolumeResponse_Result, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaVolumeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaVolumeResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaVolumeResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaVolumeResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaVolumeResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaReplicationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaReplicationRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaReplicationRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaReplicationRequest, requestor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaReplicationResponse_Result_Replication, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaReplicationResponse_Result_Replication, id_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaReplicationResponse_Result_Replication, sourcevolumeid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaReplicationResponse_Result_Replication, sourcewalvolume_id_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaReplicationResponse_Result_Replication, destinationvolumeid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaReplicationResponse_Result_Replication, destinationwalvolumeid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaReplicationResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaReplicationResponse_Result, status_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaReplicationResponse_Result, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaReplicationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaReplicationResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaReplicationResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaReplicationResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListHaReplicationResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartHaReplicationRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartHaReplicationRequest_Param, primarynodename_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartHaReplicationRequest_Param, primaryarrayname_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartHaReplicationRequest_Param, primaryvolumename_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartHaReplicationRequest_Param, primarywalvolumename_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartHaReplicationRequest_Param, secondarynodename_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartHaReplicationRequest_Param, secondaryarrayname_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartHaReplicationRequest_Param, secondaryvolumename_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartHaReplicationRequest_Param, secondarywalvolumename_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartHaReplicationRequest_Param, stuats_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartHaReplicationRequest_Param, timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartHaReplicationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartHaReplicationRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartHaReplicationRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartHaReplicationRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartHaReplicationRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartHaReplicationResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartHaReplicationResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartHaReplicationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartHaReplicationResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartHaReplicationResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartHaReplicationResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartHaReplicationResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetLogLevelRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetLogLevelRequest_Param, level_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetLogLevelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetLogLevelRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetLogLevelRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetLogLevelRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetLogLevelRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetLogLevelResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetLogLevelResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetLogLevelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetLogLevelResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetLogLevelResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetLogLevelResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetLogLevelResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetLogPreferenceRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetLogPreferenceRequest_Param, structuredlogging_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetLogPreferenceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetLogPreferenceRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetLogPreferenceRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetLogPreferenceRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetLogPreferenceRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetLogPreferenceResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetLogPreferenceResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetLogPreferenceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetLogPreferenceResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetLogPreferenceResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetLogPreferenceResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetLogPreferenceResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::LoggerInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::LoggerInfoRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::LoggerInfoRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::LoggerInfoRequest, requestor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::LoggerInfoResponse_Result_LoggerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::LoggerInfoResponse_Result_LoggerInfo, minorlogpath_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::LoggerInfoResponse_Result_LoggerInfo, majorlogpath_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::LoggerInfoResponse_Result_LoggerInfo, logfilesizeinmb_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::LoggerInfoResponse_Result_LoggerInfo, logfilerotationcount_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::LoggerInfoResponse_Result_LoggerInfo, minallowableloglevel_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::LoggerInfoResponse_Result_LoggerInfo, filterenabled_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::LoggerInfoResponse_Result_LoggerInfo, filterincluded_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::LoggerInfoResponse_Result_LoggerInfo, filterexcluded_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::LoggerInfoResponse_Result_LoggerInfo, structuredlogging_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::LoggerInfoResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::LoggerInfoResponse_Result, status_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::LoggerInfoResponse_Result, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::LoggerInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::LoggerInfoResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::LoggerInfoResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::LoggerInfoResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::LoggerInfoResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetLogLevelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetLogLevelRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetLogLevelRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetLogLevelRequest, requestor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetLogLevelResponse_Result_LogLevel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetLogLevelResponse_Result_LogLevel, level_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetLogLevelResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetLogLevelResponse_Result, status_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetLogLevelResponse_Result, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetLogLevelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetLogLevelResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetLogLevelResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetLogLevelResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetLogLevelResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ApplyLogFilterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ApplyLogFilterRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ApplyLogFilterRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ApplyLogFilterRequest, requestor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ApplyLogFilterResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ApplyLogFilterResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ApplyLogFilterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ApplyLogFilterResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ApplyLogFilterResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ApplyLogFilterResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ApplyLogFilterResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateDeviceRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateDeviceRequest_Param, name_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateDeviceRequest_Param, numblocks_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateDeviceRequest_Param, blocksize_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateDeviceRequest_Param, devtype_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateDeviceRequest_Param, numa_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateDeviceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateDeviceRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateDeviceRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateDeviceRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateDeviceRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateDeviceResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateDeviceResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateDeviceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateDeviceResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateDeviceResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateDeviceResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateDeviceResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ScanDeviceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ScanDeviceRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ScanDeviceRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ScanDeviceRequest, requestor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ScanDeviceResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ScanDeviceResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ScanDeviceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ScanDeviceResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ScanDeviceResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ScanDeviceResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ScanDeviceResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Device, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Device, name_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Device, type_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Device, address_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Device, class__),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Device, modelnumber_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Device, numa_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Device, size_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Device, serialnumber_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListDeviceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListDeviceRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListDeviceRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListDeviceRequest, requestor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListDeviceResponse_Result_DeviceList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListDeviceResponse_Result_DeviceList, devicelist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListDeviceResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListDeviceResponse_Result, status_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListDeviceResponse_Result, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListDeviceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListDeviceResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListDeviceResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListDeviceResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListDeviceResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SmartLog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SmartLog, availablesparespace_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SmartLog, temperature_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SmartLog, devicereliability_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SmartLog, readonly_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SmartLog, volatilememorybackup_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SmartLog, currenttemperature_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SmartLog, availablespare_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SmartLog, availablesparethreshold_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SmartLog, lifepercentageused_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SmartLog, dataunitsread_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SmartLog, dataunitswritten_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SmartLog, hostreadcommands_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SmartLog, hostwritecommands_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SmartLog, controllerbusytime_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SmartLog, powercycles_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SmartLog, poweronhours_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SmartLog, unsafeshutdowns_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SmartLog, unrecoverablemediaerrors_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SmartLog, lifetimeerrorlogentries_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SmartLog, warningtemperaturetime_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SmartLog, criticaltemperaturetime_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SmartLog, temperaturesensor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSmartLogRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSmartLogRequest_Param, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSmartLogRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSmartLogRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSmartLogRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSmartLogRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSmartLogRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSmartLogResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSmartLogResponse_Result, status_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSmartLogResponse_Result, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSmartLogResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSmartLogResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSmartLogResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSmartLogResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSmartLogResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateSubsystemRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateSubsystemRequest_Param, nqn_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateSubsystemRequest_Param, serialnumber_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateSubsystemRequest_Param, modelnumber_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateSubsystemRequest_Param, maxnamespaces_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateSubsystemRequest_Param, allowanyhost_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateSubsystemRequest_Param, anareporting_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateSubsystemRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateSubsystemRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateSubsystemRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateSubsystemRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateSubsystemRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateSubsystemResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateSubsystemResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateSubsystemResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateSubsystemResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateSubsystemResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateSubsystemResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateSubsystemResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteSubsystemRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteSubsystemRequest_Param, subnqn_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteSubsystemRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteSubsystemRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteSubsystemRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteSubsystemRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteSubsystemRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteSubsystemResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteSubsystemResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteSubsystemResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteSubsystemResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteSubsystemResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteSubsystemResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteSubsystemResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddListenerRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddListenerRequest_Param, subnqn_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddListenerRequest_Param, transporttype_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddListenerRequest_Param, targetaddress_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddListenerRequest_Param, transportserviceid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddListenerRequest_Param, uuid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddListenerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddListenerRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddListenerRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddListenerRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddListenerRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddListenerResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddListenerResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddListenerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddListenerResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddListenerResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddListenerResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddListenerResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveListenerRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveListenerRequest_Param, subnqn_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveListenerRequest_Param, transporttype_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveListenerRequest_Param, targetaddress_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveListenerRequest_Param, transportserviceid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveListenerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveListenerRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveListenerRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveListenerRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveListenerRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveListenerResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveListenerResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveListenerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveListenerResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveListenerResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveListenerResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveListenerResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Listener_Address, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Listener_Address, trtype_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Listener_Address, adrfam_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Listener_Address, traddr_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Listener_Address, trsvcid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Listener_Address, uuid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Listener, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Listener, address_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Listener, anastate_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListListenerRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListListenerRequest_Param, subnqn_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListListenerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListListenerRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListListenerRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListListenerRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListListenerRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListListenerResponse_Result_ListenerList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListListenerResponse_Result_ListenerList, listenerlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListListenerResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListListenerResponse_Result, status_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListListenerResponse_Result, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListListenerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListListenerResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListListenerResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListListenerResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListListenerResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Subsystem_AddressInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Subsystem_AddressInfo, transporttype_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Subsystem_AddressInfo, addressfamily_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Subsystem_AddressInfo, targetaddress_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Subsystem_AddressInfo, transportserviceid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Subsystem_AddressInfo, uuid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Subsystem_Host, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Subsystem_Host, nqn_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Subsystem_Namespace, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Subsystem_Namespace, nsid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Subsystem_Namespace, bdevname_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Subsystem_Namespace, uuid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Subsystem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Subsystem, nqn_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Subsystem, subtype_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Subsystem, listenaddresses_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Subsystem, allowanyhost_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Subsystem, hosts_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Subsystem, serialnumber_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Subsystem, modelnumber_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Subsystem, maxnamespaces_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Subsystem, uuid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Subsystem, namespaces_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListSubsystemRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListSubsystemRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListSubsystemRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListSubsystemRequest, requestor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListSubsystemResponse_Result_SubsystemList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListSubsystemResponse_Result_SubsystemList, subsystemlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListSubsystemResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListSubsystemResponse_Result, status_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListSubsystemResponse_Result, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListSubsystemResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListSubsystemResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListSubsystemResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListSubsystemResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListSubsystemResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SubsystemInfoRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SubsystemInfoRequest_Param, subnqn_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SubsystemInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SubsystemInfoRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SubsystemInfoRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SubsystemInfoRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SubsystemInfoRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SubsystemInfoResponse_Result_SubsystemList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SubsystemInfoResponse_Result_SubsystemList, subsystemlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SubsystemInfoResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SubsystemInfoResponse_Result, status_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SubsystemInfoResponse_Result, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SubsystemInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SubsystemInfoResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SubsystemInfoResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SubsystemInfoResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SubsystemInfoResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateTransportRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateTransportRequest_Param, transporttype_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateTransportRequest_Param, bufcachesize_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateTransportRequest_Param, numsharedbuf_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateTransportRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateTransportRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateTransportRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateTransportRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateTransportRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateTransportResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateTransportResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateTransportResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateTransportResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateTransportResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateTransportResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateTransportResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListTransportRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListTransportRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListTransportRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListTransportRequest, requestor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Transport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Transport, type_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Transport, maxqueuedepth_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Transport, maxioqpairsperctrlr_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Transport, incapsuledatasize_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Transport, maxiosize_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Transport, iounitsize_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Transport, aborttimeoutsec_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Transport, bufcachesize_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Transport, numsharedbuf_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListTransportResponse_Result_TransportList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListTransportResponse_Result_TransportList, transportlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListTransportResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListTransportResponse_Result, status_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListTransportResponse_Result, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListTransportResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListTransportResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListTransportResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListTransportResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListTransportResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateVolumeRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateVolumeRequest_Param, name_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateVolumeRequest_Param, array_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateVolumeRequest_Param, size_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateVolumeRequest_Param, maxiops_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateVolumeRequest_Param, maxbw_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateVolumeRequest_Param, iswalvol_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateVolumeRequest_Param, uuid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateVolumeRequest_Param, nsid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateVolumeRequest_Param, isprimary_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateVolumeRequest_Param, isananonoptimized_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateVolumeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateVolumeRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateVolumeRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateVolumeRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateVolumeRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateVolumeResponse_Result_CreateVolumeData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateVolumeResponse_Result_CreateVolumeData, targetaddress_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateVolumeResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateVolumeResponse_Result, status_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateVolumeResponse_Result, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateVolumeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateVolumeResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateVolumeResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateVolumeResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateVolumeResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteVolumeRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteVolumeRequest_Param, name_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteVolumeRequest_Param, array_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteVolumeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteVolumeRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteVolumeRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteVolumeRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteVolumeRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteVolumeResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteVolumeResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteVolumeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteVolumeResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteVolumeResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteVolumeResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteVolumeResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountVolumeRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountVolumeRequest_Param, name_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountVolumeRequest_Param, array_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountVolumeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountVolumeRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountVolumeRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountVolumeRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountVolumeRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountVolumeResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountVolumeResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountVolumeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountVolumeResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountVolumeResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountVolumeResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountVolumeResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountVolumeRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountVolumeRequest_Param, name_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountVolumeRequest_Param, subnqn_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountVolumeRequest_Param, array_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountVolumeRequest_Param, nsid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountVolumeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountVolumeRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountVolumeRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountVolumeRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountVolumeRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountVolumeResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountVolumeResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountVolumeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountVolumeResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountVolumeResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountVolumeResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountVolumeResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetVolumePropertyRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetVolumePropertyRequest_Param, name_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetVolumePropertyRequest_Param, array_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetVolumePropertyRequest_Param, newvolumename_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetVolumePropertyRequest_Param, size_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetVolumePropertyRequest_Param, maxiops_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetVolumePropertyRequest_Param, maxbw_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetVolumePropertyRequest_Param, updateprimaryvol_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetVolumePropertyRequest_Param, isprimaryvol_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetVolumePropertyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetVolumePropertyRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetVolumePropertyRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetVolumePropertyRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetVolumePropertyRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetVolumePropertyResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetVolumePropertyResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetVolumePropertyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetVolumePropertyResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetVolumePropertyResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetVolumePropertyResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetVolumePropertyResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Volume, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Volume, name_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Volume, index_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Volume, total_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Volume, remain_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Volume, status_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Volume, maxiops_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Volume, maxbw_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Volume, miniops_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Volume, minbw_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Volume, subnqn_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Volume, uuid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Volume, arrayname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListVolumeRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListVolumeRequest_Param, array_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListVolumeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListVolumeRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListVolumeRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListVolumeRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListVolumeRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListVolumeResponse_Result_VolumeList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListVolumeResponse_Result_VolumeList, volumes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListVolumeResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListVolumeResponse_Result, status_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListVolumeResponse_Result, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListVolumeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListVolumeResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListVolumeResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListVolumeResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListVolumeResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosVolumeNameParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosVolumeNameParam, volumename_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosCreateVolumePolicyRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosCreateVolumePolicyRequest_Param, array_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosCreateVolumePolicyRequest_Param, vol_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosCreateVolumePolicyRequest_Param, minbw_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosCreateVolumePolicyRequest_Param, miniops_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosCreateVolumePolicyRequest_Param, maxbw_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosCreateVolumePolicyRequest_Param, maxiops_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosCreateVolumePolicyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosCreateVolumePolicyRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosCreateVolumePolicyRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosCreateVolumePolicyRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosCreateVolumePolicyRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosCreateVolumePolicyResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosCreateVolumePolicyResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosCreateVolumePolicyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosCreateVolumePolicyResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosCreateVolumePolicyResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosCreateVolumePolicyResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosCreateVolumePolicyResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosResetVolumePolicyRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosResetVolumePolicyRequest_Param, array_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosResetVolumePolicyRequest_Param, vol_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosResetVolumePolicyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosResetVolumePolicyRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosResetVolumePolicyRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosResetVolumePolicyRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosResetVolumePolicyRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::VolumeInfoRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::VolumeInfoRequest_Param, array_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::VolumeInfoRequest_Param, volume_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::VolumeInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::VolumeInfoRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::VolumeInfoRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::VolumeInfoRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::VolumeInfoRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosResetVolumePolicyResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosResetVolumePolicyResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosResetVolumePolicyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosResetVolumePolicyResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosResetVolumePolicyResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosResetVolumePolicyResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QosResetVolumePolicyResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::VolumeInfoResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::VolumeInfoResponse_Result, status_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::VolumeInfoResponse_Result, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::VolumeInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::VolumeInfoResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::VolumeInfoResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::VolumeInfoResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::VolumeInfoResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::VolumeRenameRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::VolumeRenameRequest_Param, array_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::VolumeRenameRequest_Param, name_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::VolumeRenameRequest_Param, newname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::VolumeRenameRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::VolumeRenameRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::VolumeRenameRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::VolumeRenameRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::VolumeRenameRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::VolumeRenameResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::VolumeRenameResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::VolumeRenameResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::VolumeRenameResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::VolumeRenameResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::VolumeRenameResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::VolumeRenameResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListWBTRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListWBTRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListWBTRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListWBTRequest, requestor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::WBTTest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::WBTTest, testname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListWBTResponse_Result_Tests, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListWBTResponse_Result_Tests, testlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListWBTResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListWBTResponse_Result, status_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListWBTResponse_Result, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListWBTResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListWBTResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListWBTResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListWBTResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListWBTResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListQOSPolicyRequest_Param_Volume, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListQOSPolicyRequest_Param_Volume, volumename_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListQOSPolicyRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListQOSPolicyRequest_Param, array_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListQOSPolicyRequest_Param, vol_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListQOSPolicyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListQOSPolicyRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListQOSPolicyRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListQOSPolicyRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListQOSPolicyRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QOSResult_Arrays, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QOSResult_Arrays, arrayname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QOSResult_RebuildPolicy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QOSResult_RebuildPolicy, rebuild_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QOSResult_VolumePolicies, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QOSResult_VolumePolicies, id_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QOSResult_VolumePolicies, maxbw_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QOSResult_VolumePolicies, maxiops_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QOSResult_VolumePolicies, miniops_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QOSResult_VolumePolicies, minbw_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QOSResult_VolumePolicies, min_bw_guarantee_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QOSResult_VolumePolicies, min_iops_guarantee_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QOSResult_VolumePolicies, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QOSResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QOSResult, arrayname_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QOSResult, rebuildpolicy_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::QOSResult, volumepolicies_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListQOSPolicyResponse_Result_ListQOSResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListQOSPolicyResponse_Result_ListQOSResult, qosresult_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListQOSPolicyResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListQOSPolicyResponse_Result, status_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListQOSPolicyResponse_Result, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListQOSPolicyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListQOSPolicyResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListQOSPolicyResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListQOSPolicyResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListQOSPolicyResponse, info_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::WBTRequest_Param_ArgvEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::WBTRequest_Param_ArgvEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::WBTRequest_Param_ArgvEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::WBTRequest_Param_ArgvEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::WBTRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::WBTRequest_Param, testname_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::WBTRequest_Param, argv_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::WBTRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::WBTRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::WBTRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::WBTRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::WBTRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::WBTResponse_Result_TestData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::WBTResponse_Result_TestData, testdata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::WBTResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::WBTResponse_Result, status_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::WBTResponse_Result, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::WBTResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::WBTResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::WBTResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::WBTResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::WBTResponse, info_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 11, sizeof(::grpc_cli::Status)},
  { 17, -1, sizeof(::grpc_cli::PosInfo)},
  { 23, -1, sizeof(::grpc_cli::StartSystemRequest)},
  { 31, -1, sizeof(::grpc_cli::SystemInfoRequest)},
  { 39, -1, sizeof(::grpc_cli::SystemInfoResponse_Result_Data)},
  { 59, -1, sizeof(::grpc_cli::SystemInfoResponse_Result)},
  { 66, -1, sizeof(::grpc_cli::SystemInfoResponse)},
  { 75, -1, sizeof(::grpc_cli::StopSystemRequest)},
  { 83, -1, sizeof(::grpc_cli::StopSystemResponse_Result)},
  { 89, -1, sizeof(::grpc_cli::StopSystemResponse)},
  { 98, -1, sizeof(::grpc_cli::GetSystemPropertyRequest)},
  { 106, -1, sizeof(::grpc_cli::GetSystemPropertyResponse_Result_Data)},
  { 112, -1, sizeof(::grpc_cli::GetSystemPropertyResponse_Result)},
  { 119, -1, sizeof(::grpc_cli::GetSystemPropertyResponse)},
  { 128, -1, sizeof(::grpc_cli::SetSystemPropertyRequest_Param)},
  { 134, -1, sizeof(::grpc_cli::SetSystemPropertyRequest)},
  { 143, -1, sizeof(::grpc_cli::SetSystemPropertyResponse_Result)},
  { 149, -1, sizeof(::grpc_cli::SetSystemPropertyResponse)},
  { 158, -1, sizeof(::grpc_cli::StartTelemetryRequest)},
  { 166, -1, sizeof(::grpc_cli::StartTelemetryResponse_Result)},
  { 172, -1, sizeof(::grpc_cli::StartTelemetryResponse)},
  { 181, -1, sizeof(::grpc_cli::StopTelemetryRequest)},
  { 189, -1, sizeof(::grpc_cli::StopTelemetryResponse_Result)},
  { 195, -1, sizeof(::grpc_cli::StopTelemetryResponse)},
  { 204, -1, sizeof(::grpc_cli::SetTelemetryPropertyRequest_Param)},
  { 210, -1, sizeof(::grpc_cli::SetTelemetryPropertyRequest)},
  { 219, -1, sizeof(::grpc_cli::SetTelemetryPropertyResponse_Result)},
  { 225, -1, sizeof(::grpc_cli::SetTelemetryPropertyResponse)},
  { 234, -1, sizeof(::grpc_cli::GetTelemetryPropertyRequest)},
  { 242, -1, sizeof(::grpc_cli::GetTelemetryPropertyResponse_Result_TelemetryProperty)},
  { 249, -1, sizeof(::grpc_cli::GetTelemetryPropertyResponse_Result)},
  { 256, -1, sizeof(::grpc_cli::GetTelemetryPropertyResponse)},
  { 265, -1, sizeof(::grpc_cli::ResetEventWrrRequest)},
  { 273, -1, sizeof(::grpc_cli::ResetEventWrrResponse_Result)},
  { 279, -1, sizeof(::grpc_cli::ResetEventWrrResponse)},
  { 288, -1, sizeof(::grpc_cli::ResetMbrRequest)},
  { 296, -1, sizeof(::grpc_cli::ResetMbrResponse_Result)},
  { 302, -1, sizeof(::grpc_cli::ResetMbrResponse)},
  { 311, -1, sizeof(::grpc_cli::DumpMemorySnapshotRequest_Param)},
  { 317, -1, sizeof(::grpc_cli::DumpMemorySnapshotRequest)},
  { 326, -1, sizeof(::grpc_cli::DumpMemorySnapshotResponse_Result)},
  { 332, -1, sizeof(::grpc_cli::DumpMemorySnapshotResponse)},
  { 341, -1, sizeof(::grpc_cli::StopRebuildingRequest_Param)},
  { 347, -1, sizeof(::grpc_cli::StopRebuildingRequest)},
  { 356, -1, sizeof(::grpc_cli::StopRebuildingResponse_Result)},
  { 362, -1, sizeof(::grpc_cli::StopRebuildingResponse)},
  { 371, -1, sizeof(::grpc_cli::UpdateEventWrrRequest_Param)},
  { 378, -1, sizeof(::grpc_cli::UpdateEventWrrRequest)},
  { 387, -1, sizeof(::grpc_cli::UpdateEventWrrResponse_Result)},
  { 393, -1, sizeof(::grpc_cli::UpdateEventWrrResponse)},
  { 402, -1, sizeof(::grpc_cli::AddSpareRequest_SpareDeviceName)},
  { 408, -1, sizeof(::grpc_cli::AddSpareRequest_Param)},
  { 415, -1, sizeof(::grpc_cli::AddSpareRequest)},
  { 424, -1, sizeof(::grpc_cli::AddSpareResponse_Result)},
  { 430, -1, sizeof(::grpc_cli::AddSpareResponse)},
  { 439, -1, sizeof(::grpc_cli::DeviceNameList)},
  { 445, -1, sizeof(::grpc_cli::RemoveSpareRequest_SpareDeviceName)},
  { 451, -1, sizeof(::grpc_cli::RemoveSpareRequest_Param)},
  { 458, -1, sizeof(::grpc_cli::RemoveSpareRequest)},
  { 467, -1, sizeof(::grpc_cli::RemoveSpareResponse_Result)},
  { 473, -1, sizeof(::grpc_cli::RemoveSpareResponse)},
  { 482, -1, sizeof(::grpc_cli::ReplaceArrayDeviceRequest_Param)},
  { 489, -1, sizeof(::grpc_cli::ReplaceArrayDeviceRequest)},
  { 498, -1, sizeof(::grpc_cli::ReplaceArrayDeviceResponse_Result)},
  { 504, -1, sizeof(::grpc_cli::ReplaceArrayDeviceResponse)},
  { 513, -1, sizeof(::grpc_cli::CreateArrayRequest_Param)},
  { 523, -1, sizeof(::grpc_cli::CreateArrayRequest)},
  { 532, -1, sizeof(::grpc_cli::CreateArrayResponse_Result)},
  { 538, -1, sizeof(::grpc_cli::CreateArrayResponse)},
  { 547, -1, sizeof(::grpc_cli::AutocreateArrayRequest_Param)},
  { 557, -1, sizeof(::grpc_cli::AutocreateArrayRequest)},
  { 566, -1, sizeof(::grpc_cli::AutocreateArrayResponse_Result)},
  { 572, -1, sizeof(::grpc_cli::AutocreateArrayResponse)},
  { 581, -1, sizeof(::grpc_cli::DeleteArrayRequest_Param)},
  { 587, -1, sizeof(::grpc_cli::DeleteArrayRequest)},
  { 596, -1, sizeof(::grpc_cli::DeleteArrayResponse_Result)},
  { 602, -1, sizeof(::grpc_cli::DeleteArrayResponse)},
  { 611, 619, sizeof(::grpc_cli::MountArrayRequest_Param)},
  { 622, -1, sizeof(::grpc_cli::MountArrayRequest)},
  { 631, -1, sizeof(::grpc_cli::MountArrayResponse_Result)},
  { 637, -1, sizeof(::grpc_cli::MountArrayResponse)},
  { 646, -1, sizeof(::grpc_cli::UnmountArrayRequest_Param)},
  { 652, -1, sizeof(::grpc_cli::UnmountArrayRequest)},
  { 661, -1, sizeof(::grpc_cli::UnmountArrayResponse_Result)},
  { 667, -1, sizeof(::grpc_cli::UnmountArrayResponse)},
  { 676, -1, sizeof(::grpc_cli::Array)},
  { 697, -1, sizeof(::grpc_cli::ListArrayRequest)},
  { 705, -1, sizeof(::grpc_cli::ListArrayResponse_Result_ArrayList)},
  { 711, -1, sizeof(::grpc_cli::ListArrayResponse_Result)},
  { 718, -1, sizeof(::grpc_cli::ListArrayResponse)},
  { 727, -1, sizeof(::grpc_cli::ArrayInfoRequest_Param)},
  { 733, -1, sizeof(::grpc_cli::ArrayInfoRequest)},
  { 742, -1, sizeof(::grpc_cli::ArrayInfoResponse_Result)},
  { 749, -1, sizeof(::grpc_cli::ArrayInfoResponse)},
  { 758, -1, sizeof(::grpc_cli::RebuildArrayRequest_Param)},
  { 764, -1, sizeof(::grpc_cli::RebuildArrayRequest)},
  { 773, -1, sizeof(::grpc_cli::RebuildArrayResponse_Result)},
  { 779, -1, sizeof(::grpc_cli::RebuildArrayResponse)},
  { 788, -1, sizeof(::grpc_cli::ListNodeRequest)},
  { 796, -1, sizeof(::grpc_cli::ListNodeResponse_Result_Node)},
  { 804, -1, sizeof(::grpc_cli::ListNodeResponse_Result)},
  { 811, -1, sizeof(::grpc_cli::ListNodeResponse)},
  { 820, -1, sizeof(::grpc_cli::ListHaVolumeRequest)},
  { 828, -1, sizeof(::grpc_cli::ListHaVolumeResponse_Result_Volume)},
  { 839, -1, sizeof(::grpc_cli::ListHaVolumeResponse_Result)},
  { 846, -1, sizeof(::grpc_cli::ListHaVolumeResponse)},
  { 855, -1, sizeof(::grpc_cli::ListHaReplicationRequest)},
  { 863, -1, sizeof(::grpc_cli::ListHaReplicationResponse_Result_Replication)},
  { 873, -1, sizeof(::grpc_cli::ListHaReplicationResponse_Result)},
  { 880, -1, sizeof(::grpc_cli::ListHaReplicationResponse)},
  { 889, -1, sizeof(::grpc_cli::StartHaReplicationRequest_Param)},
  { 904, -1, sizeof(::grpc_cli::StartHaReplicationRequest)},
  { 913, -1, sizeof(::grpc_cli::StartHaReplicationResponse_Result)},
  { 919, -1, sizeof(::grpc_cli::StartHaReplicationResponse)},
  { 928, -1, sizeof(::grpc_cli::SetLogLevelRequest_Param)},
  { 934, -1, sizeof(::grpc_cli::SetLogLevelRequest)},
  { 943, -1, sizeof(::grpc_cli::SetLogLevelResponse_Result)},
  { 949, -1, sizeof(::grpc_cli::SetLogLevelResponse)},
  { 958, -1, sizeof(::grpc_cli::SetLogPreferenceRequest_Param)},
  { 964, -1, sizeof(::grpc_cli::SetLogPreferenceRequest)},
  { 973, -1, sizeof(::grpc_cli::SetLogPreferenceResponse_Result)},
  { 979, -1, sizeof(::grpc_cli::SetLogPreferenceResponse)},
  { 988, -1, sizeof(::grpc_cli::LoggerInfoRequest)},
  { 996, -1, sizeof(::grpc_cli::LoggerInfoResponse_Result_LoggerInfo)},
  { 1010, -1, sizeof(::grpc_cli::LoggerInfoResponse_Result)},
  { 1017, -1, sizeof(::grpc_cli::LoggerInfoResponse)},
  { 1026, -1, sizeof(::grpc_cli::GetLogLevelRequest)},
  { 1034, -1, sizeof(::grpc_cli::GetLogLevelResponse_Result_LogLevel)},
  { 1040, -1, sizeof(::grpc_cli::GetLogLevelResponse_Result)},
  { 1047, -1, sizeof(::grpc_cli::GetLogLevelResponse)},
  { 1056, -1, sizeof(::grpc_cli::ApplyLogFilterRequest)},
  { 1064, -1, sizeof(::grpc_cli::ApplyLogFilterResponse_Result)},
  { 1070, -1, sizeof(::grpc_cli::ApplyLogFilterResponse)},
  { 1079, -1, sizeof(::grpc_cli::CreateDeviceRequest_Param)},
  { 1089, -1, sizeof(::grpc_cli::CreateDeviceRequest)},
  { 1098, -1, sizeof(::grpc_cli::CreateDeviceResponse_Result)},
  { 1104, -1, sizeof(::grpc_cli::CreateDeviceResponse)},
  { 1113, -1, sizeof(::grpc_cli::ScanDeviceRequest)},
  { 1121, -1, sizeof(::grpc_cli::ScanDeviceResponse_Result)},
  { 1127, -1, sizeof(::grpc_cli::ScanDeviceResponse)},
  { 1136, -1, sizeof(::grpc_cli::Device)},
  { 1149, -1, sizeof(::grpc_cli::ListDeviceRequest)},
  { 1157, -1, sizeof(::grpc_cli::ListDeviceResponse_Result_DeviceList)},
  { 1163, -1, sizeof(::grpc_cli::ListDeviceResponse_Result)},
  { 1170, -1, sizeof(::grpc_cli::ListDeviceResponse)},
  { 1179, -1, sizeof(::grpc_cli::SmartLog)},
  { 1206, -1, sizeof(::grpc_cli::GetSmartLogRequest_Param)},
  { 1212, -1, sizeof(::grpc_cli::GetSmartLogRequest)},
  { 1221, -1, sizeof(::grpc_cli::GetSmartLogResponse_Result)},
  { 1228, -1, sizeof(::grpc_cli::GetSmartLogResponse)},
  { 1237, -1, sizeof(::grpc_cli::CreateSubsystemRequest_Param)},
  { 1248, -1, sizeof(::grpc_cli::CreateSubsystemRequest)},
  { 1257, -1, sizeof(::grpc_cli::CreateSubsystemResponse_Result)},
  { 1263, -1, sizeof(::grpc_cli::CreateSubsystemResponse)},
  { 1272, -1, sizeof(::grpc_cli::DeleteSubsystemRequest_Param)},
  { 1278, -1, sizeof(::grpc_cli::DeleteSubsystemRequest)},
  { 1287, -1, sizeof(::grpc_cli::DeleteSubsystemResponse_Result)},
  { 1293, -1, sizeof(::grpc_cli::DeleteSubsystemResponse)},
  { 1302, -1, sizeof(::grpc_cli::AddListenerRequest_Param)},
  { 1312, -1, sizeof(::grpc_cli::AddListenerRequest)},
  { 1321, -1, sizeof(::grpc_cli::AddListenerResponse_Result)},
  { 1327, -1, sizeof(::grpc_cli::AddListenerResponse)},
  { 1336, -1, sizeof(::grpc_cli::RemoveListenerRequest_Param)},
  { 1345, -1, sizeof(::grpc_cli::RemoveListenerRequest)},
  { 1354, -1, sizeof(::grpc_cli::RemoveListenerResponse_Result)},
  { 1360, -1, sizeof(::grpc_cli::RemoveListenerResponse)},
  { 1369, -1, sizeof(::grpc_cli::Listener_Address)},
  { 1379, -1, sizeof(::grpc_cli::Listener)},
  { 1386, -1, sizeof(::grpc_cli::ListListenerRequest_Param)},
  { 1392, -1, sizeof(::grpc_cli::ListListenerRequest)},
  { 1401, -1, sizeof(::grpc_cli::ListListenerResponse_Result_ListenerList)},
  { 1407, -1, sizeof(::grpc_cli::ListListenerResponse_Result)},
  { 1414, -1, sizeof(::grpc_cli::ListListenerResponse)},
  { 1423, -1, sizeof(::grpc_cli::Subsystem_AddressInfo)},
  { 1433, -1, sizeof(::grpc_cli::Subsystem_Host)},
  { 1439, -1, sizeof(::grpc_cli::Subsystem_Namespace)},
  { 1447, -1, sizeof(::grpc_cli::Subsystem)},
  { 1462, -1, sizeof(::grpc_cli::ListSubsystemRequest)},
  { 1470, -1, sizeof(::grpc_cli::ListSubsystemResponse_Result_SubsystemList)},
  { 1476, -1, sizeof(::grpc_cli::ListSubsystemResponse_Result)},
  { 1483, -1, sizeof(::grpc_cli::ListSubsystemResponse)},
  { 1492, -1, sizeof(::grpc_cli::SubsystemInfoRequest_Param)},
  { 1498, -1, sizeof(::grpc_cli::SubsystemInfoRequest)},
  { 1507, -1, sizeof(::grpc_cli::SubsystemInfoResponse_Result_SubsystemList)},
  { 1513, -1, sizeof(::grpc_cli::SubsystemInfoResponse_Result)},
  { 1520, -1, sizeof(::grpc_cli::SubsystemInfoResponse)},
  { 1529, -1, sizeof(::grpc_cli::CreateTransportRequest_Param)},
  { 1537, -1, sizeof(::grpc_cli::CreateTransportRequest)},
  { 1546, -1, sizeof(::grpc_cli::CreateTransportResponse_Result)},
  { 1552, -1, sizeof(::grpc_cli::CreateTransportResponse)},
  { 1561, -1, sizeof(::grpc_cli::ListTransportRequest)},
  { 1569, -1, sizeof(::grpc_cli::Transport)},
  { 1583, -1, sizeof(::grpc_cli::ListTransportResponse_Result_TransportList)},
  { 1589, -1, sizeof(::grpc_cli::ListTransportResponse_Result)},
  { 1596, -1, sizeof(::grpc_cli::ListTransportResponse)},
  { 1605, -1, sizeof(::grpc_cli::CreateVolumeRequest_Param)},
  { 1620, -1, sizeof(::grpc_cli::CreateVolumeRequest)},
  { 1629, -1, sizeof(::grpc_cli::CreateVolumeResponse_Result_CreateVolumeData)},
  { 1635, -1, sizeof(::grpc_cli::CreateVolumeResponse_Result)},
  { 1642, -1, sizeof(::grpc_cli::CreateVolumeResponse)},
  { 1651, -1, sizeof(::grpc_cli::DeleteVolumeRequest_Param)},
  { 1658, -1, sizeof(::grpc_cli::DeleteVolumeRequest)},
  { 1667, -1, sizeof(::grpc_cli::DeleteVolumeResponse_Result)},
  { 1673, -1, sizeof(::grpc_cli::DeleteVolumeResponse)},
  { 1682, -1, sizeof(::grpc_cli::UnmountVolumeRequest_Param)},
  { 1689, -1, sizeof(::grpc_cli::UnmountVolumeRequest)},
  { 1698, -1, sizeof(::grpc_cli::UnmountVolumeResponse_Result)},
  { 1704, -1, sizeof(::grpc_cli::UnmountVolumeResponse)},
  { 1713, -1, sizeof(::grpc_cli::MountVolumeRequest_Param)},
  { 1722, -1, sizeof(::grpc_cli::MountVolumeRequest)},
  { 1731, -1, sizeof(::grpc_cli::MountVolumeResponse_Result)},
  { 1737, -1, sizeof(::grpc_cli::MountVolumeResponse)},
  { 1746, -1, sizeof(::grpc_cli::SetVolumePropertyRequest_Param)},
  { 1759, -1, sizeof(::grpc_cli::SetVolumePropertyRequest)},
  { 1768, -1, sizeof(::grpc_cli::SetVolumePropertyResponse_Result)},
  { 1774, -1, sizeof(::grpc_cli::SetVolumePropertyResponse)},
  { 1783, -1, sizeof(::grpc_cli::Volume)},
  { 1800, -1, sizeof(::grpc_cli::ListVolumeRequest_Param)},
  { 1806, -1, sizeof(::grpc_cli::ListVolumeRequest)},
  { 1815, -1, sizeof(::grpc_cli::ListVolumeResponse_Result_VolumeList)},
  { 1821, -1, sizeof(::grpc_cli::ListVolumeResponse_Result)},
  { 1828, -1, sizeof(::grpc_cli::ListVolumeResponse)},
  { 1837, -1, sizeof(::grpc_cli::QosVolumeNameParam)},
  { 1843, -1, sizeof(::grpc_cli::QosCreateVolumePolicyRequest_Param)},
  { 1854, -1, sizeof(::grpc_cli::QosCreateVolumePolicyRequest)},
  { 1863, -1, sizeof(::grpc_cli::QosCreateVolumePolicyResponse_Result)},
  { 1869, -1, sizeof(::grpc_cli::QosCreateVolumePolicyResponse)},
  { 1878, -1, sizeof(::grpc_cli::QosResetVolumePolicyRequest_Param)},
  { 1885, -1, sizeof(::grpc_cli::QosResetVolumePolicyRequest)},
  { 1894, -1, sizeof(::grpc_cli::VolumeInfoRequest_Param)},
  { 1901, -1, sizeof(::grpc_cli::VolumeInfoRequest)},
  { 1910, -1, sizeof(::grpc_cli::QosResetVolumePolicyResponse_Result)},
  { 1916, -1, sizeof(::grpc_cli::QosResetVolumePolicyResponse)},
  { 1925, -1, sizeof(::grpc_cli::VolumeInfoResponse_Result)},
  { 1932, -1, sizeof(::grpc_cli::VolumeInfoResponse)},
  { 1941, -1, sizeof(::grpc_cli::VolumeRenameRequest_Param)},
  { 1949, -1, sizeof(::grpc_cli::VolumeRenameRequest)},
  { 1958, -1, sizeof(::grpc_cli::VolumeRenameResponse_Result)},
  { 1964, -1, sizeof(::grpc_cli::VolumeRenameResponse)},
  { 1973, -1, sizeof(::grpc_cli::ListWBTRequest)},
  { 1981, -1, sizeof(::grpc_cli::WBTTest)},
  { 1987, -1, sizeof(::grpc_cli::ListWBTResponse_Result_Tests)},
  { 1993, -1, sizeof(::grpc_cli::ListWBTResponse_Result)},
  { 2000, -1, sizeof(::grpc_cli::ListWBTResponse)},
  { 2009, -1, sizeof(::grpc_cli::ListQOSPolicyRequest_Param_Volume)},
  { 2015, -1, sizeof(::grpc_cli::ListQOSPolicyRequest_Param)},
  { 2022, -1, sizeof(::grpc_cli::ListQOSPolicyRequest)},
  { 2031, -1, sizeof(::grpc_cli::QOSResult_Arrays)},
  { 2037, -1, sizeof(::grpc_cli::QOSResult_RebuildPolicy)},
  { 2043, -1, sizeof(::grpc_cli::QOSResult_VolumePolicies)},
  { 2056, -1, sizeof(::grpc_cli::QOSResult)},
  { 2064, -1, sizeof(::grpc_cli::ListQOSPolicyResponse_Result_ListQOSResult)},
  { 2070, -1, sizeof(::grpc_cli::ListQOSPolicyResponse_Result)},
  { 2077, -1, sizeof(::grpc_cli::ListQOSPolicyResponse)},
  { 2086, 2093, sizeof(::grpc_cli::WBTRequest_Param_ArgvEntry_DoNotUse)},
  { 2095, -1, sizeof(::grpc_cli::WBTRequest_Param)},
  { 2102, -1, sizeof(::grpc_cli::WBTRequest)},
  { 2111, -1, sizeof(::grpc_cli::WBTResponse_Result_TestData)},
  { 2117, -1, sizeof(::grpc_cli::WBTResponse_Result)},
  { 2124, -1, sizeof(::grpc_cli::WBTResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_Status_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_PosInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_StartSystemRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SystemInfoRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SystemInfoResponse_Result_Data_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SystemInfoResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SystemInfoResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_StopSystemRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_StopSystemResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_StopSystemResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_GetSystemPropertyRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_GetSystemPropertyResponse_Result_Data_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_GetSystemPropertyResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_GetSystemPropertyResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SetSystemPropertyRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SetSystemPropertyRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SetSystemPropertyResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SetSystemPropertyResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_StartTelemetryRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_StartTelemetryResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_StartTelemetryResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_StopTelemetryRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_StopTelemetryResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_StopTelemetryResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SetTelemetryPropertyRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SetTelemetryPropertyRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SetTelemetryPropertyResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SetTelemetryPropertyResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_GetTelemetryPropertyRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_GetTelemetryPropertyResponse_Result_TelemetryProperty_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_GetTelemetryPropertyResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_GetTelemetryPropertyResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ResetEventWrrRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ResetEventWrrResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ResetEventWrrResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ResetMbrRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ResetMbrResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ResetMbrResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_DumpMemorySnapshotRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_DumpMemorySnapshotRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_DumpMemorySnapshotResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_DumpMemorySnapshotResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_StopRebuildingRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_StopRebuildingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_StopRebuildingResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_StopRebuildingResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_UpdateEventWrrRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_UpdateEventWrrRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_UpdateEventWrrResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_UpdateEventWrrResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_AddSpareRequest_SpareDeviceName_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_AddSpareRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_AddSpareRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_AddSpareResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_AddSpareResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_DeviceNameList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_RemoveSpareRequest_SpareDeviceName_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_RemoveSpareRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_RemoveSpareRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_RemoveSpareResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_RemoveSpareResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ReplaceArrayDeviceRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ReplaceArrayDeviceRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ReplaceArrayDeviceResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ReplaceArrayDeviceResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_CreateArrayRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_CreateArrayRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_CreateArrayResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_CreateArrayResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_AutocreateArrayRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_AutocreateArrayRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_AutocreateArrayResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_AutocreateArrayResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_DeleteArrayRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_DeleteArrayRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_DeleteArrayResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_DeleteArrayResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_MountArrayRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_MountArrayRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_MountArrayResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_MountArrayResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_UnmountArrayRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_UnmountArrayRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_UnmountArrayResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_UnmountArrayResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_Array_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListArrayRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListArrayResponse_Result_ArrayList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListArrayResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListArrayResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ArrayInfoRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ArrayInfoRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ArrayInfoResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ArrayInfoResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_RebuildArrayRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_RebuildArrayRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_RebuildArrayResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_RebuildArrayResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListNodeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListNodeResponse_Result_Node_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListNodeResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListNodeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListHaVolumeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListHaVolumeResponse_Result_Volume_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListHaVolumeResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListHaVolumeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListHaReplicationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListHaReplicationResponse_Result_Replication_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListHaReplicationResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListHaReplicationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_StartHaReplicationRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_StartHaReplicationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_StartHaReplicationResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_StartHaReplicationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SetLogLevelRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SetLogLevelRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SetLogLevelResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SetLogLevelResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SetLogPreferenceRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SetLogPreferenceRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SetLogPreferenceResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SetLogPreferenceResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_LoggerInfoRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_LoggerInfoResponse_Result_LoggerInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_LoggerInfoResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_LoggerInfoResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_GetLogLevelRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_GetLogLevelResponse_Result_LogLevel_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_GetLogLevelResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_GetLogLevelResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ApplyLogFilterRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ApplyLogFilterResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ApplyLogFilterResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_CreateDeviceRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_CreateDeviceRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_CreateDeviceResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_CreateDeviceResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ScanDeviceRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ScanDeviceResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ScanDeviceResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_Device_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListDeviceRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListDeviceResponse_Result_DeviceList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListDeviceResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListDeviceResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SmartLog_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_GetSmartLogRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_GetSmartLogRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_GetSmartLogResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_GetSmartLogResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_CreateSubsystemRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_CreateSubsystemRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_CreateSubsystemResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_CreateSubsystemResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_DeleteSubsystemRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_DeleteSubsystemRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_DeleteSubsystemResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_DeleteSubsystemResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_AddListenerRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_AddListenerRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_AddListenerResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_AddListenerResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_RemoveListenerRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_RemoveListenerRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_RemoveListenerResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_RemoveListenerResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_Listener_Address_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_Listener_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListListenerRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListListenerRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListListenerResponse_Result_ListenerList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListListenerResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListListenerResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_Subsystem_AddressInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_Subsystem_Host_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_Subsystem_Namespace_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_Subsystem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListSubsystemRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListSubsystemResponse_Result_SubsystemList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListSubsystemResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListSubsystemResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SubsystemInfoRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SubsystemInfoRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SubsystemInfoResponse_Result_SubsystemList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SubsystemInfoResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SubsystemInfoResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_CreateTransportRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_CreateTransportRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_CreateTransportResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_CreateTransportResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListTransportRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_Transport_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListTransportResponse_Result_TransportList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListTransportResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListTransportResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_CreateVolumeRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_CreateVolumeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_CreateVolumeResponse_Result_CreateVolumeData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_CreateVolumeResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_CreateVolumeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_DeleteVolumeRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_DeleteVolumeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_DeleteVolumeResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_DeleteVolumeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_UnmountVolumeRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_UnmountVolumeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_UnmountVolumeResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_UnmountVolumeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_MountVolumeRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_MountVolumeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_MountVolumeResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_MountVolumeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SetVolumePropertyRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SetVolumePropertyRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SetVolumePropertyResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SetVolumePropertyResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_Volume_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListVolumeRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListVolumeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListVolumeResponse_Result_VolumeList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListVolumeResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListVolumeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_QosVolumeNameParam_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_QosCreateVolumePolicyRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_QosCreateVolumePolicyRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_QosCreateVolumePolicyResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_QosCreateVolumePolicyResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_QosResetVolumePolicyRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_QosResetVolumePolicyRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_VolumeInfoRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_VolumeInfoRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_QosResetVolumePolicyResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_QosResetVolumePolicyResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_VolumeInfoResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_VolumeInfoResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_VolumeRenameRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_VolumeRenameRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_VolumeRenameResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_VolumeRenameResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListWBTRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_WBTTest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListWBTResponse_Result_Tests_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListWBTResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListWBTResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListQOSPolicyRequest_Param_Volume_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListQOSPolicyRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListQOSPolicyRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_QOSResult_Arrays_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_QOSResult_RebuildPolicy_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_QOSResult_VolumePolicies_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_QOSResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListQOSPolicyResponse_Result_ListQOSResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListQOSPolicyResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListQOSPolicyResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_WBTRequest_Param_ArgvEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_WBTRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_WBTRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_WBTResponse_Result_TestData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_WBTResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_WBTResponse_default_instance_),
};

const char descriptor_table_protodef_cli_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\tcli.proto\022\010grpc_cli\032\021annotations.proto"
  "\"\332\001\n\006Status\022\021\n\004code\030\001 \001(\005H\000\210\001\001\022\027\n\nevent_"
  "name\030\002 \001(\tH\001\210\001\001\022\030\n\013description\030\003 \001(\tH\002\210\001"
  "\001\022\022\n\005cause\030\004 \001(\tH\003\210\001\001\022\025\n\010solution\030\005 \001(\tH"
  "\004\210\001\001\022\024\n\007message\030\006 \001(\tH\005\210\001\001B\007\n\005_codeB\r\n\013_"
  "event_nameB\016\n\014_descriptionB\010\n\006_causeB\013\n\t"
  "_solutionB\n\n\010_message\"\032\n\007PosInfo\022\017\n\007vers"
  "ion\030\001 \001(\t\"E\n\022StartSystemRequest\022\017\n\007comma"
  "nd\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequestor\030\003 \001(\t"
  "\"D\n\021SystemInfoRequest\022\017\n\007command\030\001 \001(\t\022\013"
  "\n\003rid\030\002 \001(\t\022\021\n\trequestor\030\003 \001(\t\"\373\004\n\022Syste"
  "mInfoResponse\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 "
  "\001(\t\0223\n\006result\030\003 \001(\0132#.grpc_cli.SystemInf"
  "oResponse.Result\022\037\n\004info\030\004 \001(\0132\021.grpc_cl"
  "i.PosInfo\032\360\003\n\006Result\022 \n\006status\030\001 \001(\0132\020.g"
  "rpc_cli.Status\0226\n\004data\030\002 \001(\0132(.grpc_cli."
  "SystemInfoResponse.Result.Data\032\213\003\n\004Data\022"
  "\017\n\007version\030\001 \001(\t\022\023\n\013biosVersion\030\002 \001(\t\022\022\n"
  "\nbiosVendor\030\003 \001(\t\022\027\n\017biosReleaseDate\030\004 \001"
  "(\t\022\032\n\022systemManufacturer\030\005 \001(\t\022\031\n\021system"
  "ProductName\030\006 \001(\t\022\032\n\022systemSerialNumber\030"
  "\007 \001(\t\022\022\n\nsystemUuid\030\010 \001(\t\022\035\n\025baseboardMa"
  "nufacturer\030\t \001(\t\022\034\n\024baseboardProductName"
  "\030\n \001(\t\022\035\n\025baseboardSerialNumber\030\013 \001(\t\022\030\n"
  "\020baseboardVersion\030\014 \001(\t\022\035\n\025processorManu"
  "facturer\030\r \001(\t\022\030\n\020processorVersion\030\016 \001(\t"
  "\022\032\n\022processorFrequency\030\017 \001(\t\"D\n\021StopSyst"
  "emRequest\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022"
  "\021\n\trequestor\030\003 \001(\t\"\264\001\n\022StopSystemRespons"
  "e\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\0223\n\006resul"
  "t\030\003 \001(\0132#.grpc_cli.StopSystemResponse.Re"
  "sult\022\037\n\004info\030\004 \001(\0132\021.grpc_cli.PosInfo\032*\n"
  "\006Result\022 \n\006status\030\001 \001(\0132\020.grpc_cli.Statu"
  "s\"K\n\030GetSystemPropertyRequest\022\017\n\007command"
  "\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequestor\030\003 \001(\t\"\242"
  "\002\n\031GetSystemPropertyResponse\022\017\n\007command\030"
  "\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022:\n\006result\030\003 \001(\0132*.grp"
  "c_cli.GetSystemPropertyResponse.Result\022\037"
  "\n\004info\030\004 \001(\0132\021.grpc_cli.PosInfo\032\211\001\n\006Resu"
  "lt\022 \n\006status\030\001 \001(\0132\020.grpc_cli.Status\022=\n\004"
  "data\030\002 \001(\0132/.grpc_cli.GetSystemPropertyR"
  "esponse.Result.Data\032\036\n\004Data\022\026\n\016rebuild_p"
  "olicy\030\001 \001(\t\"\234\001\n\030SetSystemPropertyRequest"
  "\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\treques"
  "tor\030\003 \001(\t\0227\n\005param\030\004 \001(\0132(.grpc_cli.SetS"
  "ystemPropertyRequest.Param\032\026\n\005Param\022\r\n\005l"
  "evel\030\001 \001(\t\"\302\001\n\031SetSystemPropertyResponse"
  "\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022:\n\006result"
  "\030\003 \001(\0132*.grpc_cli.SetSystemPropertyRespo"
  "nse.Result\022\037\n\004info\030\004 \001(\0132\021.grpc_cli.PosI"
  "nfo\032*\n\006Result\022 \n\006status\030\001 \001(\0132\020.grpc_cli"
  ".Status\"H\n\025StartTelemetryRequest\022\017\n\007comm"
  "and\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequestor\030\003 \001("
  "\t\"\274\001\n\026StartTelemetryResponse\022\017\n\007command\030"
  "\001 \001(\t\022\013\n\003rid\030\002 \001(\t\0227\n\006result\030\003 \001(\0132\'.grp"
  "c_cli.StartTelemetryResponse.Result\022\037\n\004i"
  "nfo\030\004 \001(\0132\021.grpc_cli.PosInfo\032*\n\006Result\022 "
  "\n\006status\030\001 \001(\0132\020.grpc_cli.Status\"G\n\024Stop"
  "TelemetryRequest\022\017\n\007command\030\001 \001(\t\022\013\n\003rid"
  "\030\002 \001(\t\022\021\n\trequestor\030\003 \001(\t\"\272\001\n\025StopTeleme"
  "tryResponse\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001("
  "\t\0226\n\006result\030\003 \001(\0132&.grpc_cli.StopTelemet"
  "ryResponse.Result\022\037\n\004info\030\004 \001(\0132\021.grpc_c"
  "li.PosInfo\032*\n\006Result\022 \n\006status\030\001 \001(\0132\020.g"
  "rpc_cli.Status\"\260\001\n\033SetTelemetryPropertyR"
  "equest\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\t"
  "requestor\030\003 \001(\t\022:\n\005param\030\004 \001(\0132+.grpc_cl"
  "i.SetTelemetryPropertyRequest.Param\032$\n\005P"
  "aram\022\033\n\023publicationListPath\030\001 \001(\t\"\310\001\n\034Se"
  "tTelemetryPropertyResponse\022\017\n\007command\030\001 "
  "\001(\t\022\013\n\003rid\030\002 \001(\t\022=\n\006result\030\003 \001(\0132-.grpc_"
  "cli.SetTelemetryPropertyResponse.Result\022"
  "\037\n\004info\030\004 \001(\0132\021.grpc_cli.PosInfo\032*\n\006Resu"
  "lt\022 \n\006status\030\001 \001(\0132\020.grpc_cli.Status\"N\n\033"
  "GetTelemetryPropertyRequest\022\017\n\007command\030\001"
  " \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequestor\030\003 \001(\t\"\332\002\n"
  "\034GetTelemetryPropertyResponse\022\017\n\007command"
  "\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022=\n\006result\030\003 \001(\0132-.gr"
  "pc_cli.GetTelemetryPropertyResponse.Resu"
  "lt\022\037\n\004info\030\004 \001(\0132\021.grpc_cli.PosInfo\032\273\001\n\006"
  "Result\022 \n\006status\030\001 \001(\0132\020.grpc_cli.Status"
  "\022M\n\004data\030\002 \001(\0132\?.grpc_cli.GetTelemetryPr"
  "opertyResponse.Result.TelemetryProperty\032"
  "@\n\021TelemetryProperty\022\016\n\006status\030\001 \001(\010\022\033\n\023"
  "publicationListPath\030\002 \001(\t\"G\n\024ResetEventW"
  "rrRequest\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022"
  "\021\n\trequestor\030\003 \001(\t\"\272\001\n\025ResetEventWrrResp"
  "onse\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\0226\n\006re"
  "sult\030\003 \001(\0132&.grpc_cli.ResetEventWrrRespo"
  "nse.Result\022\037\n\004info\030\004 \001(\0132\021.grpc_cli.PosI"
  "nfo\032*\n\006Result\022 \n\006status\030\001 \001(\0132\020.grpc_cli"
  ".Status\"B\n\017ResetMbrRequest\022\017\n\007command\030\001 "
  "\001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequestor\030\003 \001(\t\"\260\001\n\020"
  "ResetMbrResponse\022\017\n\007command\030\001 \001(\t\022\013\n\003rid"
  "\030\002 \001(\t\0221\n\006result\030\003 \001(\0132!.grpc_cli.ResetM"
  "brResponse.Result\022\037\n\004info\030\004 \001(\0132\021.grpc_c"
  "li.PosInfo\032*\n\006Result\022 \n\006status\030\001 \001(\0132\020.g"
  "rpc_cli.Status\"\235\001\n\031DumpMemorySnapshotReq"
  "uest\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\tre"
  "questor\030\003 \001(\t\0228\n\005param\030\004 \001(\0132).grpc_cli."
  "DumpMemorySnapshotRequest.Param\032\025\n\005Param"
  "\022\014\n\004path\030\001 \001(\t\"\304\001\n\032DumpMemorySnapshotRes"
  "ponse\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022;\n\006r"
  "esult\030\003 \001(\0132+.grpc_cli.DumpMemorySnapsho"
  "tResponse.Result\022\037\n\004info\030\004 \001(\0132\021.grpc_cl"
  "i.PosInfo\032*\n\006Result\022 \n\006status\030\001 \001(\0132\020.gr"
  "pc_cli.Status\"\225\001\n\025StopRebuildingRequest\022"
  "\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequest"
  "or\030\003 \001(\t\0224\n\005param\030\004 \001(\0132%.grpc_cli.StopR"
  "ebuildingRequest.Param\032\025\n\005Param\022\014\n\004name\030"
  "\001 \001(\t\"\274\001\n\026StopRebuildingResponse\022\017\n\007comm"
  "and\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\0227\n\006result\030\003 \001(\0132\'"
  ".grpc_cli.StopRebuildingResponse.Result\022"
  "\037\n\004info\030\004 \001(\0132\021.grpc_cli.PosInfo\032*\n\006Resu"
  "lt\022 \n\006status\030\001 \001(\0132\020.grpc_cli.Status\"\245\001\n"
  "\025UpdateEventWrrRequest\022\017\n\007command\030\001 \001(\t\022"
  "\013\n\003rid\030\002 \001(\t\022\021\n\trequestor\030\003 \001(\t\0224\n\005param"
  "\030\004 \001(\0132%.grpc_cli.UpdateEventWrrRequest."
  "Param\032%\n\005Param\022\014\n\004name\030\001 \001(\t\022\016\n\006weight\030\002"
  " \001(\003\"\274\001\n\026UpdateEventWrrResponse\022\017\n\007comma"
  "nd\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\0227\n\006result\030\003 \001(\0132\'."
  "grpc_cli.UpdateEventWrrResponse.Result\022\037"
  "\n\004info\030\004 \001(\0132\021.grpc_cli.PosInfo\032*\n\006Resul"
  "t\022 \n\006status\030\001 \001(\0132\020.grpc_cli.Status\"\353\001\n\017"
  "AddSpareRequest\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030"
  "\002 \001(\t\022\021\n\trequestor\030\003 \001(\t\022.\n\005param\030\004 \001(\0132"
  "\037.grpc_cli.AddSpareRequest.Param\032%\n\017Spar"
  "eDeviceName\022\022\n\ndeviceName\030\001 \001(\t\032P\n\005Param"
  "\022\r\n\005array\030\001 \001(\t\0228\n\005spare\030\003 \003(\0132).grpc_cl"
  "i.AddSpareRequest.SpareDeviceName\"\260\001\n\020Ad"
  "dSpareResponse\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002"
  " \001(\t\0221\n\006result\030\003 \001(\0132!.grpc_cli.AddSpare"
  "Response.Result\022\037\n\004info\030\004 \001(\0132\021.grpc_cli"
  ".PosInfo\032*\n\006Result\022 \n\006status\030\001 \001(\0132\020.grp"
  "c_cli.Status\"$\n\016DeviceNameList\022\022\n\ndevice"
  "Name\030\001 \001(\t\"\364\001\n\022RemoveSpareRequest\022\017\n\007com"
  "mand\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequestor\030\003 \001"
  "(\t\0221\n\005param\030\004 \001(\0132\".grpc_cli.RemoveSpare"
  "Request.Param\032%\n\017SpareDeviceName\022\022\n\ndevi"
  "ceName\030\001 \001(\t\032S\n\005Param\022\r\n\005array\030\001 \001(\t\022;\n\005"
  "spare\030\002 \003(\0132,.grpc_cli.RemoveSpareReques"
  "t.SpareDeviceName\"\266\001\n\023RemoveSpareRespons"
  "e\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\0224\n\006resul"
  "t\030\003 \001(\0132$.grpc_cli.RemoveSpareResponse.R"
  "esult\022\037\n\004info\030\004 \001(\0132\021.grpc_cli.PosInfo\032*"
  "\n\006Result\022 \n\006status\030\001 \001(\0132\020.grpc_cli.Stat"
  "us\"\256\001\n\031ReplaceArrayDeviceRequest\022\017\n\007comm"
  "and\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequestor\030\003 \001("
  "\t\0228\n\005param\030\004 \001(\0132).grpc_cli.ReplaceArray"
  "DeviceRequest.Param\032&\n\005Param\022\r\n\005array\030\001 "
  "\001(\t\022\016\n\006device\030\002 \001(\t\"\304\001\n\032ReplaceArrayDevi"
  "ceResponse\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t"
  "\022;\n\006result\030\003 \001(\0132+.grpc_cli.ReplaceArray"
  "DeviceResponse.Result\022\037\n\004info\030\004 \001(\0132\021.gr"
  "pc_cli.PosInfo\032*\n\006Result\022 \n\006status\030\001 \001(\013"
  "2\020.grpc_cli.Status\"\235\002\n\022CreateArrayReques"
  "t\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\treque"
  "stor\030\003 \001(\t\0221\n\005param\030\004 \001(\0132\".grpc_cli.Cre"
  "ateArrayRequest.Param\032\242\001\n\005Param\022\014\n\004name\030"
  "\001 \001(\t\022(\n\006buffer\030\002 \003(\0132\030.grpc_cli.DeviceN"
  "ameList\022&\n\004data\030\003 \003(\0132\030.grpc_cli.DeviceN"
  "ameList\022\'\n\005spare\030\004 \003(\0132\030.grpc_cli.Device"
  "NameList\022\020\n\010raidtype\030\005 \001(\t\"\266\001\n\023CreateArr"
  "ayResponse\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t"
  "\0224\n\006result\030\003 \001(\0132$.grpc_cli.CreateArrayR"
  "esponse.Result\022\037\n\004info\030\004 \001(\0132\021.grpc_cli."
  "PosInfo\032*\n\006Result\022 \n\006status\030\001 \001(\0132\020.grpc"
  "_cli.Status\"\366\001\n\026AutocreateArrayRequest\022\017"
  "\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequesto"
  "r\030\003 \001(\t\0225\n\005param\030\004 \001(\0132&.grpc_cli.Autocr"
  "eateArrayRequest.Param\032t\n\005Param\022\014\n\004name\030"
  "\001 \001(\t\022(\n\006buffer\030\002 \003(\0132\030.grpc_cli.DeviceN"
  "ameList\022\017\n\007numData\030\003 \001(\005\022\020\n\010numSpare\030\004 \001"
  "(\005\022\020\n\010raidtype\030\005 \001(\t\"\276\001\n\027AutocreateArray"
  "Response\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\0228"
  "\n\006result\030\003 \001(\0132(.grpc_cli.AutocreateArra"
  "yResponse.Result\022\037\n\004info\030\004 \001(\0132\021.grpc_cl"
  "i.PosInfo\032*\n\006Result\022 \n\006status\030\001 \001(\0132\020.gr"
  "pc_cli.Status\"\217\001\n\022DeleteArrayRequest\022\017\n\007"
  "command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequestor\030"
  "\003 \001(\t\0221\n\005param\030\004 \001(\0132\".grpc_cli.DeleteAr"
  "rayRequest.Param\032\025\n\005Param\022\014\n\004name\030\001 \001(\t\""
  "\266\001\n\023DeleteArrayResponse\022\017\n\007command\030\001 \001(\t"
  "\022\013\n\003rid\030\002 \001(\t\0224\n\006result\030\003 \001(\0132$.grpc_cli"
  ".DeleteArrayResponse.Result\022\037\n\004info\030\004 \001("
  "\0132\021.grpc_cli.PosInfo\032*\n\006Result\022 \n\006status"
  "\030\001 \001(\0132\020.grpc_cli.Status\"\363\001\n\021MountArrayR"
  "equest\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\t"
  "requestor\030\003 \001(\t\0220\n\005param\030\004 \001(\0132!.grpc_cl"
  "i.MountArrayRequest.Param\032{\n\005Param\022\014\n\004na"
  "me\030\001 \001(\t\022\037\n\022enableWriteThrough\030\002 \001(\010H\000\210\001"
  "\001\022\032\n\rtargetAddress\030\003 \001(\tH\001\210\001\001B\025\n\023_enable"
  "WriteThroughB\020\n\016_targetAddress\"\264\001\n\022Mount"
  "ArrayResponse\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 "
  "\001(\t\0223\n\006result\030\003 \001(\0132#.grpc_cli.MountArra"
  "yResponse.Result\022\037\n\004info\030\004 \001(\0132\021.grpc_cl"
  "i.PosInfo\032*\n\006Result\022 \n\006status\030\001 \001(\0132\020.gr"
  "pc_cli.Status\"\221\001\n\023UnmountArrayRequest\022\017\n"
  "\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequestor"
  "\030\003 \001(\t\0222\n\005param\030\004 \001(\0132#.grpc_cli.Unmount"
  "ArrayRequest.Param\032\025\n\005Param\022\014\n\004name\030\001 \001("
  "\t\"\270\001\n\024UnmountArrayResponse\022\017\n\007command\030\001 "
  "\001(\t\022\013\n\003rid\030\002 \001(\t\0225\n\006result\030\003 \001(\0132%.grpc_"
  "cli.UnmountArrayResponse.Result\022\037\n\004info\030"
  "\004 \001(\0132\021.grpc_cli.PosInfo\032*\n\006Result\022 \n\006st"
  "atus\030\001 \001(\0132\020.grpc_cli.Status\"\313\002\n\005Array\022\r"
  "\n\005index\030\001 \001(\005\022\020\n\010uniqueId\030\002 \001(\t\022\014\n\004name\030"
  "\003 \001(\t\022\016\n\006status\030\004 \001(\t\022\r\n\005state\030\005 \001(\t\022\021\n\t"
  "situation\030\006 \001(\t\022\026\n\016createDatetime\030\007 \001(\t\022"
  "\026\n\016updateDatetime\030\010 \001(\t\022\032\n\022rebuildingPro"
  "gress\030\t \001(\t\022\020\n\010capacity\030\n \001(\004\022\014\n\004used\030\013 "
  "\001(\004\022\016\n\006gcMode\030\014 \001(\t\022\020\n\010metaRaid\030\r \001(\t\022\020\n"
  "\010dataRaid\030\016 \001(\t\022\033\n\023writeThroughEnabled\030\017"
  " \001(\010\022$\n\ndevicelist\030\020 \003(\0132\020.grpc_cli.Devi"
  "ce\"C\n\020ListArrayRequest\022\017\n\007command\030\001 \001(\t\022"
  "\013\n\003rid\030\002 \001(\t\022\021\n\trequestor\030\003 \001(\t\"\240\002\n\021List"
  "ArrayResponse\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 "
  "\001(\t\0222\n\006result\030\003 \001(\0132\".grpc_cli.ListArray"
  "Response.Result\022\037\n\004info\030\004 \001(\0132\021.grpc_cli"
  ".PosInfo\032\227\001\n\006Result\022 \n\006status\030\001 \001(\0132\020.gr"
  "pc_cli.Status\022:\n\004data\030\002 \001(\0132,.grpc_cli.L"
  "istArrayResponse.Result.ArrayList\032/\n\tArr"
  "ayList\022\"\n\tarrayList\030\001 \003(\0132\017.grpc_cli.Arr"
  "ay\"\213\001\n\020ArrayInfoRequest\022\017\n\007command\030\001 \001(\t"
  "\022\013\n\003rid\030\002 \001(\t\022\021\n\trequestor\030\003 \001(\t\022/\n\005para"
  "m\030\004 \001(\0132 .grpc_cli.ArrayInfoRequest.Para"
  "m\032\025\n\005Param\022\014\n\004name\030\001 \001(\t\"\321\001\n\021ArrayInfoRe"
  "sponse\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\0222\n\006"
  "result\030\003 \001(\0132\".grpc_cli.ArrayInfoRespons"
  "e.Result\022\037\n\004info\030\004 \001(\0132\021.grpc_cli.PosInf"
  "o\032I\n\006Result\022 \n\006status\030\001 \001(\0132\020.grpc_cli.S"
  "tatus\022\035\n\004data\030\002 \001(\0132\017.grpc_cli.Array\"\221\001\n"
  "\023RebuildArrayRequest\022\017\n\007command\030\001 \001(\t\022\013\n"
  "\003rid\030\002 \001(\t\022\021\n\trequestor\030\003 \001(\t\0222\n\005param\030\004"
  " \001(\0132#.grpc_cli.RebuildArrayRequest.Para"
  "m\032\025\n\005Param\022\014\n\004name\030\001 \001(\t\"\270\001\n\024RebuildArra"
  "yResponse\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022"
  "5\n\006result\030\003 \001(\0132%.grpc_cli.RebuildArrayR"
  "esponse.Result\022\037\n\004info\030\004 \001(\0132\021.grpc_cli."
  "PosInfo\032*\n\006Result\022 \n\006status\030\001 \001(\0132\020.grpc"
  "_cli.Status\"B\n\017ListNodeRequest\022\017\n\007comman"
  "d\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequestor\030\003 \001(\t\""
  "\233\002\n\020ListNodeResponse\022\017\n\007command\030\001 \001(\t\022\013\n"
  "\003rid\030\002 \001(\t\0221\n\006result\030\003 \001(\0132!.grpc_cli.Li"
  "stNodeResponse.Result\022\037\n\004info\030\004 \001(\0132\021.gr"
  "pc_cli.PosInfo\032\224\001\n\006Result\022 \n\006status\030\001 \001("
  "\0132\020.grpc_cli.Status\0224\n\004data\030\002 \003(\0132&.grpc"
  "_cli.ListNodeResponse.Result.Node\0322\n\004Nod"
  "e\022\014\n\004name\030\001 \001(\t\022\n\n\002ip\030\002 \001(\t\022\020\n\010lastseen\030"
  "\003 \001(\t\"F\n\023ListHaVolumeRequest\022\017\n\007command\030"
  "\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequestor\030\003 \001(\t\"\336\002"
  "\n\024ListHaVolumeResponse\022\017\n\007command\030\001 \001(\t\022"
  "\013\n\003rid\030\002 \001(\t\0225\n\006result\030\003 \001(\0132%.grpc_cli."
  "ListHaVolumeResponse.Result\022\037\n\004info\030\004 \001("
  "\0132\021.grpc_cli.PosInfo\032\317\001\n\006Result\022 \n\006statu"
  "s\030\001 \001(\0132\020.grpc_cli.Status\022:\n\004data\030\002 \003(\0132"
  ",.grpc_cli.ListHaVolumeResponse.Result.V"
  "olume\032g\n\006Volume\022\n\n\002id\030\001 \001(\005\022\014\n\004name\030\002 \001("
  "\t\022\020\n\010nodeName\030\003 \001(\t\022\021\n\tarrayName\030\004 \001(\t\022\014"
  "\n\004size\030\005 \001(\003\022\020\n\010lastseen\030\006 \001(\t\"K\n\030ListHa"
  "ReplicationRequest\022\017\n\007command\030\001 \001(\t\022\013\n\003r"
  "id\030\002 \001(\t\022\021\n\trequestor\030\003 \001(\t\"\226\003\n\031ListHaRe"
  "plicationResponse\022\017\n\007command\030\001 \001(\t\022\013\n\003ri"
  "d\030\002 \001(\t\022:\n\006result\030\003 \001(\0132*.grpc_cli.ListH"
  "aReplicationResponse.Result\022\037\n\004info\030\004 \001("
  "\0132\021.grpc_cli.PosInfo\032\375\001\n\006Result\022 \n\006statu"
  "s\030\001 \001(\0132\020.grpc_cli.Status\022D\n\004data\030\002 \003(\0132"
  "6.grpc_cli.ListHaReplicationResponse.Res"
  "ult.Replication\032\212\001\n\013Replication\022\n\n\002id\030\001 "
  "\001(\005\022\026\n\016sourceVolumeId\030\002 \001(\005\022\032\n\022sourceWal"
  "Volume_id\030\003 \001(\005\022\033\n\023destinationVolumeId\030\004"
  " \001(\005\022\036\n\026destinationWalVolumeId\030\005 \001(\005\"\223\003\n"
  "\031StartHaReplicationRequest\022\017\n\007command\030\001 "
  "\001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequestor\030\003 \001(\t\0228\n\005p"
  "aram\030\004 \001(\0132).grpc_cli.StartHaReplication"
  "Request.Param\032\212\002\n\005Param\022\027\n\017primaryNodeNa"
  "me\030\001 \001(\t\022\030\n\020primaryArrayName\030\002 \001(\t\022\031\n\021pr"
  "imaryVolumeName\030\003 \001(\t\022\034\n\024primaryWalVolum"
  "eName\030\004 \001(\t\022\031\n\021secondaryNodeName\030\005 \001(\t\022\032"
  "\n\022secondaryArrayName\030\006 \001(\t\022\033\n\023secondaryV"
  "olumeName\030\007 \001(\t\022\036\n\026secondaryWalVolumeNam"
  "e\030\010 \001(\t\022\016\n\006stuats\030\t \001(\t\022\021\n\ttimestamp\030\n \001"
  "(\t\"\304\001\n\032StartHaReplicationResponse\022\017\n\007com"
  "mand\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022;\n\006result\030\003 \001(\0132"
  "+.grpc_cli.StartHaReplicationResponse.Re"
  "sult\022\037\n\004info\030\004 \001(\0132\021.grpc_cli.PosInfo\032*\n"
  "\006Result\022 \n\006status\030\001 \001(\0132\020.grpc_cli.Statu"
  "s\"\220\001\n\022SetLogLevelRequest\022\017\n\007command\030\001 \001("
  "\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequestor\030\003 \001(\t\0221\n\005par"
  "am\030\004 \001(\0132\".grpc_cli.SetLogLevelRequest.P"
  "aram\032\026\n\005Param\022\r\n\005level\030\001 \001(\t\"\266\001\n\023SetLogL"
  "evelResponse\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001"
  "(\t\0224\n\006result\030\003 \001(\0132$.grpc_cli.SetLogLeve"
  "lResponse.Result\022\037\n\004info\030\004 \001(\0132\021.grpc_cl"
  "i.PosInfo\032*\n\006Result\022 \n\006status\030\001 \001(\0132\020.gr"
  "pc_cli.Status\"\246\001\n\027SetLogPreferenceReques"
  "t\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\treque"
  "stor\030\003 \001(\t\0226\n\005param\030\004 \001(\0132\'.grpc_cli.Set"
  "LogPreferenceRequest.Param\032\"\n\005Param\022\031\n\021s"
  "tructuredLogging\030\001 \001(\t\"\300\001\n\030SetLogPrefere"
  "nceResponse\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001("
  "\t\0229\n\006result\030\003 \001(\0132).grpc_cli.SetLogPrefe"
  "renceResponse.Result\022\037\n\004info\030\004 \001(\0132\021.grp"
  "c_cli.PosInfo\032*\n\006Result\022 \n\006status\030\001 \001(\0132"
  "\020.grpc_cli.Status\"D\n\021LoggerInfoRequest\022\017"
  "\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequesto"
  "r\030\003 \001(\t\"\345\003\n\022LoggerInfoResponse\022\017\n\007comman"
  "d\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\0223\n\006result\030\003 \001(\0132#.g"
  "rpc_cli.LoggerInfoResponse.Result\022\037\n\004inf"
  "o\030\004 \001(\0132\021.grpc_cli.PosInfo\032\332\002\n\006Result\022 \n"
  "\006status\030\001 \001(\0132\020.grpc_cli.Status\022<\n\004data\030"
  "\002 \001(\0132..grpc_cli.LoggerInfoResponse.Resu"
  "lt.LoggerInfo\032\357\001\n\nLoggerInfo\022\024\n\014minorLog"
  "Path\030\001 \001(\t\022\024\n\014majorLogPath\030\002 \001(\t\022\027\n\017logf"
  "ileSizeInMb\030\003 \001(\t\022\034\n\024logfileRotationCoun"
  "t\030\004 \001(\005\022\034\n\024minAllowableLogLevel\030\005 \001(\t\022\025\n"
  "\rfilterEnabled\030\006 \001(\005\022\026\n\016filterIncluded\030\007"
  " \001(\t\022\026\n\016filterExcluded\030\010 \001(\t\022\031\n\021structur"
  "edLogging\030\t \001(\010\"E\n\022GetLogLevelRequest\022\017\n"
  "\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequestor"
  "\030\003 \001(\t\"\217\002\n\023GetLogLevelResponse\022\017\n\007comman"
  "d\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\0224\n\006result\030\003 \001(\0132$.g"
  "rpc_cli.GetLogLevelResponse.Result\022\037\n\004in"
  "fo\030\004 \001(\0132\021.grpc_cli.PosInfo\032\202\001\n\006Result\022 "
  "\n\006status\030\001 \001(\0132\020.grpc_cli.Status\022;\n\004data"
  "\030\002 \001(\0132-.grpc_cli.GetLogLevelResponse.Re"
  "sult.LogLevel\032\031\n\010LogLevel\022\r\n\005level\030\001 \001(\t"
  "\"H\n\025ApplyLogFilterRequest\022\017\n\007command\030\001 \001"
  "(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequestor\030\003 \001(\t\"\274\001\n\026A"
  "pplyLogFilterResponse\022\017\n\007command\030\001 \001(\t\022\013"
  "\n\003rid\030\002 \001(\t\0227\n\006result\030\003 \001(\0132\'.grpc_cli.A"
  "pplyLogFilterResponse.Result\022\037\n\004info\030\004 \001"
  "(\0132\021.grpc_cli.PosInfo\032*\n\006Result\022 \n\006statu"
  "s\030\001 \001(\0132\020.grpc_cli.Status\"\326\001\n\023CreateDevi"
  "ceRequest\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022"
  "\021\n\trequestor\030\003 \001(\t\0222\n\005param\030\004 \001(\0132#.grpc"
  "_cli.CreateDeviceRequest.Param\032Z\n\005Param\022"
  "\014\n\004name\030\001 \001(\t\022\021\n\tnumBlocks\030\002 \001(\r\022\021\n\tbloc"
  "kSize\030\003 \001(\r\022\017\n\007devType\030\004 \001(\t\022\014\n\004numa\030\005 \001"
  "(\r\"\270\001\n\024CreateDeviceResponse\022\017\n\007command\030\001"
  " \001(\t\022\013\n\003rid\030\002 \001(\t\0225\n\006result\030\003 \001(\0132%.grpc"
  "_cli.CreateDeviceResponse.Result\022\037\n\004info"
  "\030\004 \001(\0132\021.grpc_cli.PosInfo\032*\n\006Result\022 \n\006s"
  "tatus\030\001 \001(\0132\020.grpc_cli.Status\"D\n\021ScanDev"
  "iceRequest\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t"
  "\022\021\n\trequestor\030\003 \001(\t\"\264\001\n\022ScanDeviceRespon"
  "se\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\0223\n\006resu"
  "lt\030\003 \001(\0132#.grpc_cli.ScanDeviceResponse.R"
  "esult\022\037\n\004info\030\004 \001(\0132\021.grpc_cli.PosInfo\032*"
  "\n\006Result\022 \n\006status\030\001 \001(\0132\020.grpc_cli.Stat"
  "us\"\213\001\n\006Device\022\014\n\004name\030\001 \001(\t\022\014\n\004type\030\002 \001("
  "\t\022\017\n\007address\030\003 \001(\t\022\r\n\005class\030\004 \001(\t\022\023\n\013mod"
  "elNumber\030\005 \001(\t\022\014\n\004numa\030\006 \001(\t\022\014\n\004size\030\007 \001"
  "(\004\022\024\n\014serialNumber\030\010 \001(\t\"D\n\021ListDeviceRe"
  "quest\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\tr"
  "equestor\030\003 \001(\t\"\247\002\n\022ListDeviceResponse\022\017\n"
  "\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\0223\n\006result\030\003 "
  "\001(\0132#.grpc_cli.ListDeviceResponse.Result"
  "\022\037\n\004info\030\004 \001(\0132\021.grpc_cli.PosInfo\032\234\001\n\006Re"
  "sult\022 \n\006status\030\001 \001(\0132\020.grpc_cli.Status\022<"
  "\n\004data\030\002 \001(\0132..grpc_cli.ListDeviceRespon"
  "se.Result.DeviceList\0322\n\nDeviceList\022$\n\nde"
  "vicelist\030\001 \003(\0132\020.grpc_cli.Device\"\335\004\n\010Sma"
  "rtLog\022\033\n\023availableSpareSpace\030\001 \001(\t\022\023\n\013te"
  "mperature\030\002 \001(\t\022\031\n\021deviceReliability\030\003 \001"
  "(\t\022\020\n\010readOnly\030\004 \001(\t\022\034\n\024volatileMemoryBa"
  "ckup\030\005 \001(\t\022\032\n\022currentTemperature\030\006 \001(\t\022\026"
  "\n\016availableSpare\030\007 \001(\t\022\037\n\027availableSpare"
  "Threshold\030\010 \001(\t\022\032\n\022lifePercentageUsed\030\t "
  "\001(\t\022\025\n\rdataUnitsRead\030\n \001(\t\022\030\n\020dataUnitsW"
  "ritten\030\013 \001(\t\022\030\n\020hostReadCommands\030\014 \001(\t\022\031"
  "\n\021hostWriteCommands\030\r \001(\t\022\032\n\022controllerB"
  "usyTime\030\016 \001(\t\022\023\n\013powerCycles\030\017 \001(\t\022\024\n\014po"
  "werOnHours\030\020 \001(\t\022\027\n\017unsafeShutdowns\030\021 \001("
  "\t\022 \n\030unrecoverableMediaErrors\030\022 \001(\t\022\037\n\027l"
  "ifetimeErrorLogEntries\030\023 \001(\t\022\036\n\026warningT"
  "emperatureTime\030\024 \001(\t\022\037\n\027criticalTemperat"
  "ureTime\030\025 \001(\t\022\031\n\021temperatureSensor\030\026 \003(\t"
  "\"\217\001\n\022GetSmartLogRequest\022\017\n\007command\030\001 \001(\t"
  "\022\013\n\003rid\030\002 \001(\t\022\021\n\trequestor\030\003 \001(\t\0221\n\005para"
  "m\030\004 \001(\0132\".grpc_cli.GetSmartLogRequest.Pa"
  "ram\032\025\n\005Param\022\014\n\004name\030\001 \001(\t\"\330\001\n\023GetSmartL"
  "ogResponse\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t"
  "\0224\n\006result\030\003 \001(\0132$.grpc_cli.GetSmartLogR"
  "esponse.Result\022\037\n\004info\030\004 \001(\0132\021.grpc_cli."
  "PosInfo\032L\n\006Result\022 \n\006status\030\001 \001(\0132\020.grpc"
  "_cli.Status\022 \n\004data\030\002 \001(\0132\022.grpc_cli.Sma"
  "rtLog\"\205\002\n\026CreateSubsystemRequest\022\017\n\007comm"
  "and\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequestor\030\003 \001("
  "\t\0225\n\005param\030\004 \001(\0132&.grpc_cli.CreateSubsys"
  "temRequest.Param\032\202\001\n\005Param\022\013\n\003nqn\030\001 \001(\t\022"
  "\024\n\014serialNumber\030\002 \001(\t\022\023\n\013modelNumber\030\003 \001"
  "(\t\022\025\n\rmaxNamespaces\030\004 \001(\r\022\024\n\014allowAnyHos"
  "t\030\005 \001(\010\022\024\n\014anaReporting\030\006 \001(\010\"\276\001\n\027Create"
  "SubsystemResponse\022\017\n\007command\030\001 \001(\t\022\013\n\003ri"
  "d\030\002 \001(\t\0228\n\006result\030\003 \001(\0132(.grpc_cli.Creat"
  "eSubsystemResponse.Result\022\037\n\004info\030\004 \001(\0132"
  "\021.grpc_cli.PosInfo\032*\n\006Result\022 \n\006status\030\001"
  " \001(\0132\020.grpc_cli.Status\"\231\001\n\026DeleteSubsyst"
  "emRequest\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022"
  "\021\n\trequestor\030\003 \001(\t\0225\n\005param\030\004 \001(\0132&.grpc"
  "_cli.DeleteSubsystemRequest.Param\032\027\n\005Par"
  "am\022\016\n\006subnqn\030\001 \001(\t\"\276\001\n\027DeleteSubsystemRe"
  "sponse\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\0228\n\006"
  "result\030\003 \001(\0132(.grpc_cli.DeleteSubsystemR"
  "esponse.Result\022\037\n\004info\030\004 \001(\0132\021.grpc_cli."
  "PosInfo\032*\n\006Result\022 \n\006status\030\001 \001(\0132\020.grpc"
  "_cli.Status\"\351\001\n\022AddListenerRequest\022\017\n\007co"
  "mmand\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequestor\030\003 "
  "\001(\t\0221\n\005param\030\004 \001(\0132\".grpc_cli.AddListene"
  "rRequest.Param\032o\n\005Param\022\016\n\006subnqn\030\001 \001(\t\022"
  "\025\n\rtransportType\030\002 \001(\t\022\025\n\rtargetAddress\030"
  "\003 \001(\t\022\032\n\022transportServiceId\030\004 \001(\t\022\014\n\004uui"
  "d\030\005 \001(\t\"\266\001\n\023AddListenerResponse\022\017\n\007comma"
  "nd\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\0224\n\006result\030\003 \001(\0132$."
  "grpc_cli.AddListenerResponse.Result\022\037\n\004i"
  "nfo\030\004 \001(\0132\021.grpc_cli.PosInfo\032*\n\006Result\022 "
  "\n\006status\030\001 \001(\0132\020.grpc_cli.Status\"\341\001\n\025Rem"
  "oveListenerRequest\022\017\n\007command\030\001 \001(\t\022\013\n\003r"
  "id\030\002 \001(\t\022\021\n\trequestor\030\003 \001(\t\0224\n\005param\030\004 \001"
  "(\0132%.grpc_cli.RemoveListenerRequest.Para"
  "m\032a\n\005Param\022\016\n\006subnqn\030\001 \001(\t\022\025\n\rtransportT"
  "ype\030\002 \001(\t\022\025\n\rtargetAddress\030\003 \001(\t\022\032\n\022tran"
  "sportServiceId\030\004 \001(\t\"\274\001\n\026RemoveListenerR"
  "esponse\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\0227\n"
  "\006result\030\003 \001(\0132\'.grpc_cli.RemoveListenerR"
  "esponse.Result\022\037\n\004info\030\004 \001(\0132\021.grpc_cli."
  "PosInfo\032*\n\006Result\022 \n\006status\030\001 \001(\0132\020.grpc"
  "_cli.Status\"\243\001\n\010Listener\022+\n\007address\030\001 \001("
  "\0132\032.grpc_cli.Listener.Address\022\020\n\010anaStat"
  "e\030\002 \001(\t\032X\n\007Address\022\016\n\006trtype\030\001 \001(\t\022\016\n\006ad"
  "rfam\030\002 \001(\t\022\016\n\006traddr\030\003 \001(\t\022\017\n\007trsvcid\030\004 "
  "\001(\t\022\014\n\004uuid\030\005 \001(\t\"\223\001\n\023ListListenerReques"
  "t\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\treque"
  "stor\030\003 \001(\t\0222\n\005param\030\004 \001(\0132#.grpc_cli.Lis"
  "tListenerRequest.Param\032\027\n\005Param\022\016\n\006subnq"
  "n\030\001 \001(\t\"\265\002\n\024ListListenerResponse\022\017\n\007comm"
  "and\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\0225\n\006result\030\003 \001(\0132%"
  ".grpc_cli.ListListenerResponse.Result\022\037\n"
  "\004info\030\004 \001(\0132\021.grpc_cli.PosInfo\032\246\001\n\006Resul"
  "t\022 \n\006status\030\001 \001(\0132\020.grpc_cli.Status\022@\n\004d"
  "ata\030\002 \001(\01322.grpc_cli.ListListenerRespons"
  "e.Result.ListenerList\0328\n\014ListenerList\022(\n"
  "\014listenerlist\030\001 \003(\0132\022.grpc_cli.Listener\""
  "\363\003\n\tSubsystem\022\013\n\003nqn\030\001 \001(\t\022\017\n\007subtype\030\002 "
  "\001(\t\0228\n\017listenAddresses\030\003 \003(\0132\037.grpc_cli."
  "Subsystem.AddressInfo\022\024\n\014allowAnyHost\030\004 "
  "\001(\005\022\'\n\005hosts\030\005 \003(\0132\030.grpc_cli.Subsystem."
  "Host\022\024\n\014serialNumber\030\006 \001(\t\022\023\n\013modelNumbe"
  "r\030\007 \001(\t\022\025\n\rmaxNamespaces\030\010 \001(\005\022\014\n\004uuid\030\n"
  " \001(\t\0221\n\nnamespaces\030\t \003(\0132\035.grpc_cli.Subs"
  "ystem.Namespace\032|\n\013AddressInfo\022\025\n\rtransp"
  "ortType\030\001 \001(\t\022\025\n\raddressFamily\030\002 \001(\t\022\025\n\r"
  "targetAddress\030\003 \001(\t\022\032\n\022transportServiceI"
  "d\030\004 \001(\t\022\014\n\004uuid\030\005 \001(\t\032\023\n\004Host\022\013\n\003nqn\030\001 \001"
  "(\t\0329\n\tNamespace\022\014\n\004nsid\030\001 \001(\005\022\020\n\010bdevNam"
  "e\030\002 \001(\t\022\014\n\004uuid\030\003 \001(\t\"G\n\024ListSubsystemRe"
  "quest\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\tr"
  "equestor\030\003 \001(\t\"\274\002\n\025ListSubsystemResponse"
  "\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\0226\n\006result"
  "\030\003 \001(\0132&.grpc_cli.ListSubsystemResponse."
  "Result\022\037\n\004info\030\004 \001(\0132\021.grpc_cli.PosInfo\032"
  "\253\001\n\006Result\022 \n\006status\030\001 \001(\0132\020.grpc_cli.St"
  "atus\022B\n\004data\030\002 \001(\01324.grpc_cli.ListSubsys"
  "temResponse.Result.SubsystemList\032;\n\rSubs"
  "ystemList\022*\n\rsubsystemlist\030\001 \003(\0132\023.grpc_"
  "cli.Subsystem\"\225\001\n\024SubsystemInfoRequest\022\017"
  "\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequesto"
  "r\030\003 \001(\t\0223\n\005param\030\004 \001(\0132$.grpc_cli.Subsys"
  "temInfoRequest.Param\032\027\n\005Param\022\016\n\006subnqn\030"
  "\001 \001(\t\"\274\002\n\025SubsystemInfoResponse\022\017\n\007comma"
  "nd\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\0226\n\006result\030\003 \001(\0132&."
  "grpc_cli.SubsystemInfoResponse.Result\022\037\n"
  "\004info\030\004 \001(\0132\021.grpc_cli.PosInfo\032\253\001\n\006Resul"
  "t\022 \n\006status\030\001 \001(\0132\020.grpc_cli.Status\022B\n\004d"
  "ata\030\002 \001(\01324.grpc_cli.SubsystemInfoRespon"
  "se.Result.SubsystemList\032;\n\rSubsystemList"
  "\022*\n\rsubsystemlist\030\001 \003(\0132\023.grpc_cli.Subsy"
  "stem\"\314\001\n\026CreateTransportRequest\022\017\n\007comma"
  "nd\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequestor\030\003 \001(\t"
  "\0225\n\005param\030\004 \001(\0132&.grpc_cli.CreateTranspo"
  "rtRequest.Param\032J\n\005Param\022\025\n\rtransportTyp"
  "e\030\001 \001(\t\022\024\n\014bufCacheSize\030\002 \001(\005\022\024\n\014numShar"
  "edBuf\030\003 \001(\005\"\276\001\n\027CreateTransportResponse\022"
  "\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\0228\n\006result\030"
  "\003 \001(\0132(.grpc_cli.CreateTransportResponse"
  ".Result\022\037\n\004info\030\004 \001(\0132\021.grpc_cli.PosInfo"
  "\032*\n\006Result\022 \n\006status\030\001 \001(\0132\020.grpc_cli.St"
  "atus\"G\n\024ListTransportRequest\022\017\n\007command\030"
  "\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequestor\030\003 \001(\t\"\324\001"
  "\n\tTransport\022\014\n\004type\030\001 \001(\t\022\025\n\rmaxQueueDep"
  "th\030\002 \001(\005\022\033\n\023maxIoQpairsPerCtrlr\030\003 \001(\005\022\031\n"
  "\021inCapsuleDataSize\030\004 \001(\005\022\021\n\tmaxIoSize\030\005 "
  "\001(\005\022\022\n\nioUnitSize\030\006 \001(\005\022\027\n\017abortTimeoutS"
  "ec\030\007 \001(\005\022\024\n\014bufCacheSize\030\010 \001(\005\022\024\n\014numSha"
  "redBuf\030\t \001(\005\"\274\002\n\025ListTransportResponse\022\017"
  "\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\0226\n\006result\030\003"
  " \001(\0132&.grpc_cli.ListTransportResponse.Re"
  "sult\022\037\n\004info\030\004 \001(\0132\021.grpc_cli.PosInfo\032\253\001"
  "\n\006Result\022 \n\006status\030\001 \001(\0132\020.grpc_cli.Stat"
  "us\022B\n\004data\030\002 \001(\01324.grpc_cli.ListTranspor"
  "tResponse.Result.TransportList\032;\n\rTransp"
  "ortList\022*\n\rtransportlist\030\001 \003(\0132\023.grpc_cl"
  "i.Transport\"\253\002\n\023CreateVolumeRequest\022\017\n\007c"
  "ommand\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequestor\030\003"
  " \001(\t\0222\n\005param\030\004 \001(\0132#.grpc_cli.CreateVol"
  "umeRequest.Param\032\256\001\n\005Param\022\014\n\004name\030\001 \001(\t"
  "\022\r\n\005array\030\002 \001(\t\022\014\n\004size\030\003 \001(\004\022\017\n\007maxiops"
  "\030\004 \001(\004\022\r\n\005maxbw\030\005 \001(\004\022\020\n\010isWalVol\030\006 \001(\010\022"
  "\014\n\004uuid\030\007 \001(\t\022\014\n\004nsid\030\010 \001(\005\022\021\n\tisPrimary"
  "\030\t \001(\010\022\031\n\021isAnaNonoptimized\030\n \001(\010\"\252\002\n\024Cr"
  "eateVolumeResponse\022\017\n\007command\030\001 \001(\t\022\013\n\003r"
  "id\030\002 \001(\t\0225\n\006result\030\003 \001(\0132%.grpc_cli.Crea"
  "teVolumeResponse.Result\022\037\n\004info\030\004 \001(\0132\021."
  "grpc_cli.PosInfo\032\233\001\n\006Result\022 \n\006status\030\001 "
  "\001(\0132\020.grpc_cli.Status\022D\n\004data\030\002 \001(\01326.gr"
  "pc_cli.CreateVolumeResponse.Result.Creat"
  "eVolumeData\032)\n\020CreateVolumeData\022\025\n\rtarge"
  "tAddress\030\001 \001(\t\"\240\001\n\023DeleteVolumeRequest\022\017"
  "\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequesto"
  "r\030\003 \001(\t\0222\n\005param\030\004 \001(\0132#.grpc_cli.Delete"
  "VolumeRequest.Param\032$\n\005Param\022\014\n\004name\030\001 \001"
  "(\t\022\r\n\005array\030\002 \001(\t\"\270\001\n\024DeleteVolumeRespon"
  "se\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\0225\n\006resu"
  "lt\030\003 \001(\0132%.grpc_cli.DeleteVolumeResponse"
  ".Result\022\037\n\004info\030\004 \001(\0132\021.grpc_cli.PosInfo"
  "\032*\n\006Result\022 \n\006status\030\001 \001(\0132\020.grpc_cli.St"
  "atus\"\242\001\n\024UnmountVolumeRequest\022\017\n\007command"
  "\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequestor\030\003 \001(\t\0223"
  "\n\005param\030\004 \001(\0132$.grpc_cli.UnmountVolumeRe"
  "quest.Param\032$\n\005Param\022\014\n\004name\030\001 \001(\t\022\r\n\005ar"
  "ray\030\002 \001(\t\"\272\001\n\025UnmountVolumeResponse\022\017\n\007c"
  "ommand\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\0226\n\006result\030\003 \001("
  "\0132&.grpc_cli.UnmountVolumeResponse.Resul"
  "t\022\037\n\004info\030\004 \001(\0132\021.grpc_cli.PosInfo\032*\n\006Re"
  "sult\022 \n\006status\030\001 \001(\0132\020.grpc_cli.Status\"\274"
  "\001\n\022MountVolumeRequest\022\017\n\007command\030\001 \001(\t\022\013"
  "\n\003rid\030\002 \001(\t\022\021\n\trequestor\030\003 \001(\t\0221\n\005param\030"
  "\004 \001(\0132\".grpc_cli.MountVolumeRequest.Para"
  "m\032B\n\005Param\022\014\n\004name\030\001 \001(\t\022\016\n\006subnqn\030\002 \001(\t"
  "\022\r\n\005array\030\003 \001(\t\022\014\n\004nsid\030\004 \001(\r\"\266\001\n\023MountV"
  "olumeResponse\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 "
  "\001(\t\0224\n\006result\030\003 \001(\0132$.grpc_cli.MountVolu"
  "meResponse.Result\022\037\n\004info\030\004 \001(\0132\021.grpc_c"
  "li.PosInfo\032*\n\006Result\022 \n\006status\030\001 \001(\0132\020.g"
  "rpc_cli.Status\"\240\002\n\030SetVolumePropertyRequ"
  "est\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\treq"
  "uestor\030\003 \001(\t\0227\n\005param\030\004 \001(\0132(.grpc_cli.S"
  "etVolumePropertyRequest.Param\032\231\001\n\005Param\022"
  "\014\n\004name\030\001 \001(\t\022\r\n\005array\030\002 \001(\t\022\025\n\rnewVolum"
  "eName\030\003 \001(\t\022\014\n\004size\030\004 \001(\004\022\017\n\007maxiops\030\005 \001"
  "(\004\022\r\n\005maxbw\030\006 \001(\004\022\030\n\020updateprimaryvol\030\007 "
  "\001(\010\022\024\n\014isprimaryvol\030\010 \001(\010\"\302\001\n\031SetVolumeP"
  "ropertyResponse\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030"
  "\002 \001(\t\022:\n\006result\030\003 \001(\0132*.grpc_cli.SetVolu"
  "mePropertyResponse.Result\022\037\n\004info\030\004 \001(\0132"
  "\021.grpc_cli.PosInfo\032*\n\006Result\022 \n\006status\030\001"
  " \001(\0132\020.grpc_cli.Status\"\305\001\n\006Volume\022\014\n\004nam"
  "e\030\001 \001(\t\022\r\n\005index\030\002 \001(\005\022\r\n\005total\030\003 \001(\004\022\016\n"
  "\006remain\030\004 \001(\004\022\016\n\006status\030\005 \001(\t\022\017\n\007maxiops"
  "\030\006 \001(\004\022\r\n\005maxbw\030\007 \001(\004\022\017\n\007miniops\030\010 \001(\004\022\r"
  "\n\005minbw\030\t \001(\004\022\016\n\006subnqn\030\n \001(\t\022\014\n\004uuid\030\013 "
  "\001(\t\022\021\n\tarrayname\030\014 \001(\t\"\216\001\n\021ListVolumeReq"
  "uest\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\tre"
  "questor\030\003 \001(\t\0220\n\005param\030\004 \001(\0132!.grpc_cli."
  "ListVolumeRequest.Param\032\026\n\005Param\022\r\n\005arra"
  "y\030\001 \001(\t\"\244\002\n\022ListVolumeResponse\022\017\n\007comman"
  "d\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\0223\n\006result\030\003 \001(\0132#.g"
  "rpc_cli.ListVolumeResponse.Result\022\037\n\004inf"
  "o\030\004 \001(\0132\021.grpc_cli.PosInfo\032\231\001\n\006Result\022 \n"
  "\006status\030\001 \001(\0132\020.grpc_cli.Status\022<\n\004data\030"
  "\002 \001(\0132..grpc_cli.ListVolumeResponse.Resu"
  "lt.VolumeList\032/\n\nVolumeList\022!\n\007volumes\030\001"
  " \003(\0132\020.grpc_cli.Volume\"(\n\022QosVolumeNameP"
  "aram\022\022\n\nvolumeName\030\001 \001(\t\"\220\002\n\034QosCreateVo"
  "lumePolicyRequest\022\017\n\007command\030\001 \001(\t\022\013\n\003ri"
  "d\030\002 \001(\t\022\021\n\trequestor\030\003 \001(\t\022;\n\005param\030\004 \001("
  "\0132,.grpc_cli.QosCreateVolumePolicyReques"
  "t.Param\032\201\001\n\005Param\022\r\n\005array\030\001 \001(\t\022)\n\003vol\030"
  "\002 \003(\0132\034.grpc_cli.QosVolumeNameParam\022\r\n\005m"
  "inbw\030\003 \001(\003\022\017\n\007miniops\030\004 \001(\003\022\r\n\005maxbw\030\005 \001"
  "(\003\022\017\n\007maxiops\030\006 \001(\003\"\312\001\n\035QosCreateVolumeP"
  "olicyResponse\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 "
  "\001(\t\022>\n\006result\030\003 \001(\0132..grpc_cli.QosCreate"
  "VolumePolicyResponse.Result\022\037\n\004info\030\004 \001("
  "\0132\021.grpc_cli.PosInfo\032*\n\006Result\022 \n\006status"
  "\030\001 \001(\0132\020.grpc_cli.Status\"\315\001\n\033QosResetVol"
  "umePolicyRequest\022\017\n\007command\030\001 \001(\t\022\013\n\003rid"
  "\030\002 \001(\t\022\021\n\trequestor\030\003 \001(\t\022:\n\005param\030\004 \001(\013"
  "2+.grpc_cli.QosResetVolumePolicyRequest."
  "Param\032A\n\005Param\022\r\n\005array\030\001 \001(\t\022)\n\003vol\030\002 \003"
  "(\0132\034.grpc_cli.QosVolumeNameParam\"\236\001\n\021Vol"
  "umeInfoRequest\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002"
  " \001(\t\022\021\n\trequestor\030\003 \001(\t\0220\n\005param\030\004 \001(\0132!"
  ".grpc_cli.VolumeInfoRequest.Param\032&\n\005Par"
  "am\022\r\n\005array\030\001 \001(\t\022\016\n\006volume\030\002 \001(\t\"\310\001\n\034Qo"
  "sResetVolumePolicyResponse\022\017\n\007command\030\001 "
  "\001(\t\022\013\n\003rid\030\002 \001(\t\022=\n\006result\030\003 \001(\0132-.grpc_"
  "cli.QosResetVolumePolicyResponse.Result\022"
  "\037\n\004info\030\004 \001(\0132\021.grpc_cli.PosInfo\032*\n\006Resu"
  "lt\022 \n\006status\030\001 \001(\0132\020.grpc_cli.Status\"\324\001\n"
  "\022VolumeInfoResponse\022\017\n\007command\030\001 \001(\t\022\013\n\003"
  "rid\030\002 \001(\t\0223\n\006result\030\003 \001(\0132#.grpc_cli.Vol"
  "umeInfoResponse.Result\022\037\n\004info\030\004 \001(\0132\021.g"
  "rpc_cli.PosInfo\032J\n\006Result\022 \n\006status\030\001 \001("
  "\0132\020.grpc_cli.Status\022\036\n\004data\030\002 \001(\0132\020.grpc"
  "_cli.Volume\"\261\001\n\023VolumeRenameRequest\022\017\n\007c"
  "ommand\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequestor\030\003"
  " \001(\t\0222\n\005param\030\004 \001(\0132#.grpc_cli.VolumeRen"
  "ameRequest.Param\0325\n\005Param\022\r\n\005array\030\001 \001(\t"
  "\022\014\n\004name\030\002 \001(\t\022\017\n\007newname\030\003 \001(\t\"\270\001\n\024Volu"
  "meRenameResponse\022\017\n\007command\030\001 \001(\t\022\013\n\003rid"
  "\030\002 \001(\t\0225\n\006result\030\003 \001(\0132%.grpc_cli.Volume"
  "RenameResponse.Result\022\037\n\004info\030\004 \001(\0132\021.gr"
  "pc_cli.PosInfo\032*\n\006Result\022 \n\006status\030\001 \001(\013"
  "2\020.grpc_cli.Status\"A\n\016ListWBTRequest\022\017\n\007"
  "command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequestor\030"
  "\003 \001(\t\"\033\n\007WBTTest\022\020\n\010testname\030\001 \001(\t\"\223\002\n\017L"
  "istWBTResponse\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002"
  " \001(\t\0220\n\006result\030\003 \001(\0132 .grpc_cli.ListWBTR"
  "esponse.Result\022\037\n\004info\030\004 \001(\0132\021.grpc_cli."
  "PosInfo\032\216\001\n\006Result\022 \n\006status\030\001 \001(\0132\020.grp"
  "c_cli.Status\0224\n\004data\030\002 \001(\0132&.grpc_cli.Li"
  "stWBTResponse.Result.Tests\032,\n\005Tests\022#\n\010t"
  "estlist\030\001 \003(\0132\021.grpc_cli.WBTTest\"\354\001\n\024Lis"
  "tQOSPolicyRequest\022\017\n\007command\030\001 \001(\t\022\013\n\003ri"
  "d\030\002 \001(\t\022\021\n\trequestor\030\003 \001(\t\0223\n\005param\030\004 \001("
  "\0132$.grpc_cli.ListQOSPolicyRequest.Param\032"
  "n\n\005Param\022\r\n\005array\030\001 \001(\t\0228\n\003vol\030\002 \003(\0132+.g"
  "rpc_cli.ListQOSPolicyRequest.Param.Volum"
  "e\032\034\n\006Volume\022\022\n\nvolumeName\030\001 \001(\t\"\222\003\n\tQOSR"
  "esult\022-\n\tarrayName\030\001 \003(\0132\032.grpc_cli.QOSR"
  "esult.Arrays\0228\n\rrebuildPolicy\030\002 \003(\0132!.gr"
  "pc_cli.QOSResult.RebuildPolicy\022:\n\016volume"
  "Policies\030\003 \003(\0132\".grpc_cli.QOSResult.Volu"
  "mePolicies\032\033\n\006Arrays\022\021\n\tArrayName\030\001 \001(\t\032"
  " \n\rRebuildPolicy\022\017\n\007rebuild\030\001 \001(\t\032\240\001\n\016Vo"
  "lumePolicies\022\n\n\002id\030\001 \001(\005\022\r\n\005maxbw\030\002 \001(\t\022"
  "\017\n\007maxiops\030\003 \001(\t\022\017\n\007miniops\030\004 \001(\t\022\r\n\005min"
  "bw\030\005 \001(\t\022\030\n\020min_bw_guarantee\030\006 \001(\t\022\032\n\022mi"
  "n_iops_guarantee\030\007 \001(\t\022\014\n\004name\030\010 \001(\t\"\270\002\n"
  "\025ListQOSPolicyResponse\022\017\n\007command\030\001 \001(\t\022"
  "\013\n\003rid\030\002 \001(\t\0226\n\006result\030\003 \001(\0132&.grpc_cli."
  "ListQOSPolicyResponse.Result\022\037\n\004info\030\004 \001"
  "(\0132\021.grpc_cli.PosInfo\032\247\001\n\006Result\022 \n\006stat"
  "us\030\001 \001(\0132\020.grpc_cli.Status\022B\n\004data\030\002 \001(\013"
  "24.grpc_cli.ListQOSPolicyResponse.Result"
  ".ListQOSResult\0327\n\rListQOSResult\022&\n\tqosre"
  "sult\030\001 \003(\0132\023.grpc_cli.QOSResult\"\344\001\n\nWBTR"
  "equest\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\t"
  "requestor\030\003 \001(\t\022)\n\005param\030\004 \001(\0132\032.grpc_cl"
  "i.WBTRequest.Param\032z\n\005Param\022\020\n\010testname\030"
  "\001 \001(\t\0222\n\004argv\030\002 \003(\0132$.grpc_cli.WBTReques"
  "t.Param.ArgvEntry\032+\n\tArgvEntry\022\013\n\003key\030\001 "
  "\001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\371\001\n\013WBTResponse\022\017"
  "\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022,\n\006result\030\003"
  " \001(\0132\034.grpc_cli.WBTResponse.Result\022\037\n\004in"
  "fo\030\004 \001(\0132\021.grpc_cli.PosInfo\032}\n\006Result\022 \n"
  "\006status\030\001 \001(\0132\020.grpc_cli.Status\0223\n\004data\030"
  "\002 \001(\0132%.grpc_cli.WBTResponse.Result.Test"
  "Data\032\034\n\010TestData\022\020\n\010testdata\030\001 \001(\t2\324-\n\006P"
  "osCli\022_\n\nSystemInfo\022\033.grpc_cli.SystemInf"
  "oRequest\032\034.grpc_cli.SystemInfoResponse\"\026"
  "\202\323\344\223\002\020\022\016/v1/systeminfo\022_\n\nStopSystem\022\033.g"
  "rpc_cli.StopSystemRequest\032\034.grpc_cli.Sto"
  "pSystemResponse\"\026\202\323\344\223\002\020\022\016/v1/stopsystem\022"
  "}\n\021GetSystemProperty\022\".grpc_cli.GetSyste"
  "mPropertyRequest\032#.grpc_cli.GetSystemPro"
  "pertyResponse\"\037\202\323\344\223\002\031\022\027/v1/get_system_pr"
  "operty\022\205\001\n\021SetSystemProperty\022\".grpc_cli."
  "SetSystemPropertyRequest\032#.grpc_cli.SetS"
  "ystemPropertyResponse\"\'\202\323\344\223\002!\022\037/v1/set_s"
  "ystem_property/{level}\022p\n\016StartTelemetry"
  "\022\037.grpc_cli.StartTelemetryRequest\032 .grpc"
  "_cli.StartTelemetryResponse\"\033\202\323\344\223\002\025\022\023/v1"
  "/start_telemetry\022l\n\rStopTelemetry\022\036.grpc"
  "_cli.StopTelemetryRequest\032\037.grpc_cli.Sto"
  "pTelemetryResponse\"\032\202\323\344\223\002\024\022\022/v1/stop_tel"
  "emetry\022\211\001\n\024SetTelemetryProperty\022%.grpc_c"
  "li.SetTelemetryPropertyRequest\032&.grpc_cl"
  "i.SetTelemetryPropertyResponse\"\"\202\323\344\223\002\034\022\032"
  "/v1/set_telemetry_property\022\211\001\n\024GetTeleme"
  "tryProperty\022%.grpc_cli.GetTelemetryPrope"
  "rtyRequest\032&.grpc_cli.GetTelemetryProper"
  "tyResponse\"\"\202\323\344\223\002\034\022\032/v1/get_telemetry_pr"
  "operty\022P\n\rResetEventWrr\022\036.grpc_cli.Reset"
  "EventWrrRequest\032\037.grpc_cli.ResetEventWrr"
  "Response\022A\n\010ResetMbr\022\031.grpc_cli.ResetMbr"
  "Request\032\032.grpc_cli.ResetMbrResponse\022S\n\016S"
  "topRebuilding\022\037.grpc_cli.StopRebuildingR"
  "equest\032 .grpc_cli.StopRebuildingResponse"
  "\022S\n\016UpdateEventWrr\022\037.grpc_cli.UpdateEven"
  "tWrrRequest\032 .grpc_cli.UpdateEventWrrRes"
  "ponse\022\201\001\n\022DumpMemorySnapshot\022#.grpc_cli."
  "DumpMemorySnapshotRequest\032$.grpc_cli.Dum"
  "pMemorySnapshotResponse\" \202\323\344\223\002\032\022\030/v1/dum"
  "p_memory_snapshot\022W\n\010AddSpare\022\031.grpc_cli"
  ".AddSpareRequest\032\032.grpc_cli.AddSpareResp"
  "onse\"\024\202\323\344\223\002\016\"\014/v1/addspare\022c\n\013RemoveSpar"
  "e\022\034.grpc_cli.RemoveSpareRequest\032\035.grpc_c"
  "li.RemoveSpareResponse\"\027\202\323\344\223\002\021\"\017/v1/remo"
  "vespare\022x\n\022ReplaceArrayDevice\022#.grpc_cli"
  ".ReplaceArrayDeviceRequest\032$.grpc_cli.Re"
  "placeArrayDeviceResponse\"\027\202\323\344\223\002\021\"\017/v1/re"
  "movespare\022c\n\013CreateArray\022\034.grpc_cli.Crea"
  "teArrayRequest\032\035.grpc_cli.CreateArrayRes"
  "ponse\"\027\202\323\344\223\002\021\"\017/v1/createarray\022s\n\017Autocr"
  "eateArray\022 .grpc_cli.AutocreateArrayRequ"
  "est\032!.grpc_cli.AutocreateArrayResponse\"\033"
  "\202\323\344\223\002\025\"\023/v1/autocreatearray\022d\n\013DeleteArr"
  "ay\022\034.grpc_cli.DeleteArrayRequest\032\035.grpc_"
  "cli.DeleteArrayResponse\"\030\202\323\344\223\002\022\"\020/v1/del"
  "etearray/\022_\n\nMountArray\022\033.grpc_cli.Mount"
  "ArrayRequest\032\034.grpc_cli.MountArrayRespon"
  "se\"\026\202\323\344\223\002\020\"\016/v1/mountarray\022g\n\014UnmountArr"
  "ay\022\035.grpc_cli.UnmountArrayRequest\032\036.grpc"
  "_cli.UnmountArrayResponse\"\030\202\323\344\223\002\022\"\020/v1/u"
  "nmountarray\022[\n\tListArray\022\032.grpc_cli.List"
  "ArrayRequest\032\033.grpc_cli.ListArrayRespons"
  "e\"\025\202\323\344\223\002\017\"\r/v1/listarray\022[\n\tArrayInfo\022\032."
  "grpc_cli.ArrayInfoRequest\032\033.grpc_cli.Arr"
  "ayInfoResponse\"\025\202\323\344\223\002\017\"\r/v1/arrayinfo\022g\n"
  "\014RebuildArray\022\035.grpc_cli.RebuildArrayReq"
  "uest\032\036.grpc_cli.RebuildArrayResponse\"\030\202\323"
  "\344\223\002\022\"\020/v1/rebuildarray\022w\n\020SetLogPreferen"
  "ce\022!.grpc_cli.SetLogPreferenceRequest\032\"."
  "grpc_cli.SetLogPreferenceResponse\"\034\202\323\344\223\002"
  "\026\"\024/v1/setlogpreference\022c\n\013SetLogLevel\022\034"
  ".grpc_cli.SetLogLevelRequest\032\035.grpc_cli."
  "SetLogLevelResponse\"\027\202\323\344\223\002\021\"\017/v1/setlogl"
  "evel\022_\n\nLoggerInfo\022\033.grpc_cli.LoggerInfo"
  "Request\032\034.grpc_cli.LoggerInfoResponse\"\026\202"
  "\323\344\223\002\020\"\016/v1/loggerinfo\022c\n\013GetLogLevel\022\034.g"
  "rpc_cli.GetLogLevelRequest\032\035.grpc_cli.Ge"
  "tLogLevelResponse\"\027\202\323\344\223\002\021\"\017/v1/getloglev"
  "el\022l\n\016ApplyLogFilter\022\037.grpc_cli.ApplyLog"
  "FilterRequest\032 .grpc_cli.ApplyLogFilterR"
  "esponse\"\027\202\323\344\223\002\021\"\017/v1/applyfilter\022g\n\014Crea"
  "teDevice\022\035.grpc_cli.CreateDeviceRequest\032"
  "\036.grpc_cli.CreateDeviceResponse\"\030\202\323\344\223\002\022\""
  "\020/v1/createdevice\022_\n\nScanDevice\022\033.grpc_c"
  "li.ScanDeviceRequest\032\034.grpc_cli.ScanDevi"
  "ceResponse\"\026\202\323\344\223\002\020\"\016/v1/scandevice\022_\n\nLi"
  "stDevice\022\033.grpc_cli.ListDeviceRequest\032\034."
  "grpc_cli.ListDeviceResponse\"\026\202\323\344\223\002\020\"\016/v1"
  "/listdevice\022`\n\013GetSmartLog\022\034.grpc_cli.Ge"
  "tSmartLogRequest\032\035.grpc_cli.GetSmartLogR"
  "esponse\"\024\202\323\344\223\002\016\"\014/v1/smartlog\022s\n\017CreateS"
  "ubsystem\022 .grpc_cli.CreateSubsystemReque"
  "st\032!.grpc_cli.CreateSubsystemResponse\"\033\202"
  "\323\344\223\002\025\"\023/v1/createsubsystem\022s\n\017DeleteSubs"
  "ystem\022 .grpc_cli.DeleteSubsystemRequest\032"
  "!.grpc_cli.DeleteSubsystemResponse\"\033\202\323\344\223"
  "\002\025\"\023/v1/deletesubsystem\022c\n\013AddListener\022\034"
  ".grpc_cli.AddListenerRequest\032\035.grpc_cli."
  "AddListenerResponse\"\027\202\323\344\223\002\021\"\017/v1/addlist"
  "ener\022o\n\016RemoveListener\022\037.grpc_cli.Remove"
  "ListenerRequest\032 .grpc_cli.RemoveListene"
  "rResponse\"\032\202\323\344\223\002\024\"\022/v1/removelistener\022g\n"
  "\014ListListener\022\035.grpc_cli.ListListenerReq"
  "uest\032\036.grpc_cli.ListListenerResponse\"\030\202\323"
  "\344\223\002\022\"\020/v1/listlistener\022k\n\rListSubsystem\022"
  "\036.grpc_cli.ListSubsystemRequest\032\037.grpc_c"
  "li.ListSubsystemResponse\"\031\202\323\344\223\002\023\"\021/v1/li"
  "stsubsystem\022k\n\rSubsystemInfo\022\036.grpc_cli."
  "SubsystemInfoRequest\032\037.grpc_cli.Subsyste"
  "mInfoResponse\"\031\202\323\344\223\002\023\"\021/v1/subsysteminfo"
  "\022s\n\017CreateTransport\022 .grpc_cli.CreateTra"
  "nsportRequest\032!.grpc_cli.CreateTransport"
  "Response\"\033\202\323\344\223\002\025\"\023/v1/createtransport\022k\n"
  "\rListTransport\022\036.grpc_cli.ListTransportR"
  "equest\032\037.grpc_cli.ListTransportResponse\""
  "\031\202\323\344\223\002\023\"\021/v1/listtransport\022g\n\014CreateVolu"
  "me\022\035.grpc_cli.CreateVolumeRequest\032\036.grpc"
  "_cli.CreateVolumeResponse\"\030\202\323\344\223\002\022\"\020/v1/c"
  "reatevolume\022\205\001\n\025QosCreateVolumePolicy\022&."
  "grpc_cli.QosCreateVolumePolicyRequest\032\'."
  "grpc_cli.QosCreateVolumePolicyResponse\"\033"
  "\202\323\344\223\002\025\"\023/v1/createqospolicy\022\201\001\n\024QosReset"
  "VolumePolicy\022%.grpc_cli.QosResetVolumePo"
  "licyRequest\032&.grpc_cli.QosResetVolumePol"
  "icyResponse\"\032\202\323\344\223\002\024\"\022/v1/resetqospolicy\022"
  "g\n\014DeleteVolume\022\035.grpc_cli.DeleteVolumeR"
  "equest\032\036.grpc_cli.DeleteVolumeResponse\"\030"
  "\202\323\344\223\002\022\"\020/v1/deletevolume\022k\n\rUnmountVolum"
  "e\022\036.grpc_cli.UnmountVolumeRequest\032\037.grpc"
  "_cli.UnmountVolumeResponse\"\031\202\323\344\223\002\023\"\021/v1/"
  "unmountvolume\022c\n\013MountVolume\022\034.grpc_cli."
  "MountVolumeRequest\032\035.grpc_cli.MountVolum"
  "eResponse\"\027\202\323\344\223\002\021\"\017/v1/Mountvolume\022_\n\nLi"
  "stVolume\022\033.grpc_cli.ListVolumeRequest\032\034."
  "grpc_cli.ListVolumeResponse\"\026\202\323\344\223\002\020\"\016/v1"
  "/listvolume\022{\n\021SetVolumeProperty\022\".grpc_"
  "cli.SetVolumePropertyRequest\032#.grpc_cli."
  "SetVolumePropertyResponse\"\035\202\323\344\223\002\027\"\025/v1/s"
  "etvolumeproperty\022_\n\nVolumeInfo\022\033.grpc_cl"
  "i.VolumeInfoRequest\032\034.grpc_cli.VolumeInf"
  "oResponse\"\026\202\323\344\223\002\020\"\016/v1/volumeinfo\022g\n\014Vol"
  "umeRename\022\035.grpc_cli.VolumeRenameRequest"
  "\032\036.grpc_cli.VolumeRenameResponse\"\030\202\323\344\223\002\022"
  "\"\020/v1/volumerename\022k\n\rListQOSPolicy\022\036.gr"
  "pc_cli.ListQOSPolicyRequest\032\037.grpc_cli.L"
  "istQOSPolicyResponse\"\031\202\323\344\223\002\023\"\021/v1/listqo"
  "spolicy\022S\n\007ListWBT\022\030.grpc_cli.ListWBTReq"
  "uest\032\031.grpc_cli.ListWBTResponse\"\023\202\323\344\223\002\r\""
  "\013/v1/listwbt\022C\n\003WBT\022\024.grpc_cli.WBTReques"
  "t\032\025.grpc_cli.WBTResponse\"\017\202\323\344\223\002\t\"\007/v1/wb"
  "tB\tZ\007cli/apib\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_cli_2eproto_deps[1] = {
  &::descriptor_table_annotations_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_cli_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_cli_2eproto = {
  false, false, 32300, descriptor_table_protodef_cli_2eproto, "cli.proto", 
  &descriptor_table_cli_2eproto_once, descriptor_table_cli_2eproto_deps, 1, 260,
  schemas, file_default_instances, TableStruct_cli_2eproto::offsets,
  file_level_metadata_cli_2eproto, file_level_enum_descriptors_cli_2eproto, file_level_service_descriptors_cli_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_cli_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_cli_2eproto);
  return descriptor_table_cli_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_cli_2eproto(&descriptor_table_cli_2eproto);
namespace grpc_cli {

// ===================================================================

class Status::_Internal {
 public:
  using HasBits = decltype(std::declval<Status>()._has_bits_);
  static void set_has_code(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_event_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_description(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_cause(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_solution(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_message(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

Status::Status(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.Status)
}
Status::Status(const Status& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  event_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_event_name()) {
    event_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_event_name(), 
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_description()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArena());
  }
  cause_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_cause()) {
    cause_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_cause(), 
      GetArena());
  }
  solution_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_solution()) {
    solution_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_solution(), 
      GetArena());
  }
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_message()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:grpc_cli.Status)
}

void Status::SharedCtor() {
event_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
cause_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
solution_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
code_ = 0;
}

Status::~Status() {
  // @@protoc_insertion_point(destructor:grpc_cli.Status)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Status::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  event_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cause_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  solution_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Status::ArenaDtor(void* object) {
  Status* _this = reinterpret_cast< Status* >(object);
  (void)_this;
}
void Status::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Status::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Status::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.Status)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      event_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      description_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      cause_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      solution_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      message_.ClearNonDefaultToEmpty();
    }
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Status::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_code(&has_bits);
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string event_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_event_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Status.event_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Status.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string cause = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_cause();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Status.cause"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string solution = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_solution();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Status.solution"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Status.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Status::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.Status)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (_internal_has_code()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string event_name = 2;
  if (_internal_has_event_name()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_event_name().data(), static_cast<int>(this->_internal_event_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Status.event_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_event_name(), target);
  }

  // string description = 3;
  if (_internal_has_description()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Status.description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  // string cause = 4;
  if (_internal_has_cause()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cause().data(), static_cast<int>(this->_internal_cause().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Status.cause");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_cause(), target);
  }

  // string solution = 5;
  if (_internal_has_solution()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_solution().data(), static_cast<int>(this->_internal_solution().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Status.solution");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_solution(), target);
  }

  // string message = 6;
  if (_internal_has_message()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Status.message");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.Status)
  return target;
}

size_t Status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.Status)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // string event_name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_event_name());
    }

    // string description = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_description());
    }

    // string cause = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_cause());
    }

    // string solution = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_solution());
    }

    // string message = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_message());
    }

    // int32 code = 1;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_code());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Status::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.Status)
  GOOGLE_DCHECK_NE(&from, this);
  const Status* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Status>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.Status)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.Status)
    MergeFrom(*source);
  }
}

void Status::MergeFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.Status)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_event_name(from._internal_event_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_description(from._internal_description());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_cause(from._internal_cause());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_solution(from._internal_solution());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_set_message(from._internal_message());
    }
    if (cached_has_bits & 0x00000020u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Status::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Status::CopyFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Status::IsInitialized() const {
  return true;
}

void Status::InternalSwap(Status* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  event_name_.Swap(&other->event_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  cause_.Swap(&other->cause_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  solution_.Swap(&other->solution_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Status::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PosInfo::_Internal {
 public:
};

PosInfo::PosInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.PosInfo)
}
PosInfo::PosInfo(const PosInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_version().empty()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.PosInfo)
}

void PosInfo::SharedCtor() {
version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PosInfo::~PosInfo() {
  // @@protoc_insertion_point(destructor:grpc_cli.PosInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PosInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PosInfo::ArenaDtor(void* object) {
  PosInfo* _this = reinterpret_cast< PosInfo* >(object);
  (void)_this;
}
void PosInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PosInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PosInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.PosInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PosInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.PosInfo.version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PosInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.PosInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.PosInfo.version");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.PosInfo)
  return target;
}

size_t PosInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.PosInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PosInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.PosInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PosInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PosInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.PosInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.PosInfo)
    MergeFrom(*source);
  }
}

void PosInfo::MergeFrom(const PosInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.PosInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version().size() > 0) {
    _internal_set_version(from._internal_version());
  }
}

void PosInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.PosInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PosInfo::CopyFrom(const PosInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.PosInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PosInfo::IsInitialized() const {
  return true;
}

void PosInfo::InternalSwap(PosInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PosInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StartSystemRequest::_Internal {
 public:
};

StartSystemRequest::StartSystemRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.StartSystemRequest)
}
StartSystemRequest::StartSystemRequest(const StartSystemRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.StartSystemRequest)
}

void StartSystemRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StartSystemRequest::~StartSystemRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.StartSystemRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StartSystemRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StartSystemRequest::ArenaDtor(void* object) {
  StartSystemRequest* _this = reinterpret_cast< StartSystemRequest* >(object);
  (void)_this;
}
void StartSystemRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartSystemRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StartSystemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.StartSystemRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartSystemRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StartSystemRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StartSystemRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StartSystemRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartSystemRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.StartSystemRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StartSystemRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StartSystemRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StartSystemRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.StartSystemRequest)
  return target;
}

size_t StartSystemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.StartSystemRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartSystemRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.StartSystemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StartSystemRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StartSystemRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.StartSystemRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.StartSystemRequest)
    MergeFrom(*source);
  }
}

void StartSystemRequest::MergeFrom(const StartSystemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.StartSystemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
}

void StartSystemRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.StartSystemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartSystemRequest::CopyFrom(const StartSystemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.StartSystemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartSystemRequest::IsInitialized() const {
  return true;
}

void StartSystemRequest::InternalSwap(StartSystemRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata StartSystemRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SystemInfoRequest::_Internal {
 public:
};

SystemInfoRequest::SystemInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SystemInfoRequest)
}
SystemInfoRequest::SystemInfoRequest(const SystemInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SystemInfoRequest)
}

void SystemInfoRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SystemInfoRequest::~SystemInfoRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.SystemInfoRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SystemInfoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SystemInfoRequest::ArenaDtor(void* object) {
  SystemInfoRequest* _this = reinterpret_cast< SystemInfoRequest* >(object);
  (void)_this;
}
void SystemInfoRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SystemInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SystemInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SystemInfoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SystemInfoRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SystemInfoRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SystemInfoRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SystemInfoRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SystemInfoRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SystemInfoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SystemInfoRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SystemInfoRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SystemInfoRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SystemInfoRequest)
  return target;
}

size_t SystemInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SystemInfoRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SystemInfoRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SystemInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemInfoRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SystemInfoRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SystemInfoRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SystemInfoRequest)
    MergeFrom(*source);
  }
}

void SystemInfoRequest::MergeFrom(const SystemInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SystemInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
}

void SystemInfoRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SystemInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemInfoRequest::CopyFrom(const SystemInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SystemInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemInfoRequest::IsInitialized() const {
  return true;
}

void SystemInfoRequest::InternalSwap(SystemInfoRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SystemInfoRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SystemInfoResponse_Result_Data::_Internal {
 public:
};

SystemInfoResponse_Result_Data::SystemInfoResponse_Result_Data(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SystemInfoResponse.Result.Data)
}
SystemInfoResponse_Result_Data::SystemInfoResponse_Result_Data(const SystemInfoResponse_Result_Data& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_version().empty()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  biosversion_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_biosversion().empty()) {
    biosversion_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_biosversion(), 
      GetArena());
  }
  biosvendor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_biosvendor().empty()) {
    biosvendor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_biosvendor(), 
      GetArena());
  }
  biosreleasedate_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_biosreleasedate().empty()) {
    biosreleasedate_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_biosreleasedate(), 
      GetArena());
  }
  systemmanufacturer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_systemmanufacturer().empty()) {
    systemmanufacturer_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_systemmanufacturer(), 
      GetArena());
  }
  systemproductname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_systemproductname().empty()) {
    systemproductname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_systemproductname(), 
      GetArena());
  }
  systemserialnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_systemserialnumber().empty()) {
    systemserialnumber_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_systemserialnumber(), 
      GetArena());
  }
  systemuuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_systemuuid().empty()) {
    systemuuid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_systemuuid(), 
      GetArena());
  }
  baseboardmanufacturer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_baseboardmanufacturer().empty()) {
    baseboardmanufacturer_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_baseboardmanufacturer(), 
      GetArena());
  }
  baseboardproductname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_baseboardproductname().empty()) {
    baseboardproductname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_baseboardproductname(), 
      GetArena());
  }
  baseboardserialnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_baseboardserialnumber().empty()) {
    baseboardserialnumber_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_baseboardserialnumber(), 
      GetArena());
  }
  baseboardversion_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_baseboardversion().empty()) {
    baseboardversion_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_baseboardversion(), 
      GetArena());
  }
  processormanufacturer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_processormanufacturer().empty()) {
    processormanufacturer_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_processormanufacturer(), 
      GetArena());
  }
  processorversion_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_processorversion().empty()) {
    processorversion_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_processorversion(), 
      GetArena());
  }
  processorfrequency_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_processorfrequency().empty()) {
    processorfrequency_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_processorfrequency(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SystemInfoResponse.Result.Data)
}

void SystemInfoResponse_Result_Data::SharedCtor() {
version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
biosversion_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
biosvendor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
biosreleasedate_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
systemmanufacturer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
systemproductname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
systemserialnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
systemuuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
baseboardmanufacturer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
baseboardproductname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
baseboardserialnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
baseboardversion_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
processormanufacturer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
processorversion_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
processorfrequency_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SystemInfoResponse_Result_Data::~SystemInfoResponse_Result_Data() {
  // @@protoc_insertion_point(destructor:grpc_cli.SystemInfoResponse.Result.Data)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SystemInfoResponse_Result_Data::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  biosversion_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  biosvendor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  biosreleasedate_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  systemmanufacturer_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  systemproductname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  systemserialnumber_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  systemuuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  baseboardmanufacturer_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  baseboardproductname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  baseboardserialnumber_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  baseboardversion_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  processormanufacturer_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  processorversion_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  processorfrequency_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SystemInfoResponse_Result_Data::ArenaDtor(void* object) {
  SystemInfoResponse_Result_Data* _this = reinterpret_cast< SystemInfoResponse_Result_Data* >(object);
  (void)_this;
}
void SystemInfoResponse_Result_Data::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SystemInfoResponse_Result_Data::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SystemInfoResponse_Result_Data::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SystemInfoResponse.Result.Data)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_.ClearToEmpty();
  biosversion_.ClearToEmpty();
  biosvendor_.ClearToEmpty();
  biosreleasedate_.ClearToEmpty();
  systemmanufacturer_.ClearToEmpty();
  systemproductname_.ClearToEmpty();
  systemserialnumber_.ClearToEmpty();
  systemuuid_.ClearToEmpty();
  baseboardmanufacturer_.ClearToEmpty();
  baseboardproductname_.ClearToEmpty();
  baseboardserialnumber_.ClearToEmpty();
  baseboardversion_.ClearToEmpty();
  processormanufacturer_.ClearToEmpty();
  processorversion_.ClearToEmpty();
  processorfrequency_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SystemInfoResponse_Result_Data::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SystemInfoResponse.Result.Data.version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string biosVersion = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_biosversion();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SystemInfoResponse.Result.Data.biosVersion"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string biosVendor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_biosvendor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SystemInfoResponse.Result.Data.biosVendor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string biosReleaseDate = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_biosreleasedate();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SystemInfoResponse.Result.Data.biosReleaseDate"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string systemManufacturer = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_systemmanufacturer();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SystemInfoResponse.Result.Data.systemManufacturer"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string systemProductName = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_systemproductname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SystemInfoResponse.Result.Data.systemProductName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string systemSerialNumber = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_systemserialnumber();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SystemInfoResponse.Result.Data.systemSerialNumber"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string systemUuid = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_systemuuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SystemInfoResponse.Result.Data.systemUuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string baseboardManufacturer = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_baseboardmanufacturer();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SystemInfoResponse.Result.Data.baseboardManufacturer"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string baseboardProductName = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_baseboardproductname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SystemInfoResponse.Result.Data.baseboardProductName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string baseboardSerialNumber = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_baseboardserialnumber();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SystemInfoResponse.Result.Data.baseboardSerialNumber"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string baseboardVersion = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_baseboardversion();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SystemInfoResponse.Result.Data.baseboardVersion"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string processorManufacturer = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          auto str = _internal_mutable_processormanufacturer();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SystemInfoResponse.Result.Data.processorManufacturer"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string processorVersion = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_processorversion();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SystemInfoResponse.Result.Data.processorVersion"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string processorFrequency = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          auto str = _internal_mutable_processorfrequency();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SystemInfoResponse.Result.Data.processorFrequency"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SystemInfoResponse_Result_Data::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SystemInfoResponse.Result.Data)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SystemInfoResponse.Result.Data.version");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_version(), target);
  }

  // string biosVersion = 2;
  if (this->biosversion().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_biosversion().data(), static_cast<int>(this->_internal_biosversion().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SystemInfoResponse.Result.Data.biosVersion");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_biosversion(), target);
  }

  // string biosVendor = 3;
  if (this->biosvendor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_biosvendor().data(), static_cast<int>(this->_internal_biosvendor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SystemInfoResponse.Result.Data.biosVendor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_biosvendor(), target);
  }

  // string biosReleaseDate = 4;
  if (this->biosreleasedate().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_biosreleasedate().data(), static_cast<int>(this->_internal_biosreleasedate().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SystemInfoResponse.Result.Data.biosReleaseDate");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_biosreleasedate(), target);
  }

  // string systemManufacturer = 5;
  if (this->systemmanufacturer().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_systemmanufacturer().data(), static_cast<int>(this->_internal_systemmanufacturer().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SystemInfoResponse.Result.Data.systemManufacturer");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_systemmanufacturer(), target);
  }

  // string systemProductName = 6;
  if (this->systemproductname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_systemproductname().data(), static_cast<int>(this->_internal_systemproductname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SystemInfoResponse.Result.Data.systemProductName");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_systemproductname(), target);
  }

  // string systemSerialNumber = 7;
  if (this->systemserialnumber().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_systemserialnumber().data(), static_cast<int>(this->_internal_systemserialnumber().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SystemInfoResponse.Result.Data.systemSerialNumber");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_systemserialnumber(), target);
  }

  // string systemUuid = 8;
  if (this->systemuuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_systemuuid().data(), static_cast<int>(this->_internal_systemuuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SystemInfoResponse.Result.Data.systemUuid");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_systemuuid(), target);
  }

  // string baseboardManufacturer = 9;
  if (this->baseboardmanufacturer().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_baseboardmanufacturer().data(), static_cast<int>(this->_internal_baseboardmanufacturer().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SystemInfoResponse.Result.Data.baseboardManufacturer");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_baseboardmanufacturer(), target);
  }

  // string baseboardProductName = 10;
  if (this->baseboardproductname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_baseboardproductname().data(), static_cast<int>(this->_internal_baseboardproductname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SystemInfoResponse.Result.Data.baseboardProductName");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_baseboardproductname(), target);
  }

  // string baseboardSerialNumber = 11;
  if (this->baseboardserialnumber().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_baseboardserialnumber().data(), static_cast<int>(this->_internal_baseboardserialnumber().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SystemInfoResponse.Result.Data.baseboardSerialNumber");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_baseboardserialnumber(), target);
  }

  // string baseboardVersion = 12;
  if (this->baseboardversion().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_baseboardversion().data(), static_cast<int>(this->_internal_baseboardversion().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SystemInfoResponse.Result.Data.baseboardVersion");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_baseboardversion(), target);
  }

  // string processorManufacturer = 13;
  if (this->processormanufacturer().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_processormanufacturer().data(), static_cast<int>(this->_internal_processormanufacturer().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SystemInfoResponse.Result.Data.processorManufacturer");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_processormanufacturer(), target);
  }

  // string processorVersion = 14;
  if (this->processorversion().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_processorversion().data(), static_cast<int>(this->_internal_processorversion().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SystemInfoResponse.Result.Data.processorVersion");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_processorversion(), target);
  }

  // string processorFrequency = 15;
  if (this->processorfrequency().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_processorfrequency().data(), static_cast<int>(this->_internal_processorfrequency().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SystemInfoResponse.Result.Data.processorFrequency");
    target = stream->WriteStringMaybeAliased(
        15, this->_internal_processorfrequency(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SystemInfoResponse.Result.Data)
  return target;
}

size_t SystemInfoResponse_Result_Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SystemInfoResponse.Result.Data)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  // string biosVersion = 2;
  if (this->biosversion().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_biosversion());
  }

  // string biosVendor = 3;
  if (this->biosvendor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_biosvendor());
  }

  // string biosReleaseDate = 4;
  if (this->biosreleasedate().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_biosreleasedate());
  }

  // string systemManufacturer = 5;
  if (this->systemmanufacturer().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_systemmanufacturer());
  }

  // string systemProductName = 6;
  if (this->systemproductname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_systemproductname());
  }

  // string systemSerialNumber = 7;
  if (this->systemserialnumber().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_systemserialnumber());
  }

  // string systemUuid = 8;
  if (this->systemuuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_systemuuid());
  }

  // string baseboardManufacturer = 9;
  if (this->baseboardmanufacturer().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_baseboardmanufacturer());
  }

  // string baseboardProductName = 10;
  if (this->baseboardproductname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_baseboardproductname());
  }

  // string baseboardSerialNumber = 11;
  if (this->baseboardserialnumber().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_baseboardserialnumber());
  }

  // string baseboardVersion = 12;
  if (this->baseboardversion().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_baseboardversion());
  }

  // string processorManufacturer = 13;
  if (this->processormanufacturer().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_processormanufacturer());
  }

  // string processorVersion = 14;
  if (this->processorversion().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_processorversion());
  }

  // string processorFrequency = 15;
  if (this->processorfrequency().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_processorfrequency());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SystemInfoResponse_Result_Data::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SystemInfoResponse.Result.Data)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemInfoResponse_Result_Data* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SystemInfoResponse_Result_Data>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SystemInfoResponse.Result.Data)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SystemInfoResponse.Result.Data)
    MergeFrom(*source);
  }
}

void SystemInfoResponse_Result_Data::MergeFrom(const SystemInfoResponse_Result_Data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SystemInfoResponse.Result.Data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version().size() > 0) {
    _internal_set_version(from._internal_version());
  }
  if (from.biosversion().size() > 0) {
    _internal_set_biosversion(from._internal_biosversion());
  }
  if (from.biosvendor().size() > 0) {
    _internal_set_biosvendor(from._internal_biosvendor());
  }
  if (from.biosreleasedate().size() > 0) {
    _internal_set_biosreleasedate(from._internal_biosreleasedate());
  }
  if (from.systemmanufacturer().size() > 0) {
    _internal_set_systemmanufacturer(from._internal_systemmanufacturer());
  }
  if (from.systemproductname().size() > 0) {
    _internal_set_systemproductname(from._internal_systemproductname());
  }
  if (from.systemserialnumber().size() > 0) {
    _internal_set_systemserialnumber(from._internal_systemserialnumber());
  }
  if (from.systemuuid().size() > 0) {
    _internal_set_systemuuid(from._internal_systemuuid());
  }
  if (from.baseboardmanufacturer().size() > 0) {
    _internal_set_baseboardmanufacturer(from._internal_baseboardmanufacturer());
  }
  if (from.baseboardproductname().size() > 0) {
    _internal_set_baseboardproductname(from._internal_baseboardproductname());
  }
  if (from.baseboardserialnumber().size() > 0) {
    _internal_set_baseboardserialnumber(from._internal_baseboardserialnumber());
  }
  if (from.baseboardversion().size() > 0) {
    _internal_set_baseboardversion(from._internal_baseboardversion());
  }
  if (from.processormanufacturer().size() > 0) {
    _internal_set_processormanufacturer(from._internal_processormanufacturer());
  }
  if (from.processorversion().size() > 0) {
    _internal_set_processorversion(from._internal_processorversion());
  }
  if (from.processorfrequency().size() > 0) {
    _internal_set_processorfrequency(from._internal_processorfrequency());
  }
}

void SystemInfoResponse_Result_Data::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SystemInfoResponse.Result.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemInfoResponse_Result_Data::CopyFrom(const SystemInfoResponse_Result_Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SystemInfoResponse.Result.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemInfoResponse_Result_Data::IsInitialized() const {
  return true;
}

void SystemInfoResponse_Result_Data::InternalSwap(SystemInfoResponse_Result_Data* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  biosversion_.Swap(&other->biosversion_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  biosvendor_.Swap(&other->biosvendor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  biosreleasedate_.Swap(&other->biosreleasedate_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  systemmanufacturer_.Swap(&other->systemmanufacturer_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  systemproductname_.Swap(&other->systemproductname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  systemserialnumber_.Swap(&other->systemserialnumber_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  systemuuid_.Swap(&other->systemuuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  baseboardmanufacturer_.Swap(&other->baseboardmanufacturer_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  baseboardproductname_.Swap(&other->baseboardproductname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  baseboardserialnumber_.Swap(&other->baseboardserialnumber_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  baseboardversion_.Swap(&other->baseboardversion_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  processormanufacturer_.Swap(&other->processormanufacturer_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  processorversion_.Swap(&other->processorversion_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  processorfrequency_.Swap(&other->processorfrequency_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SystemInfoResponse_Result_Data::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SystemInfoResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const SystemInfoResponse_Result* msg);
  static const ::grpc_cli::SystemInfoResponse_Result_Data& data(const SystemInfoResponse_Result* msg);
};

const ::grpc_cli::Status&
SystemInfoResponse_Result::_Internal::status(const SystemInfoResponse_Result* msg) {
  return *msg->status_;
}
const ::grpc_cli::SystemInfoResponse_Result_Data&
SystemInfoResponse_Result::_Internal::data(const SystemInfoResponse_Result* msg) {
  return *msg->data_;
}
SystemInfoResponse_Result::SystemInfoResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SystemInfoResponse.Result)
}
SystemInfoResponse_Result::SystemInfoResponse_Result(const SystemInfoResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_data()) {
    data_ = new ::grpc_cli::SystemInfoResponse_Result_Data(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SystemInfoResponse.Result)
}

void SystemInfoResponse_Result::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&data_) -
    reinterpret_cast<char*>(&status_)) + sizeof(data_));
}

SystemInfoResponse_Result::~SystemInfoResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.SystemInfoResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SystemInfoResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete data_;
}

void SystemInfoResponse_Result::ArenaDtor(void* object) {
  SystemInfoResponse_Result* _this = reinterpret_cast< SystemInfoResponse_Result* >(object);
  (void)_this;
}
void SystemInfoResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SystemInfoResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SystemInfoResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SystemInfoResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SystemInfoResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.SystemInfoResponse.Result.Data data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SystemInfoResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SystemInfoResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .grpc_cli.SystemInfoResponse.Result.Data data = 2;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SystemInfoResponse.Result)
  return target;
}

size_t SystemInfoResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SystemInfoResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .grpc_cli.SystemInfoResponse.Result.Data data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SystemInfoResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SystemInfoResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemInfoResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SystemInfoResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SystemInfoResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SystemInfoResponse.Result)
    MergeFrom(*source);
  }
}

void SystemInfoResponse_Result::MergeFrom(const SystemInfoResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SystemInfoResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
  if (from.has_data()) {
    _internal_mutable_data()->::grpc_cli::SystemInfoResponse_Result_Data::MergeFrom(from._internal_data());
  }
}

void SystemInfoResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SystemInfoResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemInfoResponse_Result::CopyFrom(const SystemInfoResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SystemInfoResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemInfoResponse_Result::IsInitialized() const {
  return true;
}

void SystemInfoResponse_Result::InternalSwap(SystemInfoResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SystemInfoResponse_Result, data_)
      + sizeof(SystemInfoResponse_Result::data_)
      - PROTOBUF_FIELD_OFFSET(SystemInfoResponse_Result, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SystemInfoResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SystemInfoResponse::_Internal {
 public:
  static const ::grpc_cli::SystemInfoResponse_Result& result(const SystemInfoResponse* msg);
  static const ::grpc_cli::PosInfo& info(const SystemInfoResponse* msg);
};

const ::grpc_cli::SystemInfoResponse_Result&
SystemInfoResponse::_Internal::result(const SystemInfoResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
SystemInfoResponse::_Internal::info(const SystemInfoResponse* msg) {
  return *msg->info_;
}
SystemInfoResponse::SystemInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SystemInfoResponse)
}
SystemInfoResponse::SystemInfoResponse(const SystemInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::SystemInfoResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SystemInfoResponse)
}

void SystemInfoResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

SystemInfoResponse::~SystemInfoResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.SystemInfoResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SystemInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void SystemInfoResponse::ArenaDtor(void* object) {
  SystemInfoResponse* _this = reinterpret_cast< SystemInfoResponse* >(object);
  (void)_this;
}
void SystemInfoResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SystemInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SystemInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SystemInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SystemInfoResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SystemInfoResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SystemInfoResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.SystemInfoResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SystemInfoResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SystemInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SystemInfoResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SystemInfoResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.SystemInfoResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SystemInfoResponse)
  return target;
}

size_t SystemInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SystemInfoResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.SystemInfoResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SystemInfoResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SystemInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemInfoResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SystemInfoResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SystemInfoResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SystemInfoResponse)
    MergeFrom(*source);
  }
}

void SystemInfoResponse::MergeFrom(const SystemInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SystemInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::SystemInfoResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void SystemInfoResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SystemInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemInfoResponse::CopyFrom(const SystemInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SystemInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemInfoResponse::IsInitialized() const {
  return true;
}

void SystemInfoResponse::InternalSwap(SystemInfoResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SystemInfoResponse, info_)
      + sizeof(SystemInfoResponse::info_)
      - PROTOBUF_FIELD_OFFSET(SystemInfoResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SystemInfoResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StopSystemRequest::_Internal {
 public:
};

StopSystemRequest::StopSystemRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.StopSystemRequest)
}
StopSystemRequest::StopSystemRequest(const StopSystemRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.StopSystemRequest)
}

void StopSystemRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StopSystemRequest::~StopSystemRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.StopSystemRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopSystemRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StopSystemRequest::ArenaDtor(void* object) {
  StopSystemRequest* _this = reinterpret_cast< StopSystemRequest* >(object);
  (void)_this;
}
void StopSystemRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopSystemRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StopSystemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.StopSystemRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopSystemRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StopSystemRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StopSystemRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StopSystemRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopSystemRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.StopSystemRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StopSystemRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StopSystemRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StopSystemRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.StopSystemRequest)
  return target;
}

size_t StopSystemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.StopSystemRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopSystemRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.StopSystemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StopSystemRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopSystemRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.StopSystemRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.StopSystemRequest)
    MergeFrom(*source);
  }
}

void StopSystemRequest::MergeFrom(const StopSystemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.StopSystemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
}

void StopSystemRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.StopSystemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopSystemRequest::CopyFrom(const StopSystemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.StopSystemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopSystemRequest::IsInitialized() const {
  return true;
}

void StopSystemRequest::InternalSwap(StopSystemRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata StopSystemRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StopSystemResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const StopSystemResponse_Result* msg);
};

const ::grpc_cli::Status&
StopSystemResponse_Result::_Internal::status(const StopSystemResponse_Result* msg) {
  return *msg->status_;
}
StopSystemResponse_Result::StopSystemResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.StopSystemResponse.Result)
}
StopSystemResponse_Result::StopSystemResponse_Result(const StopSystemResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.StopSystemResponse.Result)
}

void StopSystemResponse_Result::SharedCtor() {
status_ = nullptr;
}

StopSystemResponse_Result::~StopSystemResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.StopSystemResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopSystemResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void StopSystemResponse_Result::ArenaDtor(void* object) {
  StopSystemResponse_Result* _this = reinterpret_cast< StopSystemResponse_Result* >(object);
  (void)_this;
}
void StopSystemResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopSystemResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StopSystemResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.StopSystemResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopSystemResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopSystemResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.StopSystemResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.StopSystemResponse.Result)
  return target;
}

size_t StopSystemResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.StopSystemResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopSystemResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.StopSystemResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const StopSystemResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopSystemResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.StopSystemResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.StopSystemResponse.Result)
    MergeFrom(*source);
  }
}

void StopSystemResponse_Result::MergeFrom(const StopSystemResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.StopSystemResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void StopSystemResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.StopSystemResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopSystemResponse_Result::CopyFrom(const StopSystemResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.StopSystemResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopSystemResponse_Result::IsInitialized() const {
  return true;
}

void StopSystemResponse_Result::InternalSwap(StopSystemResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StopSystemResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StopSystemResponse::_Internal {
 public:
  static const ::grpc_cli::StopSystemResponse_Result& result(const StopSystemResponse* msg);
  static const ::grpc_cli::PosInfo& info(const StopSystemResponse* msg);
};

const ::grpc_cli::StopSystemResponse_Result&
StopSystemResponse::_Internal::result(const StopSystemResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
StopSystemResponse::_Internal::info(const StopSystemResponse* msg) {
  return *msg->info_;
}
StopSystemResponse::StopSystemResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.StopSystemResponse)
}
StopSystemResponse::StopSystemResponse(const StopSystemResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::StopSystemResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.StopSystemResponse)
}

void StopSystemResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

StopSystemResponse::~StopSystemResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.StopSystemResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopSystemResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void StopSystemResponse::ArenaDtor(void* object) {
  StopSystemResponse* _this = reinterpret_cast< StopSystemResponse* >(object);
  (void)_this;
}
void StopSystemResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopSystemResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StopSystemResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.StopSystemResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopSystemResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StopSystemResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StopSystemResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.StopSystemResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopSystemResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.StopSystemResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StopSystemResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StopSystemResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.StopSystemResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.StopSystemResponse)
  return target;
}

size_t StopSystemResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.StopSystemResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.StopSystemResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopSystemResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.StopSystemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StopSystemResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopSystemResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.StopSystemResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.StopSystemResponse)
    MergeFrom(*source);
  }
}

void StopSystemResponse::MergeFrom(const StopSystemResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.StopSystemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::StopSystemResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void StopSystemResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.StopSystemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopSystemResponse::CopyFrom(const StopSystemResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.StopSystemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopSystemResponse::IsInitialized() const {
  return true;
}

void StopSystemResponse::InternalSwap(StopSystemResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StopSystemResponse, info_)
      + sizeof(StopSystemResponse::info_)
      - PROTOBUF_FIELD_OFFSET(StopSystemResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StopSystemResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetSystemPropertyRequest::_Internal {
 public:
};

GetSystemPropertyRequest::GetSystemPropertyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.GetSystemPropertyRequest)
}
GetSystemPropertyRequest::GetSystemPropertyRequest(const GetSystemPropertyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.GetSystemPropertyRequest)
}

void GetSystemPropertyRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetSystemPropertyRequest::~GetSystemPropertyRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.GetSystemPropertyRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSystemPropertyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetSystemPropertyRequest::ArenaDtor(void* object) {
  GetSystemPropertyRequest* _this = reinterpret_cast< GetSystemPropertyRequest* >(object);
  (void)_this;
}
void GetSystemPropertyRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSystemPropertyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetSystemPropertyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.GetSystemPropertyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSystemPropertyRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.GetSystemPropertyRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.GetSystemPropertyRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.GetSystemPropertyRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSystemPropertyRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.GetSystemPropertyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.GetSystemPropertyRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.GetSystemPropertyRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.GetSystemPropertyRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.GetSystemPropertyRequest)
  return target;
}

size_t GetSystemPropertyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.GetSystemPropertyRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSystemPropertyRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.GetSystemPropertyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSystemPropertyRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSystemPropertyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.GetSystemPropertyRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.GetSystemPropertyRequest)
    MergeFrom(*source);
  }
}

void GetSystemPropertyRequest::MergeFrom(const GetSystemPropertyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.GetSystemPropertyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
}

void GetSystemPropertyRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.GetSystemPropertyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSystemPropertyRequest::CopyFrom(const GetSystemPropertyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.GetSystemPropertyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSystemPropertyRequest::IsInitialized() const {
  return true;
}

void GetSystemPropertyRequest::InternalSwap(GetSystemPropertyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSystemPropertyRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetSystemPropertyResponse_Result_Data::_Internal {
 public:
};

GetSystemPropertyResponse_Result_Data::GetSystemPropertyResponse_Result_Data(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.GetSystemPropertyResponse.Result.Data)
}
GetSystemPropertyResponse_Result_Data::GetSystemPropertyResponse_Result_Data(const GetSystemPropertyResponse_Result_Data& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  rebuild_policy_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rebuild_policy().empty()) {
    rebuild_policy_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rebuild_policy(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.GetSystemPropertyResponse.Result.Data)
}

void GetSystemPropertyResponse_Result_Data::SharedCtor() {
rebuild_policy_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetSystemPropertyResponse_Result_Data::~GetSystemPropertyResponse_Result_Data() {
  // @@protoc_insertion_point(destructor:grpc_cli.GetSystemPropertyResponse.Result.Data)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSystemPropertyResponse_Result_Data::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  rebuild_policy_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetSystemPropertyResponse_Result_Data::ArenaDtor(void* object) {
  GetSystemPropertyResponse_Result_Data* _this = reinterpret_cast< GetSystemPropertyResponse_Result_Data* >(object);
  (void)_this;
}
void GetSystemPropertyResponse_Result_Data::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSystemPropertyResponse_Result_Data::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetSystemPropertyResponse_Result_Data::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.GetSystemPropertyResponse.Result.Data)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rebuild_policy_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSystemPropertyResponse_Result_Data::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string rebuild_policy = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_rebuild_policy();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.GetSystemPropertyResponse.Result.Data.rebuild_policy"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSystemPropertyResponse_Result_Data::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.GetSystemPropertyResponse.Result.Data)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string rebuild_policy = 1;
  if (this->rebuild_policy().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rebuild_policy().data(), static_cast<int>(this->_internal_rebuild_policy().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.GetSystemPropertyResponse.Result.Data.rebuild_policy");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_rebuild_policy(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.GetSystemPropertyResponse.Result.Data)
  return target;
}

size_t GetSystemPropertyResponse_Result_Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.GetSystemPropertyResponse.Result.Data)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string rebuild_policy = 1;
  if (this->rebuild_policy().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rebuild_policy());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSystemPropertyResponse_Result_Data::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.GetSystemPropertyResponse.Result.Data)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSystemPropertyResponse_Result_Data* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSystemPropertyResponse_Result_Data>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.GetSystemPropertyResponse.Result.Data)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.GetSystemPropertyResponse.Result.Data)
    MergeFrom(*source);
  }
}

void GetSystemPropertyResponse_Result_Data::MergeFrom(const GetSystemPropertyResponse_Result_Data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.GetSystemPropertyResponse.Result.Data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rebuild_policy().size() > 0) {
    _internal_set_rebuild_policy(from._internal_rebuild_policy());
  }
}

void GetSystemPropertyResponse_Result_Data::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.GetSystemPropertyResponse.Result.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSystemPropertyResponse_Result_Data::CopyFrom(const GetSystemPropertyResponse_Result_Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.GetSystemPropertyResponse.Result.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSystemPropertyResponse_Result_Data::IsInitialized() const {
  return true;
}

void GetSystemPropertyResponse_Result_Data::InternalSwap(GetSystemPropertyResponse_Result_Data* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  rebuild_policy_.Swap(&other->rebuild_policy_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSystemPropertyResponse_Result_Data::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetSystemPropertyResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const GetSystemPropertyResponse_Result* msg);
  static const ::grpc_cli::GetSystemPropertyResponse_Result_Data& data(const GetSystemPropertyResponse_Result* msg);
};

const ::grpc_cli::Status&
GetSystemPropertyResponse_Result::_Internal::status(const GetSystemPropertyResponse_Result* msg) {
  return *msg->status_;
}
const ::grpc_cli::GetSystemPropertyResponse_Result_Data&
GetSystemPropertyResponse_Result::_Internal::data(const GetSystemPropertyResponse_Result* msg) {
  return *msg->data_;
}
GetSystemPropertyResponse_Result::GetSystemPropertyResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.GetSystemPropertyResponse.Result)
}
GetSystemPropertyResponse_Result::GetSystemPropertyResponse_Result(const GetSystemPropertyResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_data()) {
    data_ = new ::grpc_cli::GetSystemPropertyResponse_Result_Data(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.GetSystemPropertyResponse.Result)
}

void GetSystemPropertyResponse_Result::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&data_) -
    reinterpret_cast<char*>(&status_)) + sizeof(data_));
}

GetSystemPropertyResponse_Result::~GetSystemPropertyResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.GetSystemPropertyResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSystemPropertyResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete data_;
}

void GetSystemPropertyResponse_Result::ArenaDtor(void* object) {
  GetSystemPropertyResponse_Result* _this = reinterpret_cast< GetSystemPropertyResponse_Result* >(object);
  (void)_this;
}
void GetSystemPropertyResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSystemPropertyResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetSystemPropertyResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.GetSystemPropertyResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSystemPropertyResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.GetSystemPropertyResponse.Result.Data data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSystemPropertyResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.GetSystemPropertyResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .grpc_cli.GetSystemPropertyResponse.Result.Data data = 2;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.GetSystemPropertyResponse.Result)
  return target;
}

size_t GetSystemPropertyResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.GetSystemPropertyResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .grpc_cli.GetSystemPropertyResponse.Result.Data data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSystemPropertyResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.GetSystemPropertyResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSystemPropertyResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSystemPropertyResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.GetSystemPropertyResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.GetSystemPropertyResponse.Result)
    MergeFrom(*source);
  }
}

void GetSystemPropertyResponse_Result::MergeFrom(const GetSystemPropertyResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.GetSystemPropertyResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
  if (from.has_data()) {
    _internal_mutable_data()->::grpc_cli::GetSystemPropertyResponse_Result_Data::MergeFrom(from._internal_data());
  }
}

void GetSystemPropertyResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.GetSystemPropertyResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSystemPropertyResponse_Result::CopyFrom(const GetSystemPropertyResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.GetSystemPropertyResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSystemPropertyResponse_Result::IsInitialized() const {
  return true;
}

void GetSystemPropertyResponse_Result::InternalSwap(GetSystemPropertyResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetSystemPropertyResponse_Result, data_)
      + sizeof(GetSystemPropertyResponse_Result::data_)
      - PROTOBUF_FIELD_OFFSET(GetSystemPropertyResponse_Result, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSystemPropertyResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetSystemPropertyResponse::_Internal {
 public:
  static const ::grpc_cli::GetSystemPropertyResponse_Result& result(const GetSystemPropertyResponse* msg);
  static const ::grpc_cli::PosInfo& info(const GetSystemPropertyResponse* msg);
};

const ::grpc_cli::GetSystemPropertyResponse_Result&
GetSystemPropertyResponse::_Internal::result(const GetSystemPropertyResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
GetSystemPropertyResponse::_Internal::info(const GetSystemPropertyResponse* msg) {
  return *msg->info_;
}
GetSystemPropertyResponse::GetSystemPropertyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.GetSystemPropertyResponse)
}
GetSystemPropertyResponse::GetSystemPropertyResponse(const GetSystemPropertyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::GetSystemPropertyResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.GetSystemPropertyResponse)
}

void GetSystemPropertyResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

GetSystemPropertyResponse::~GetSystemPropertyResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.GetSystemPropertyResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSystemPropertyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void GetSystemPropertyResponse::ArenaDtor(void* object) {
  GetSystemPropertyResponse* _this = reinterpret_cast< GetSystemPropertyResponse* >(object);
  (void)_this;
}
void GetSystemPropertyResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSystemPropertyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetSystemPropertyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.GetSystemPropertyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSystemPropertyResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.GetSystemPropertyResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.GetSystemPropertyResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.GetSystemPropertyResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSystemPropertyResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.GetSystemPropertyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.GetSystemPropertyResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.GetSystemPropertyResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.GetSystemPropertyResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.GetSystemPropertyResponse)
  return target;
}

size_t GetSystemPropertyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.GetSystemPropertyResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.GetSystemPropertyResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSystemPropertyResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.GetSystemPropertyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSystemPropertyResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSystemPropertyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.GetSystemPropertyResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.GetSystemPropertyResponse)
    MergeFrom(*source);
  }
}

void GetSystemPropertyResponse::MergeFrom(const GetSystemPropertyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.GetSystemPropertyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::GetSystemPropertyResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void GetSystemPropertyResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.GetSystemPropertyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSystemPropertyResponse::CopyFrom(const GetSystemPropertyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.GetSystemPropertyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSystemPropertyResponse::IsInitialized() const {
  return true;
}

void GetSystemPropertyResponse::InternalSwap(GetSystemPropertyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetSystemPropertyResponse, info_)
      + sizeof(GetSystemPropertyResponse::info_)
      - PROTOBUF_FIELD_OFFSET(GetSystemPropertyResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSystemPropertyResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetSystemPropertyRequest_Param::_Internal {
 public:
};

SetSystemPropertyRequest_Param::SetSystemPropertyRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SetSystemPropertyRequest.Param)
}
SetSystemPropertyRequest_Param::SetSystemPropertyRequest_Param(const SetSystemPropertyRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  level_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_level().empty()) {
    level_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_level(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SetSystemPropertyRequest.Param)
}

void SetSystemPropertyRequest_Param::SharedCtor() {
level_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SetSystemPropertyRequest_Param::~SetSystemPropertyRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.SetSystemPropertyRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetSystemPropertyRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  level_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SetSystemPropertyRequest_Param::ArenaDtor(void* object) {
  SetSystemPropertyRequest_Param* _this = reinterpret_cast< SetSystemPropertyRequest_Param* >(object);
  (void)_this;
}
void SetSystemPropertyRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetSystemPropertyRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetSystemPropertyRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SetSystemPropertyRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  level_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetSystemPropertyRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string level = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_level();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetSystemPropertyRequest.Param.level"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetSystemPropertyRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SetSystemPropertyRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string level = 1;
  if (this->level().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_level().data(), static_cast<int>(this->_internal_level().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetSystemPropertyRequest.Param.level");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SetSystemPropertyRequest.Param)
  return target;
}

size_t SetSystemPropertyRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SetSystemPropertyRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string level = 1;
  if (this->level().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_level());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetSystemPropertyRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SetSystemPropertyRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const SetSystemPropertyRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetSystemPropertyRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SetSystemPropertyRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SetSystemPropertyRequest.Param)
    MergeFrom(*source);
  }
}

void SetSystemPropertyRequest_Param::MergeFrom(const SetSystemPropertyRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SetSystemPropertyRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.level().size() > 0) {
    _internal_set_level(from._internal_level());
  }
}

void SetSystemPropertyRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SetSystemPropertyRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetSystemPropertyRequest_Param::CopyFrom(const SetSystemPropertyRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SetSystemPropertyRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetSystemPropertyRequest_Param::IsInitialized() const {
  return true;
}

void SetSystemPropertyRequest_Param::InternalSwap(SetSystemPropertyRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  level_.Swap(&other->level_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SetSystemPropertyRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetSystemPropertyRequest::_Internal {
 public:
  static const ::grpc_cli::SetSystemPropertyRequest_Param& param(const SetSystemPropertyRequest* msg);
};

const ::grpc_cli::SetSystemPropertyRequest_Param&
SetSystemPropertyRequest::_Internal::param(const SetSystemPropertyRequest* msg) {
  return *msg->param_;
}
SetSystemPropertyRequest::SetSystemPropertyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SetSystemPropertyRequest)
}
SetSystemPropertyRequest::SetSystemPropertyRequest(const SetSystemPropertyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::SetSystemPropertyRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SetSystemPropertyRequest)
}

void SetSystemPropertyRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

SetSystemPropertyRequest::~SetSystemPropertyRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.SetSystemPropertyRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetSystemPropertyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void SetSystemPropertyRequest::ArenaDtor(void* object) {
  SetSystemPropertyRequest* _this = reinterpret_cast< SetSystemPropertyRequest* >(object);
  (void)_this;
}
void SetSystemPropertyRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetSystemPropertyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetSystemPropertyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SetSystemPropertyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetSystemPropertyRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetSystemPropertyRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetSystemPropertyRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetSystemPropertyRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.SetSystemPropertyRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetSystemPropertyRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SetSystemPropertyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetSystemPropertyRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetSystemPropertyRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetSystemPropertyRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.SetSystemPropertyRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SetSystemPropertyRequest)
  return target;
}

size_t SetSystemPropertyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SetSystemPropertyRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.SetSystemPropertyRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetSystemPropertyRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SetSystemPropertyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetSystemPropertyRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetSystemPropertyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SetSystemPropertyRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SetSystemPropertyRequest)
    MergeFrom(*source);
  }
}

void SetSystemPropertyRequest::MergeFrom(const SetSystemPropertyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SetSystemPropertyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::SetSystemPropertyRequest_Param::MergeFrom(from._internal_param());
  }
}

void SetSystemPropertyRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SetSystemPropertyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetSystemPropertyRequest::CopyFrom(const SetSystemPropertyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SetSystemPropertyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetSystemPropertyRequest::IsInitialized() const {
  return true;
}

void SetSystemPropertyRequest::InternalSwap(SetSystemPropertyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetSystemPropertyRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetSystemPropertyResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const SetSystemPropertyResponse_Result* msg);
};

const ::grpc_cli::Status&
SetSystemPropertyResponse_Result::_Internal::status(const SetSystemPropertyResponse_Result* msg) {
  return *msg->status_;
}
SetSystemPropertyResponse_Result::SetSystemPropertyResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SetSystemPropertyResponse.Result)
}
SetSystemPropertyResponse_Result::SetSystemPropertyResponse_Result(const SetSystemPropertyResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SetSystemPropertyResponse.Result)
}

void SetSystemPropertyResponse_Result::SharedCtor() {
status_ = nullptr;
}

SetSystemPropertyResponse_Result::~SetSystemPropertyResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.SetSystemPropertyResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetSystemPropertyResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void SetSystemPropertyResponse_Result::ArenaDtor(void* object) {
  SetSystemPropertyResponse_Result* _this = reinterpret_cast< SetSystemPropertyResponse_Result* >(object);
  (void)_this;
}
void SetSystemPropertyResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetSystemPropertyResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetSystemPropertyResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SetSystemPropertyResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetSystemPropertyResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetSystemPropertyResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SetSystemPropertyResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SetSystemPropertyResponse.Result)
  return target;
}

size_t SetSystemPropertyResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SetSystemPropertyResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetSystemPropertyResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SetSystemPropertyResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const SetSystemPropertyResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetSystemPropertyResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SetSystemPropertyResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SetSystemPropertyResponse.Result)
    MergeFrom(*source);
  }
}

void SetSystemPropertyResponse_Result::MergeFrom(const SetSystemPropertyResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SetSystemPropertyResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void SetSystemPropertyResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SetSystemPropertyResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetSystemPropertyResponse_Result::CopyFrom(const SetSystemPropertyResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SetSystemPropertyResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetSystemPropertyResponse_Result::IsInitialized() const {
  return true;
}

void SetSystemPropertyResponse_Result::InternalSwap(SetSystemPropertyResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetSystemPropertyResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetSystemPropertyResponse::_Internal {
 public:
  static const ::grpc_cli::SetSystemPropertyResponse_Result& result(const SetSystemPropertyResponse* msg);
  static const ::grpc_cli::PosInfo& info(const SetSystemPropertyResponse* msg);
};

const ::grpc_cli::SetSystemPropertyResponse_Result&
SetSystemPropertyResponse::_Internal::result(const SetSystemPropertyResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
SetSystemPropertyResponse::_Internal::info(const SetSystemPropertyResponse* msg) {
  return *msg->info_;
}
SetSystemPropertyResponse::SetSystemPropertyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SetSystemPropertyResponse)
}
SetSystemPropertyResponse::SetSystemPropertyResponse(const SetSystemPropertyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::SetSystemPropertyResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SetSystemPropertyResponse)
}

void SetSystemPropertyResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

SetSystemPropertyResponse::~SetSystemPropertyResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.SetSystemPropertyResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetSystemPropertyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void SetSystemPropertyResponse::ArenaDtor(void* object) {
  SetSystemPropertyResponse* _this = reinterpret_cast< SetSystemPropertyResponse* >(object);
  (void)_this;
}
void SetSystemPropertyResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetSystemPropertyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetSystemPropertyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SetSystemPropertyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetSystemPropertyResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetSystemPropertyResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetSystemPropertyResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.SetSystemPropertyResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetSystemPropertyResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SetSystemPropertyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetSystemPropertyResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetSystemPropertyResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.SetSystemPropertyResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SetSystemPropertyResponse)
  return target;
}

size_t SetSystemPropertyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SetSystemPropertyResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.SetSystemPropertyResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetSystemPropertyResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SetSystemPropertyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetSystemPropertyResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetSystemPropertyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SetSystemPropertyResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SetSystemPropertyResponse)
    MergeFrom(*source);
  }
}

void SetSystemPropertyResponse::MergeFrom(const SetSystemPropertyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SetSystemPropertyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::SetSystemPropertyResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void SetSystemPropertyResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SetSystemPropertyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetSystemPropertyResponse::CopyFrom(const SetSystemPropertyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SetSystemPropertyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetSystemPropertyResponse::IsInitialized() const {
  return true;
}

void SetSystemPropertyResponse::InternalSwap(SetSystemPropertyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetSystemPropertyResponse, info_)
      + sizeof(SetSystemPropertyResponse::info_)
      - PROTOBUF_FIELD_OFFSET(SetSystemPropertyResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetSystemPropertyResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StartTelemetryRequest::_Internal {
 public:
};

StartTelemetryRequest::StartTelemetryRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.StartTelemetryRequest)
}
StartTelemetryRequest::StartTelemetryRequest(const StartTelemetryRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.StartTelemetryRequest)
}

void StartTelemetryRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StartTelemetryRequest::~StartTelemetryRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.StartTelemetryRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StartTelemetryRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StartTelemetryRequest::ArenaDtor(void* object) {
  StartTelemetryRequest* _this = reinterpret_cast< StartTelemetryRequest* >(object);
  (void)_this;
}
void StartTelemetryRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartTelemetryRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StartTelemetryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.StartTelemetryRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartTelemetryRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StartTelemetryRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StartTelemetryRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StartTelemetryRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartTelemetryRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.StartTelemetryRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StartTelemetryRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StartTelemetryRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StartTelemetryRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.StartTelemetryRequest)
  return target;
}

size_t StartTelemetryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.StartTelemetryRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartTelemetryRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.StartTelemetryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StartTelemetryRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StartTelemetryRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.StartTelemetryRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.StartTelemetryRequest)
    MergeFrom(*source);
  }
}

void StartTelemetryRequest::MergeFrom(const StartTelemetryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.StartTelemetryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
}

void StartTelemetryRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.StartTelemetryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartTelemetryRequest::CopyFrom(const StartTelemetryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.StartTelemetryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartTelemetryRequest::IsInitialized() const {
  return true;
}

void StartTelemetryRequest::InternalSwap(StartTelemetryRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata StartTelemetryRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StartTelemetryResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const StartTelemetryResponse_Result* msg);
};

const ::grpc_cli::Status&
StartTelemetryResponse_Result::_Internal::status(const StartTelemetryResponse_Result* msg) {
  return *msg->status_;
}
StartTelemetryResponse_Result::StartTelemetryResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.StartTelemetryResponse.Result)
}
StartTelemetryResponse_Result::StartTelemetryResponse_Result(const StartTelemetryResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.StartTelemetryResponse.Result)
}

void StartTelemetryResponse_Result::SharedCtor() {
status_ = nullptr;
}

StartTelemetryResponse_Result::~StartTelemetryResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.StartTelemetryResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StartTelemetryResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void StartTelemetryResponse_Result::ArenaDtor(void* object) {
  StartTelemetryResponse_Result* _this = reinterpret_cast< StartTelemetryResponse_Result* >(object);
  (void)_this;
}
void StartTelemetryResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartTelemetryResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StartTelemetryResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.StartTelemetryResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartTelemetryResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartTelemetryResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.StartTelemetryResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.StartTelemetryResponse.Result)
  return target;
}

size_t StartTelemetryResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.StartTelemetryResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartTelemetryResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.StartTelemetryResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const StartTelemetryResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StartTelemetryResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.StartTelemetryResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.StartTelemetryResponse.Result)
    MergeFrom(*source);
  }
}

void StartTelemetryResponse_Result::MergeFrom(const StartTelemetryResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.StartTelemetryResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void StartTelemetryResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.StartTelemetryResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartTelemetryResponse_Result::CopyFrom(const StartTelemetryResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.StartTelemetryResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartTelemetryResponse_Result::IsInitialized() const {
  return true;
}

void StartTelemetryResponse_Result::InternalSwap(StartTelemetryResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StartTelemetryResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StartTelemetryResponse::_Internal {
 public:
  static const ::grpc_cli::StartTelemetryResponse_Result& result(const StartTelemetryResponse* msg);
  static const ::grpc_cli::PosInfo& info(const StartTelemetryResponse* msg);
};

const ::grpc_cli::StartTelemetryResponse_Result&
StartTelemetryResponse::_Internal::result(const StartTelemetryResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
StartTelemetryResponse::_Internal::info(const StartTelemetryResponse* msg) {
  return *msg->info_;
}
StartTelemetryResponse::StartTelemetryResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.StartTelemetryResponse)
}
StartTelemetryResponse::StartTelemetryResponse(const StartTelemetryResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::StartTelemetryResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.StartTelemetryResponse)
}

void StartTelemetryResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

StartTelemetryResponse::~StartTelemetryResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.StartTelemetryResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StartTelemetryResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void StartTelemetryResponse::ArenaDtor(void* object) {
  StartTelemetryResponse* _this = reinterpret_cast< StartTelemetryResponse* >(object);
  (void)_this;
}
void StartTelemetryResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartTelemetryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StartTelemetryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.StartTelemetryResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartTelemetryResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StartTelemetryResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StartTelemetryResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.StartTelemetryResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartTelemetryResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.StartTelemetryResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StartTelemetryResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StartTelemetryResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.StartTelemetryResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.StartTelemetryResponse)
  return target;
}

size_t StartTelemetryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.StartTelemetryResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.StartTelemetryResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartTelemetryResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.StartTelemetryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StartTelemetryResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StartTelemetryResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.StartTelemetryResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.StartTelemetryResponse)
    MergeFrom(*source);
  }
}

void StartTelemetryResponse::MergeFrom(const StartTelemetryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.StartTelemetryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::StartTelemetryResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void StartTelemetryResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.StartTelemetryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartTelemetryResponse::CopyFrom(const StartTelemetryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.StartTelemetryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartTelemetryResponse::IsInitialized() const {
  return true;
}

void StartTelemetryResponse::InternalSwap(StartTelemetryResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StartTelemetryResponse, info_)
      + sizeof(StartTelemetryResponse::info_)
      - PROTOBUF_FIELD_OFFSET(StartTelemetryResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StartTelemetryResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StopTelemetryRequest::_Internal {
 public:
};

StopTelemetryRequest::StopTelemetryRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.StopTelemetryRequest)
}
StopTelemetryRequest::StopTelemetryRequest(const StopTelemetryRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.StopTelemetryRequest)
}

void StopTelemetryRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StopTelemetryRequest::~StopTelemetryRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.StopTelemetryRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopTelemetryRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StopTelemetryRequest::ArenaDtor(void* object) {
  StopTelemetryRequest* _this = reinterpret_cast< StopTelemetryRequest* >(object);
  (void)_this;
}
void StopTelemetryRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopTelemetryRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StopTelemetryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.StopTelemetryRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopTelemetryRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StopTelemetryRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StopTelemetryRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StopTelemetryRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopTelemetryRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.StopTelemetryRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StopTelemetryRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StopTelemetryRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StopTelemetryRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.StopTelemetryRequest)
  return target;
}

size_t StopTelemetryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.StopTelemetryRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopTelemetryRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.StopTelemetryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StopTelemetryRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopTelemetryRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.StopTelemetryRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.StopTelemetryRequest)
    MergeFrom(*source);
  }
}

void StopTelemetryRequest::MergeFrom(const StopTelemetryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.StopTelemetryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
}

void StopTelemetryRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.StopTelemetryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopTelemetryRequest::CopyFrom(const StopTelemetryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.StopTelemetryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopTelemetryRequest::IsInitialized() const {
  return true;
}

void StopTelemetryRequest::InternalSwap(StopTelemetryRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata StopTelemetryRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StopTelemetryResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const StopTelemetryResponse_Result* msg);
};

const ::grpc_cli::Status&
StopTelemetryResponse_Result::_Internal::status(const StopTelemetryResponse_Result* msg) {
  return *msg->status_;
}
StopTelemetryResponse_Result::StopTelemetryResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.StopTelemetryResponse.Result)
}
StopTelemetryResponse_Result::StopTelemetryResponse_Result(const StopTelemetryResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.StopTelemetryResponse.Result)
}

void StopTelemetryResponse_Result::SharedCtor() {
status_ = nullptr;
}

StopTelemetryResponse_Result::~StopTelemetryResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.StopTelemetryResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopTelemetryResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void StopTelemetryResponse_Result::ArenaDtor(void* object) {
  StopTelemetryResponse_Result* _this = reinterpret_cast< StopTelemetryResponse_Result* >(object);
  (void)_this;
}
void StopTelemetryResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopTelemetryResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StopTelemetryResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.StopTelemetryResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopTelemetryResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopTelemetryResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.StopTelemetryResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.StopTelemetryResponse.Result)
  return target;
}

size_t StopTelemetryResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.StopTelemetryResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopTelemetryResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.StopTelemetryResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const StopTelemetryResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopTelemetryResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.StopTelemetryResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.StopTelemetryResponse.Result)
    MergeFrom(*source);
  }
}

void StopTelemetryResponse_Result::MergeFrom(const StopTelemetryResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.StopTelemetryResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void StopTelemetryResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.StopTelemetryResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopTelemetryResponse_Result::CopyFrom(const StopTelemetryResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.StopTelemetryResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopTelemetryResponse_Result::IsInitialized() const {
  return true;
}

void StopTelemetryResponse_Result::InternalSwap(StopTelemetryResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StopTelemetryResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StopTelemetryResponse::_Internal {
 public:
  static const ::grpc_cli::StopTelemetryResponse_Result& result(const StopTelemetryResponse* msg);
  static const ::grpc_cli::PosInfo& info(const StopTelemetryResponse* msg);
};

const ::grpc_cli::StopTelemetryResponse_Result&
StopTelemetryResponse::_Internal::result(const StopTelemetryResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
StopTelemetryResponse::_Internal::info(const StopTelemetryResponse* msg) {
  return *msg->info_;
}
StopTelemetryResponse::StopTelemetryResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.StopTelemetryResponse)
}
StopTelemetryResponse::StopTelemetryResponse(const StopTelemetryResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::StopTelemetryResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.StopTelemetryResponse)
}

void StopTelemetryResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

StopTelemetryResponse::~StopTelemetryResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.StopTelemetryResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopTelemetryResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void StopTelemetryResponse::ArenaDtor(void* object) {
  StopTelemetryResponse* _this = reinterpret_cast< StopTelemetryResponse* >(object);
  (void)_this;
}
void StopTelemetryResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopTelemetryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StopTelemetryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.StopTelemetryResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopTelemetryResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StopTelemetryResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StopTelemetryResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.StopTelemetryResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopTelemetryResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.StopTelemetryResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StopTelemetryResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StopTelemetryResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.StopTelemetryResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.StopTelemetryResponse)
  return target;
}

size_t StopTelemetryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.StopTelemetryResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.StopTelemetryResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopTelemetryResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.StopTelemetryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StopTelemetryResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopTelemetryResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.StopTelemetryResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.StopTelemetryResponse)
    MergeFrom(*source);
  }
}

void StopTelemetryResponse::MergeFrom(const StopTelemetryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.StopTelemetryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::StopTelemetryResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void StopTelemetryResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.StopTelemetryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopTelemetryResponse::CopyFrom(const StopTelemetryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.StopTelemetryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopTelemetryResponse::IsInitialized() const {
  return true;
}

void StopTelemetryResponse::InternalSwap(StopTelemetryResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StopTelemetryResponse, info_)
      + sizeof(StopTelemetryResponse::info_)
      - PROTOBUF_FIELD_OFFSET(StopTelemetryResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StopTelemetryResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetTelemetryPropertyRequest_Param::_Internal {
 public:
};

SetTelemetryPropertyRequest_Param::SetTelemetryPropertyRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SetTelemetryPropertyRequest.Param)
}
SetTelemetryPropertyRequest_Param::SetTelemetryPropertyRequest_Param(const SetTelemetryPropertyRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  publicationlistpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_publicationlistpath().empty()) {
    publicationlistpath_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_publicationlistpath(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SetTelemetryPropertyRequest.Param)
}

void SetTelemetryPropertyRequest_Param::SharedCtor() {
publicationlistpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SetTelemetryPropertyRequest_Param::~SetTelemetryPropertyRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.SetTelemetryPropertyRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetTelemetryPropertyRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  publicationlistpath_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SetTelemetryPropertyRequest_Param::ArenaDtor(void* object) {
  SetTelemetryPropertyRequest_Param* _this = reinterpret_cast< SetTelemetryPropertyRequest_Param* >(object);
  (void)_this;
}
void SetTelemetryPropertyRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetTelemetryPropertyRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetTelemetryPropertyRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SetTelemetryPropertyRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  publicationlistpath_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetTelemetryPropertyRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string publicationListPath = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_publicationlistpath();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetTelemetryPropertyRequest.Param.publicationListPath"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetTelemetryPropertyRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SetTelemetryPropertyRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string publicationListPath = 1;
  if (this->publicationlistpath().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_publicationlistpath().data(), static_cast<int>(this->_internal_publicationlistpath().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetTelemetryPropertyRequest.Param.publicationListPath");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_publicationlistpath(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SetTelemetryPropertyRequest.Param)
  return target;
}

size_t SetTelemetryPropertyRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SetTelemetryPropertyRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string publicationListPath = 1;
  if (this->publicationlistpath().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_publicationlistpath());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetTelemetryPropertyRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SetTelemetryPropertyRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const SetTelemetryPropertyRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetTelemetryPropertyRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SetTelemetryPropertyRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SetTelemetryPropertyRequest.Param)
    MergeFrom(*source);
  }
}

void SetTelemetryPropertyRequest_Param::MergeFrom(const SetTelemetryPropertyRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SetTelemetryPropertyRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.publicationlistpath().size() > 0) {
    _internal_set_publicationlistpath(from._internal_publicationlistpath());
  }
}

void SetTelemetryPropertyRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SetTelemetryPropertyRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetTelemetryPropertyRequest_Param::CopyFrom(const SetTelemetryPropertyRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SetTelemetryPropertyRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetTelemetryPropertyRequest_Param::IsInitialized() const {
  return true;
}

void SetTelemetryPropertyRequest_Param::InternalSwap(SetTelemetryPropertyRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  publicationlistpath_.Swap(&other->publicationlistpath_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SetTelemetryPropertyRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetTelemetryPropertyRequest::_Internal {
 public:
  static const ::grpc_cli::SetTelemetryPropertyRequest_Param& param(const SetTelemetryPropertyRequest* msg);
};

const ::grpc_cli::SetTelemetryPropertyRequest_Param&
SetTelemetryPropertyRequest::_Internal::param(const SetTelemetryPropertyRequest* msg) {
  return *msg->param_;
}
SetTelemetryPropertyRequest::SetTelemetryPropertyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SetTelemetryPropertyRequest)
}
SetTelemetryPropertyRequest::SetTelemetryPropertyRequest(const SetTelemetryPropertyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::SetTelemetryPropertyRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SetTelemetryPropertyRequest)
}

void SetTelemetryPropertyRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

SetTelemetryPropertyRequest::~SetTelemetryPropertyRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.SetTelemetryPropertyRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetTelemetryPropertyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void SetTelemetryPropertyRequest::ArenaDtor(void* object) {
  SetTelemetryPropertyRequest* _this = reinterpret_cast< SetTelemetryPropertyRequest* >(object);
  (void)_this;
}
void SetTelemetryPropertyRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetTelemetryPropertyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetTelemetryPropertyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SetTelemetryPropertyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetTelemetryPropertyRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetTelemetryPropertyRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetTelemetryPropertyRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetTelemetryPropertyRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.SetTelemetryPropertyRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetTelemetryPropertyRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SetTelemetryPropertyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetTelemetryPropertyRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetTelemetryPropertyRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetTelemetryPropertyRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.SetTelemetryPropertyRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SetTelemetryPropertyRequest)
  return target;
}

size_t SetTelemetryPropertyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SetTelemetryPropertyRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.SetTelemetryPropertyRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetTelemetryPropertyRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SetTelemetryPropertyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetTelemetryPropertyRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetTelemetryPropertyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SetTelemetryPropertyRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SetTelemetryPropertyRequest)
    MergeFrom(*source);
  }
}

void SetTelemetryPropertyRequest::MergeFrom(const SetTelemetryPropertyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SetTelemetryPropertyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::SetTelemetryPropertyRequest_Param::MergeFrom(from._internal_param());
  }
}

void SetTelemetryPropertyRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SetTelemetryPropertyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetTelemetryPropertyRequest::CopyFrom(const SetTelemetryPropertyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SetTelemetryPropertyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetTelemetryPropertyRequest::IsInitialized() const {
  return true;
}

void SetTelemetryPropertyRequest::InternalSwap(SetTelemetryPropertyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetTelemetryPropertyRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetTelemetryPropertyResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const SetTelemetryPropertyResponse_Result* msg);
};

const ::grpc_cli::Status&
SetTelemetryPropertyResponse_Result::_Internal::status(const SetTelemetryPropertyResponse_Result* msg) {
  return *msg->status_;
}
SetTelemetryPropertyResponse_Result::SetTelemetryPropertyResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SetTelemetryPropertyResponse.Result)
}
SetTelemetryPropertyResponse_Result::SetTelemetryPropertyResponse_Result(const SetTelemetryPropertyResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SetTelemetryPropertyResponse.Result)
}

void SetTelemetryPropertyResponse_Result::SharedCtor() {
status_ = nullptr;
}

SetTelemetryPropertyResponse_Result::~SetTelemetryPropertyResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.SetTelemetryPropertyResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetTelemetryPropertyResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void SetTelemetryPropertyResponse_Result::ArenaDtor(void* object) {
  SetTelemetryPropertyResponse_Result* _this = reinterpret_cast< SetTelemetryPropertyResponse_Result* >(object);
  (void)_this;
}
void SetTelemetryPropertyResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetTelemetryPropertyResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetTelemetryPropertyResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SetTelemetryPropertyResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetTelemetryPropertyResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetTelemetryPropertyResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SetTelemetryPropertyResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SetTelemetryPropertyResponse.Result)
  return target;
}

size_t SetTelemetryPropertyResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SetTelemetryPropertyResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetTelemetryPropertyResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SetTelemetryPropertyResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const SetTelemetryPropertyResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetTelemetryPropertyResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SetTelemetryPropertyResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SetTelemetryPropertyResponse.Result)
    MergeFrom(*source);
  }
}

void SetTelemetryPropertyResponse_Result::MergeFrom(const SetTelemetryPropertyResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SetTelemetryPropertyResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void SetTelemetryPropertyResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SetTelemetryPropertyResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetTelemetryPropertyResponse_Result::CopyFrom(const SetTelemetryPropertyResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SetTelemetryPropertyResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetTelemetryPropertyResponse_Result::IsInitialized() const {
  return true;
}

void SetTelemetryPropertyResponse_Result::InternalSwap(SetTelemetryPropertyResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetTelemetryPropertyResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetTelemetryPropertyResponse::_Internal {
 public:
  static const ::grpc_cli::SetTelemetryPropertyResponse_Result& result(const SetTelemetryPropertyResponse* msg);
  static const ::grpc_cli::PosInfo& info(const SetTelemetryPropertyResponse* msg);
};

const ::grpc_cli::SetTelemetryPropertyResponse_Result&
SetTelemetryPropertyResponse::_Internal::result(const SetTelemetryPropertyResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
SetTelemetryPropertyResponse::_Internal::info(const SetTelemetryPropertyResponse* msg) {
  return *msg->info_;
}
SetTelemetryPropertyResponse::SetTelemetryPropertyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SetTelemetryPropertyResponse)
}
SetTelemetryPropertyResponse::SetTelemetryPropertyResponse(const SetTelemetryPropertyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::SetTelemetryPropertyResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SetTelemetryPropertyResponse)
}

void SetTelemetryPropertyResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

SetTelemetryPropertyResponse::~SetTelemetryPropertyResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.SetTelemetryPropertyResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetTelemetryPropertyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void SetTelemetryPropertyResponse::ArenaDtor(void* object) {
  SetTelemetryPropertyResponse* _this = reinterpret_cast< SetTelemetryPropertyResponse* >(object);
  (void)_this;
}
void SetTelemetryPropertyResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetTelemetryPropertyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetTelemetryPropertyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SetTelemetryPropertyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetTelemetryPropertyResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetTelemetryPropertyResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetTelemetryPropertyResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.SetTelemetryPropertyResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetTelemetryPropertyResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SetTelemetryPropertyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetTelemetryPropertyResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetTelemetryPropertyResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.SetTelemetryPropertyResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SetTelemetryPropertyResponse)
  return target;
}

size_t SetTelemetryPropertyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SetTelemetryPropertyResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.SetTelemetryPropertyResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetTelemetryPropertyResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SetTelemetryPropertyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetTelemetryPropertyResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetTelemetryPropertyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SetTelemetryPropertyResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SetTelemetryPropertyResponse)
    MergeFrom(*source);
  }
}

void SetTelemetryPropertyResponse::MergeFrom(const SetTelemetryPropertyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SetTelemetryPropertyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::SetTelemetryPropertyResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void SetTelemetryPropertyResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SetTelemetryPropertyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetTelemetryPropertyResponse::CopyFrom(const SetTelemetryPropertyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SetTelemetryPropertyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetTelemetryPropertyResponse::IsInitialized() const {
  return true;
}

void SetTelemetryPropertyResponse::InternalSwap(SetTelemetryPropertyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetTelemetryPropertyResponse, info_)
      + sizeof(SetTelemetryPropertyResponse::info_)
      - PROTOBUF_FIELD_OFFSET(SetTelemetryPropertyResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetTelemetryPropertyResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetTelemetryPropertyRequest::_Internal {
 public:
};

GetTelemetryPropertyRequest::GetTelemetryPropertyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.GetTelemetryPropertyRequest)
}
GetTelemetryPropertyRequest::GetTelemetryPropertyRequest(const GetTelemetryPropertyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.GetTelemetryPropertyRequest)
}

void GetTelemetryPropertyRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetTelemetryPropertyRequest::~GetTelemetryPropertyRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.GetTelemetryPropertyRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetTelemetryPropertyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetTelemetryPropertyRequest::ArenaDtor(void* object) {
  GetTelemetryPropertyRequest* _this = reinterpret_cast< GetTelemetryPropertyRequest* >(object);
  (void)_this;
}
void GetTelemetryPropertyRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetTelemetryPropertyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetTelemetryPropertyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.GetTelemetryPropertyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTelemetryPropertyRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.GetTelemetryPropertyRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.GetTelemetryPropertyRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.GetTelemetryPropertyRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetTelemetryPropertyRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.GetTelemetryPropertyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.GetTelemetryPropertyRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.GetTelemetryPropertyRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.GetTelemetryPropertyRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.GetTelemetryPropertyRequest)
  return target;
}

size_t GetTelemetryPropertyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.GetTelemetryPropertyRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTelemetryPropertyRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.GetTelemetryPropertyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTelemetryPropertyRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetTelemetryPropertyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.GetTelemetryPropertyRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.GetTelemetryPropertyRequest)
    MergeFrom(*source);
  }
}

void GetTelemetryPropertyRequest::MergeFrom(const GetTelemetryPropertyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.GetTelemetryPropertyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
}

void GetTelemetryPropertyRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.GetTelemetryPropertyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTelemetryPropertyRequest::CopyFrom(const GetTelemetryPropertyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.GetTelemetryPropertyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTelemetryPropertyRequest::IsInitialized() const {
  return true;
}

void GetTelemetryPropertyRequest::InternalSwap(GetTelemetryPropertyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTelemetryPropertyRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetTelemetryPropertyResponse_Result_TelemetryProperty::_Internal {
 public:
};

GetTelemetryPropertyResponse_Result_TelemetryProperty::GetTelemetryPropertyResponse_Result_TelemetryProperty(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.GetTelemetryPropertyResponse.Result.TelemetryProperty)
}
GetTelemetryPropertyResponse_Result_TelemetryProperty::GetTelemetryPropertyResponse_Result_TelemetryProperty(const GetTelemetryPropertyResponse_Result_TelemetryProperty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  publicationlistpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_publicationlistpath().empty()) {
    publicationlistpath_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_publicationlistpath(), 
      GetArena());
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:grpc_cli.GetTelemetryPropertyResponse.Result.TelemetryProperty)
}

void GetTelemetryPropertyResponse_Result_TelemetryProperty::SharedCtor() {
publicationlistpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
status_ = false;
}

GetTelemetryPropertyResponse_Result_TelemetryProperty::~GetTelemetryPropertyResponse_Result_TelemetryProperty() {
  // @@protoc_insertion_point(destructor:grpc_cli.GetTelemetryPropertyResponse.Result.TelemetryProperty)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetTelemetryPropertyResponse_Result_TelemetryProperty::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  publicationlistpath_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetTelemetryPropertyResponse_Result_TelemetryProperty::ArenaDtor(void* object) {
  GetTelemetryPropertyResponse_Result_TelemetryProperty* _this = reinterpret_cast< GetTelemetryPropertyResponse_Result_TelemetryProperty* >(object);
  (void)_this;
}
void GetTelemetryPropertyResponse_Result_TelemetryProperty::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetTelemetryPropertyResponse_Result_TelemetryProperty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetTelemetryPropertyResponse_Result_TelemetryProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.GetTelemetryPropertyResponse.Result.TelemetryProperty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  publicationlistpath_.ClearToEmpty();
  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTelemetryPropertyResponse_Result_TelemetryProperty::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string publicationListPath = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_publicationlistpath();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.GetTelemetryPropertyResponse.Result.TelemetryProperty.publicationListPath"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetTelemetryPropertyResponse_Result_TelemetryProperty::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.GetTelemetryPropertyResponse.Result.TelemetryProperty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string publicationListPath = 2;
  if (this->publicationlistpath().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_publicationlistpath().data(), static_cast<int>(this->_internal_publicationlistpath().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.GetTelemetryPropertyResponse.Result.TelemetryProperty.publicationListPath");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_publicationlistpath(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.GetTelemetryPropertyResponse.Result.TelemetryProperty)
  return target;
}

size_t GetTelemetryPropertyResponse_Result_TelemetryProperty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.GetTelemetryPropertyResponse.Result.TelemetryProperty)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string publicationListPath = 2;
  if (this->publicationlistpath().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_publicationlistpath());
  }

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTelemetryPropertyResponse_Result_TelemetryProperty::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.GetTelemetryPropertyResponse.Result.TelemetryProperty)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTelemetryPropertyResponse_Result_TelemetryProperty* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetTelemetryPropertyResponse_Result_TelemetryProperty>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.GetTelemetryPropertyResponse.Result.TelemetryProperty)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.GetTelemetryPropertyResponse.Result.TelemetryProperty)
    MergeFrom(*source);
  }
}

void GetTelemetryPropertyResponse_Result_TelemetryProperty::MergeFrom(const GetTelemetryPropertyResponse_Result_TelemetryProperty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.GetTelemetryPropertyResponse.Result.TelemetryProperty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.publicationlistpath().size() > 0) {
    _internal_set_publicationlistpath(from._internal_publicationlistpath());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void GetTelemetryPropertyResponse_Result_TelemetryProperty::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.GetTelemetryPropertyResponse.Result.TelemetryProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTelemetryPropertyResponse_Result_TelemetryProperty::CopyFrom(const GetTelemetryPropertyResponse_Result_TelemetryProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.GetTelemetryPropertyResponse.Result.TelemetryProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTelemetryPropertyResponse_Result_TelemetryProperty::IsInitialized() const {
  return true;
}

void GetTelemetryPropertyResponse_Result_TelemetryProperty::InternalSwap(GetTelemetryPropertyResponse_Result_TelemetryProperty* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  publicationlistpath_.Swap(&other->publicationlistpath_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTelemetryPropertyResponse_Result_TelemetryProperty::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetTelemetryPropertyResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const GetTelemetryPropertyResponse_Result* msg);
  static const ::grpc_cli::GetTelemetryPropertyResponse_Result_TelemetryProperty& data(const GetTelemetryPropertyResponse_Result* msg);
};

const ::grpc_cli::Status&
GetTelemetryPropertyResponse_Result::_Internal::status(const GetTelemetryPropertyResponse_Result* msg) {
  return *msg->status_;
}
const ::grpc_cli::GetTelemetryPropertyResponse_Result_TelemetryProperty&
GetTelemetryPropertyResponse_Result::_Internal::data(const GetTelemetryPropertyResponse_Result* msg) {
  return *msg->data_;
}
GetTelemetryPropertyResponse_Result::GetTelemetryPropertyResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.GetTelemetryPropertyResponse.Result)
}
GetTelemetryPropertyResponse_Result::GetTelemetryPropertyResponse_Result(const GetTelemetryPropertyResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_data()) {
    data_ = new ::grpc_cli::GetTelemetryPropertyResponse_Result_TelemetryProperty(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.GetTelemetryPropertyResponse.Result)
}

void GetTelemetryPropertyResponse_Result::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&data_) -
    reinterpret_cast<char*>(&status_)) + sizeof(data_));
}

GetTelemetryPropertyResponse_Result::~GetTelemetryPropertyResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.GetTelemetryPropertyResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetTelemetryPropertyResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete data_;
}

void GetTelemetryPropertyResponse_Result::ArenaDtor(void* object) {
  GetTelemetryPropertyResponse_Result* _this = reinterpret_cast< GetTelemetryPropertyResponse_Result* >(object);
  (void)_this;
}
void GetTelemetryPropertyResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetTelemetryPropertyResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetTelemetryPropertyResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.GetTelemetryPropertyResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTelemetryPropertyResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.GetTelemetryPropertyResponse.Result.TelemetryProperty data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetTelemetryPropertyResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.GetTelemetryPropertyResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .grpc_cli.GetTelemetryPropertyResponse.Result.TelemetryProperty data = 2;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.GetTelemetryPropertyResponse.Result)
  return target;
}

size_t GetTelemetryPropertyResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.GetTelemetryPropertyResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .grpc_cli.GetTelemetryPropertyResponse.Result.TelemetryProperty data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTelemetryPropertyResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.GetTelemetryPropertyResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTelemetryPropertyResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetTelemetryPropertyResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.GetTelemetryPropertyResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.GetTelemetryPropertyResponse.Result)
    MergeFrom(*source);
  }
}

void GetTelemetryPropertyResponse_Result::MergeFrom(const GetTelemetryPropertyResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.GetTelemetryPropertyResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
  if (from.has_data()) {
    _internal_mutable_data()->::grpc_cli::GetTelemetryPropertyResponse_Result_TelemetryProperty::MergeFrom(from._internal_data());
  }
}

void GetTelemetryPropertyResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.GetTelemetryPropertyResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTelemetryPropertyResponse_Result::CopyFrom(const GetTelemetryPropertyResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.GetTelemetryPropertyResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTelemetryPropertyResponse_Result::IsInitialized() const {
  return true;
}

void GetTelemetryPropertyResponse_Result::InternalSwap(GetTelemetryPropertyResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetTelemetryPropertyResponse_Result, data_)
      + sizeof(GetTelemetryPropertyResponse_Result::data_)
      - PROTOBUF_FIELD_OFFSET(GetTelemetryPropertyResponse_Result, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTelemetryPropertyResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetTelemetryPropertyResponse::_Internal {
 public:
  static const ::grpc_cli::GetTelemetryPropertyResponse_Result& result(const GetTelemetryPropertyResponse* msg);
  static const ::grpc_cli::PosInfo& info(const GetTelemetryPropertyResponse* msg);
};

const ::grpc_cli::GetTelemetryPropertyResponse_Result&
GetTelemetryPropertyResponse::_Internal::result(const GetTelemetryPropertyResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
GetTelemetryPropertyResponse::_Internal::info(const GetTelemetryPropertyResponse* msg) {
  return *msg->info_;
}
GetTelemetryPropertyResponse::GetTelemetryPropertyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.GetTelemetryPropertyResponse)
}
GetTelemetryPropertyResponse::GetTelemetryPropertyResponse(const GetTelemetryPropertyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::GetTelemetryPropertyResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.GetTelemetryPropertyResponse)
}

void GetTelemetryPropertyResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

GetTelemetryPropertyResponse::~GetTelemetryPropertyResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.GetTelemetryPropertyResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetTelemetryPropertyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void GetTelemetryPropertyResponse::ArenaDtor(void* object) {
  GetTelemetryPropertyResponse* _this = reinterpret_cast< GetTelemetryPropertyResponse* >(object);
  (void)_this;
}
void GetTelemetryPropertyResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetTelemetryPropertyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetTelemetryPropertyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.GetTelemetryPropertyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTelemetryPropertyResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.GetTelemetryPropertyResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.GetTelemetryPropertyResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.GetTelemetryPropertyResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetTelemetryPropertyResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.GetTelemetryPropertyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.GetTelemetryPropertyResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.GetTelemetryPropertyResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.GetTelemetryPropertyResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.GetTelemetryPropertyResponse)
  return target;
}

size_t GetTelemetryPropertyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.GetTelemetryPropertyResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.GetTelemetryPropertyResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTelemetryPropertyResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.GetTelemetryPropertyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTelemetryPropertyResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetTelemetryPropertyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.GetTelemetryPropertyResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.GetTelemetryPropertyResponse)
    MergeFrom(*source);
  }
}

void GetTelemetryPropertyResponse::MergeFrom(const GetTelemetryPropertyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.GetTelemetryPropertyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::GetTelemetryPropertyResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void GetTelemetryPropertyResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.GetTelemetryPropertyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTelemetryPropertyResponse::CopyFrom(const GetTelemetryPropertyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.GetTelemetryPropertyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTelemetryPropertyResponse::IsInitialized() const {
  return true;
}

void GetTelemetryPropertyResponse::InternalSwap(GetTelemetryPropertyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetTelemetryPropertyResponse, info_)
      + sizeof(GetTelemetryPropertyResponse::info_)
      - PROTOBUF_FIELD_OFFSET(GetTelemetryPropertyResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTelemetryPropertyResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ResetEventWrrRequest::_Internal {
 public:
};

ResetEventWrrRequest::ResetEventWrrRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ResetEventWrrRequest)
}
ResetEventWrrRequest::ResetEventWrrRequest(const ResetEventWrrRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ResetEventWrrRequest)
}

void ResetEventWrrRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ResetEventWrrRequest::~ResetEventWrrRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.ResetEventWrrRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResetEventWrrRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResetEventWrrRequest::ArenaDtor(void* object) {
  ResetEventWrrRequest* _this = reinterpret_cast< ResetEventWrrRequest* >(object);
  (void)_this;
}
void ResetEventWrrRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResetEventWrrRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResetEventWrrRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ResetEventWrrRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResetEventWrrRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ResetEventWrrRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ResetEventWrrRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ResetEventWrrRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResetEventWrrRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ResetEventWrrRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ResetEventWrrRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ResetEventWrrRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ResetEventWrrRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ResetEventWrrRequest)
  return target;
}

size_t ResetEventWrrRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ResetEventWrrRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetEventWrrRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ResetEventWrrRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetEventWrrRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResetEventWrrRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ResetEventWrrRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ResetEventWrrRequest)
    MergeFrom(*source);
  }
}

void ResetEventWrrRequest::MergeFrom(const ResetEventWrrRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ResetEventWrrRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
}

void ResetEventWrrRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ResetEventWrrRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetEventWrrRequest::CopyFrom(const ResetEventWrrRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ResetEventWrrRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetEventWrrRequest::IsInitialized() const {
  return true;
}

void ResetEventWrrRequest::InternalSwap(ResetEventWrrRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ResetEventWrrRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ResetEventWrrResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const ResetEventWrrResponse_Result* msg);
};

const ::grpc_cli::Status&
ResetEventWrrResponse_Result::_Internal::status(const ResetEventWrrResponse_Result* msg) {
  return *msg->status_;
}
ResetEventWrrResponse_Result::ResetEventWrrResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ResetEventWrrResponse.Result)
}
ResetEventWrrResponse_Result::ResetEventWrrResponse_Result(const ResetEventWrrResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ResetEventWrrResponse.Result)
}

void ResetEventWrrResponse_Result::SharedCtor() {
status_ = nullptr;
}

ResetEventWrrResponse_Result::~ResetEventWrrResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.ResetEventWrrResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResetEventWrrResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void ResetEventWrrResponse_Result::ArenaDtor(void* object) {
  ResetEventWrrResponse_Result* _this = reinterpret_cast< ResetEventWrrResponse_Result* >(object);
  (void)_this;
}
void ResetEventWrrResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResetEventWrrResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResetEventWrrResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ResetEventWrrResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResetEventWrrResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResetEventWrrResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ResetEventWrrResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ResetEventWrrResponse.Result)
  return target;
}

size_t ResetEventWrrResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ResetEventWrrResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetEventWrrResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ResetEventWrrResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetEventWrrResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResetEventWrrResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ResetEventWrrResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ResetEventWrrResponse.Result)
    MergeFrom(*source);
  }
}

void ResetEventWrrResponse_Result::MergeFrom(const ResetEventWrrResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ResetEventWrrResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void ResetEventWrrResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ResetEventWrrResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetEventWrrResponse_Result::CopyFrom(const ResetEventWrrResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ResetEventWrrResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetEventWrrResponse_Result::IsInitialized() const {
  return true;
}

void ResetEventWrrResponse_Result::InternalSwap(ResetEventWrrResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResetEventWrrResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ResetEventWrrResponse::_Internal {
 public:
  static const ::grpc_cli::ResetEventWrrResponse_Result& result(const ResetEventWrrResponse* msg);
  static const ::grpc_cli::PosInfo& info(const ResetEventWrrResponse* msg);
};

const ::grpc_cli::ResetEventWrrResponse_Result&
ResetEventWrrResponse::_Internal::result(const ResetEventWrrResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
ResetEventWrrResponse::_Internal::info(const ResetEventWrrResponse* msg) {
  return *msg->info_;
}
ResetEventWrrResponse::ResetEventWrrResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ResetEventWrrResponse)
}
ResetEventWrrResponse::ResetEventWrrResponse(const ResetEventWrrResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::ResetEventWrrResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ResetEventWrrResponse)
}

void ResetEventWrrResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

ResetEventWrrResponse::~ResetEventWrrResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.ResetEventWrrResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResetEventWrrResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void ResetEventWrrResponse::ArenaDtor(void* object) {
  ResetEventWrrResponse* _this = reinterpret_cast< ResetEventWrrResponse* >(object);
  (void)_this;
}
void ResetEventWrrResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResetEventWrrResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResetEventWrrResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ResetEventWrrResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResetEventWrrResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ResetEventWrrResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ResetEventWrrResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ResetEventWrrResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResetEventWrrResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ResetEventWrrResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ResetEventWrrResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ResetEventWrrResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.ResetEventWrrResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ResetEventWrrResponse)
  return target;
}

size_t ResetEventWrrResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ResetEventWrrResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.ResetEventWrrResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetEventWrrResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ResetEventWrrResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetEventWrrResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResetEventWrrResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ResetEventWrrResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ResetEventWrrResponse)
    MergeFrom(*source);
  }
}

void ResetEventWrrResponse::MergeFrom(const ResetEventWrrResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ResetEventWrrResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::ResetEventWrrResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void ResetEventWrrResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ResetEventWrrResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetEventWrrResponse::CopyFrom(const ResetEventWrrResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ResetEventWrrResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetEventWrrResponse::IsInitialized() const {
  return true;
}

void ResetEventWrrResponse::InternalSwap(ResetEventWrrResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResetEventWrrResponse, info_)
      + sizeof(ResetEventWrrResponse::info_)
      - PROTOBUF_FIELD_OFFSET(ResetEventWrrResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResetEventWrrResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ResetMbrRequest::_Internal {
 public:
};

ResetMbrRequest::ResetMbrRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ResetMbrRequest)
}
ResetMbrRequest::ResetMbrRequest(const ResetMbrRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ResetMbrRequest)
}

void ResetMbrRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ResetMbrRequest::~ResetMbrRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.ResetMbrRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResetMbrRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResetMbrRequest::ArenaDtor(void* object) {
  ResetMbrRequest* _this = reinterpret_cast< ResetMbrRequest* >(object);
  (void)_this;
}
void ResetMbrRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResetMbrRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResetMbrRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ResetMbrRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResetMbrRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ResetMbrRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ResetMbrRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ResetMbrRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResetMbrRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ResetMbrRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ResetMbrRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ResetMbrRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ResetMbrRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ResetMbrRequest)
  return target;
}

size_t ResetMbrRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ResetMbrRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetMbrRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ResetMbrRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetMbrRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResetMbrRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ResetMbrRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ResetMbrRequest)
    MergeFrom(*source);
  }
}

void ResetMbrRequest::MergeFrom(const ResetMbrRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ResetMbrRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
}

void ResetMbrRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ResetMbrRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetMbrRequest::CopyFrom(const ResetMbrRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ResetMbrRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetMbrRequest::IsInitialized() const {
  return true;
}

void ResetMbrRequest::InternalSwap(ResetMbrRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ResetMbrRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ResetMbrResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const ResetMbrResponse_Result* msg);
};

const ::grpc_cli::Status&
ResetMbrResponse_Result::_Internal::status(const ResetMbrResponse_Result* msg) {
  return *msg->status_;
}
ResetMbrResponse_Result::ResetMbrResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ResetMbrResponse.Result)
}
ResetMbrResponse_Result::ResetMbrResponse_Result(const ResetMbrResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ResetMbrResponse.Result)
}

void ResetMbrResponse_Result::SharedCtor() {
status_ = nullptr;
}

ResetMbrResponse_Result::~ResetMbrResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.ResetMbrResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResetMbrResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void ResetMbrResponse_Result::ArenaDtor(void* object) {
  ResetMbrResponse_Result* _this = reinterpret_cast< ResetMbrResponse_Result* >(object);
  (void)_this;
}
void ResetMbrResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResetMbrResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResetMbrResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ResetMbrResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResetMbrResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResetMbrResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ResetMbrResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ResetMbrResponse.Result)
  return target;
}

size_t ResetMbrResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ResetMbrResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetMbrResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ResetMbrResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetMbrResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResetMbrResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ResetMbrResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ResetMbrResponse.Result)
    MergeFrom(*source);
  }
}

void ResetMbrResponse_Result::MergeFrom(const ResetMbrResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ResetMbrResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void ResetMbrResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ResetMbrResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetMbrResponse_Result::CopyFrom(const ResetMbrResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ResetMbrResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetMbrResponse_Result::IsInitialized() const {
  return true;
}

void ResetMbrResponse_Result::InternalSwap(ResetMbrResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResetMbrResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ResetMbrResponse::_Internal {
 public:
  static const ::grpc_cli::ResetMbrResponse_Result& result(const ResetMbrResponse* msg);
  static const ::grpc_cli::PosInfo& info(const ResetMbrResponse* msg);
};

const ::grpc_cli::ResetMbrResponse_Result&
ResetMbrResponse::_Internal::result(const ResetMbrResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
ResetMbrResponse::_Internal::info(const ResetMbrResponse* msg) {
  return *msg->info_;
}
ResetMbrResponse::ResetMbrResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ResetMbrResponse)
}
ResetMbrResponse::ResetMbrResponse(const ResetMbrResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::ResetMbrResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ResetMbrResponse)
}

void ResetMbrResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

ResetMbrResponse::~ResetMbrResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.ResetMbrResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResetMbrResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void ResetMbrResponse::ArenaDtor(void* object) {
  ResetMbrResponse* _this = reinterpret_cast< ResetMbrResponse* >(object);
  (void)_this;
}
void ResetMbrResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResetMbrResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResetMbrResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ResetMbrResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResetMbrResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ResetMbrResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ResetMbrResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ResetMbrResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResetMbrResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ResetMbrResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ResetMbrResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ResetMbrResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.ResetMbrResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ResetMbrResponse)
  return target;
}

size_t ResetMbrResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ResetMbrResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.ResetMbrResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetMbrResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ResetMbrResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetMbrResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResetMbrResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ResetMbrResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ResetMbrResponse)
    MergeFrom(*source);
  }
}

void ResetMbrResponse::MergeFrom(const ResetMbrResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ResetMbrResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::ResetMbrResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void ResetMbrResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ResetMbrResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetMbrResponse::CopyFrom(const ResetMbrResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ResetMbrResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetMbrResponse::IsInitialized() const {
  return true;
}

void ResetMbrResponse::InternalSwap(ResetMbrResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResetMbrResponse, info_)
      + sizeof(ResetMbrResponse::info_)
      - PROTOBUF_FIELD_OFFSET(ResetMbrResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResetMbrResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DumpMemorySnapshotRequest_Param::_Internal {
 public:
};

DumpMemorySnapshotRequest_Param::DumpMemorySnapshotRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.DumpMemorySnapshotRequest.Param)
}
DumpMemorySnapshotRequest_Param::DumpMemorySnapshotRequest_Param(const DumpMemorySnapshotRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.DumpMemorySnapshotRequest.Param)
}

void DumpMemorySnapshotRequest_Param::SharedCtor() {
path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DumpMemorySnapshotRequest_Param::~DumpMemorySnapshotRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.DumpMemorySnapshotRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DumpMemorySnapshotRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DumpMemorySnapshotRequest_Param::ArenaDtor(void* object) {
  DumpMemorySnapshotRequest_Param* _this = reinterpret_cast< DumpMemorySnapshotRequest_Param* >(object);
  (void)_this;
}
void DumpMemorySnapshotRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DumpMemorySnapshotRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DumpMemorySnapshotRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.DumpMemorySnapshotRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DumpMemorySnapshotRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.DumpMemorySnapshotRequest.Param.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DumpMemorySnapshotRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.DumpMemorySnapshotRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.DumpMemorySnapshotRequest.Param.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.DumpMemorySnapshotRequest.Param)
  return target;
}

size_t DumpMemorySnapshotRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.DumpMemorySnapshotRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DumpMemorySnapshotRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.DumpMemorySnapshotRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const DumpMemorySnapshotRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DumpMemorySnapshotRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.DumpMemorySnapshotRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.DumpMemorySnapshotRequest.Param)
    MergeFrom(*source);
  }
}

void DumpMemorySnapshotRequest_Param::MergeFrom(const DumpMemorySnapshotRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.DumpMemorySnapshotRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
}

void DumpMemorySnapshotRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.DumpMemorySnapshotRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DumpMemorySnapshotRequest_Param::CopyFrom(const DumpMemorySnapshotRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.DumpMemorySnapshotRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DumpMemorySnapshotRequest_Param::IsInitialized() const {
  return true;
}

void DumpMemorySnapshotRequest_Param::InternalSwap(DumpMemorySnapshotRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DumpMemorySnapshotRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DumpMemorySnapshotRequest::_Internal {
 public:
  static const ::grpc_cli::DumpMemorySnapshotRequest_Param& param(const DumpMemorySnapshotRequest* msg);
};

const ::grpc_cli::DumpMemorySnapshotRequest_Param&
DumpMemorySnapshotRequest::_Internal::param(const DumpMemorySnapshotRequest* msg) {
  return *msg->param_;
}
DumpMemorySnapshotRequest::DumpMemorySnapshotRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.DumpMemorySnapshotRequest)
}
DumpMemorySnapshotRequest::DumpMemorySnapshotRequest(const DumpMemorySnapshotRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::DumpMemorySnapshotRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.DumpMemorySnapshotRequest)
}

void DumpMemorySnapshotRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

DumpMemorySnapshotRequest::~DumpMemorySnapshotRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.DumpMemorySnapshotRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DumpMemorySnapshotRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void DumpMemorySnapshotRequest::ArenaDtor(void* object) {
  DumpMemorySnapshotRequest* _this = reinterpret_cast< DumpMemorySnapshotRequest* >(object);
  (void)_this;
}
void DumpMemorySnapshotRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DumpMemorySnapshotRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DumpMemorySnapshotRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.DumpMemorySnapshotRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DumpMemorySnapshotRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.DumpMemorySnapshotRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.DumpMemorySnapshotRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.DumpMemorySnapshotRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.DumpMemorySnapshotRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DumpMemorySnapshotRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.DumpMemorySnapshotRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.DumpMemorySnapshotRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.DumpMemorySnapshotRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.DumpMemorySnapshotRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.DumpMemorySnapshotRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.DumpMemorySnapshotRequest)
  return target;
}

size_t DumpMemorySnapshotRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.DumpMemorySnapshotRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.DumpMemorySnapshotRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DumpMemorySnapshotRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.DumpMemorySnapshotRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DumpMemorySnapshotRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DumpMemorySnapshotRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.DumpMemorySnapshotRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.DumpMemorySnapshotRequest)
    MergeFrom(*source);
  }
}

void DumpMemorySnapshotRequest::MergeFrom(const DumpMemorySnapshotRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.DumpMemorySnapshotRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::DumpMemorySnapshotRequest_Param::MergeFrom(from._internal_param());
  }
}

void DumpMemorySnapshotRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.DumpMemorySnapshotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DumpMemorySnapshotRequest::CopyFrom(const DumpMemorySnapshotRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.DumpMemorySnapshotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DumpMemorySnapshotRequest::IsInitialized() const {
  return true;
}

void DumpMemorySnapshotRequest::InternalSwap(DumpMemorySnapshotRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DumpMemorySnapshotRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DumpMemorySnapshotResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const DumpMemorySnapshotResponse_Result* msg);
};

const ::grpc_cli::Status&
DumpMemorySnapshotResponse_Result::_Internal::status(const DumpMemorySnapshotResponse_Result* msg) {
  return *msg->status_;
}
DumpMemorySnapshotResponse_Result::DumpMemorySnapshotResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.DumpMemorySnapshotResponse.Result)
}
DumpMemorySnapshotResponse_Result::DumpMemorySnapshotResponse_Result(const DumpMemorySnapshotResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.DumpMemorySnapshotResponse.Result)
}

void DumpMemorySnapshotResponse_Result::SharedCtor() {
status_ = nullptr;
}

DumpMemorySnapshotResponse_Result::~DumpMemorySnapshotResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.DumpMemorySnapshotResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DumpMemorySnapshotResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void DumpMemorySnapshotResponse_Result::ArenaDtor(void* object) {
  DumpMemorySnapshotResponse_Result* _this = reinterpret_cast< DumpMemorySnapshotResponse_Result* >(object);
  (void)_this;
}
void DumpMemorySnapshotResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DumpMemorySnapshotResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DumpMemorySnapshotResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.DumpMemorySnapshotResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DumpMemorySnapshotResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DumpMemorySnapshotResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.DumpMemorySnapshotResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.DumpMemorySnapshotResponse.Result)
  return target;
}

size_t DumpMemorySnapshotResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.DumpMemorySnapshotResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DumpMemorySnapshotResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.DumpMemorySnapshotResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const DumpMemorySnapshotResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DumpMemorySnapshotResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.DumpMemorySnapshotResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.DumpMemorySnapshotResponse.Result)
    MergeFrom(*source);
  }
}

void DumpMemorySnapshotResponse_Result::MergeFrom(const DumpMemorySnapshotResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.DumpMemorySnapshotResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void DumpMemorySnapshotResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.DumpMemorySnapshotResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DumpMemorySnapshotResponse_Result::CopyFrom(const DumpMemorySnapshotResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.DumpMemorySnapshotResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DumpMemorySnapshotResponse_Result::IsInitialized() const {
  return true;
}

void DumpMemorySnapshotResponse_Result::InternalSwap(DumpMemorySnapshotResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DumpMemorySnapshotResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DumpMemorySnapshotResponse::_Internal {
 public:
  static const ::grpc_cli::DumpMemorySnapshotResponse_Result& result(const DumpMemorySnapshotResponse* msg);
  static const ::grpc_cli::PosInfo& info(const DumpMemorySnapshotResponse* msg);
};

const ::grpc_cli::DumpMemorySnapshotResponse_Result&
DumpMemorySnapshotResponse::_Internal::result(const DumpMemorySnapshotResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
DumpMemorySnapshotResponse::_Internal::info(const DumpMemorySnapshotResponse* msg) {
  return *msg->info_;
}
DumpMemorySnapshotResponse::DumpMemorySnapshotResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.DumpMemorySnapshotResponse)
}
DumpMemorySnapshotResponse::DumpMemorySnapshotResponse(const DumpMemorySnapshotResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::DumpMemorySnapshotResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.DumpMemorySnapshotResponse)
}

void DumpMemorySnapshotResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

DumpMemorySnapshotResponse::~DumpMemorySnapshotResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.DumpMemorySnapshotResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DumpMemorySnapshotResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void DumpMemorySnapshotResponse::ArenaDtor(void* object) {
  DumpMemorySnapshotResponse* _this = reinterpret_cast< DumpMemorySnapshotResponse* >(object);
  (void)_this;
}
void DumpMemorySnapshotResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DumpMemorySnapshotResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DumpMemorySnapshotResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.DumpMemorySnapshotResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DumpMemorySnapshotResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.DumpMemorySnapshotResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.DumpMemorySnapshotResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.DumpMemorySnapshotResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DumpMemorySnapshotResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.DumpMemorySnapshotResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.DumpMemorySnapshotResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.DumpMemorySnapshotResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.DumpMemorySnapshotResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.DumpMemorySnapshotResponse)
  return target;
}

size_t DumpMemorySnapshotResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.DumpMemorySnapshotResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.DumpMemorySnapshotResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DumpMemorySnapshotResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.DumpMemorySnapshotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DumpMemorySnapshotResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DumpMemorySnapshotResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.DumpMemorySnapshotResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.DumpMemorySnapshotResponse)
    MergeFrom(*source);
  }
}

void DumpMemorySnapshotResponse::MergeFrom(const DumpMemorySnapshotResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.DumpMemorySnapshotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::DumpMemorySnapshotResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void DumpMemorySnapshotResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.DumpMemorySnapshotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DumpMemorySnapshotResponse::CopyFrom(const DumpMemorySnapshotResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.DumpMemorySnapshotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DumpMemorySnapshotResponse::IsInitialized() const {
  return true;
}

void DumpMemorySnapshotResponse::InternalSwap(DumpMemorySnapshotResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DumpMemorySnapshotResponse, info_)
      + sizeof(DumpMemorySnapshotResponse::info_)
      - PROTOBUF_FIELD_OFFSET(DumpMemorySnapshotResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DumpMemorySnapshotResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StopRebuildingRequest_Param::_Internal {
 public:
};

StopRebuildingRequest_Param::StopRebuildingRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.StopRebuildingRequest.Param)
}
StopRebuildingRequest_Param::StopRebuildingRequest_Param(const StopRebuildingRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.StopRebuildingRequest.Param)
}

void StopRebuildingRequest_Param::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StopRebuildingRequest_Param::~StopRebuildingRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.StopRebuildingRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopRebuildingRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StopRebuildingRequest_Param::ArenaDtor(void* object) {
  StopRebuildingRequest_Param* _this = reinterpret_cast< StopRebuildingRequest_Param* >(object);
  (void)_this;
}
void StopRebuildingRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopRebuildingRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StopRebuildingRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.StopRebuildingRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopRebuildingRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StopRebuildingRequest.Param.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopRebuildingRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.StopRebuildingRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StopRebuildingRequest.Param.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.StopRebuildingRequest.Param)
  return target;
}

size_t StopRebuildingRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.StopRebuildingRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopRebuildingRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.StopRebuildingRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const StopRebuildingRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopRebuildingRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.StopRebuildingRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.StopRebuildingRequest.Param)
    MergeFrom(*source);
  }
}

void StopRebuildingRequest_Param::MergeFrom(const StopRebuildingRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.StopRebuildingRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void StopRebuildingRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.StopRebuildingRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopRebuildingRequest_Param::CopyFrom(const StopRebuildingRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.StopRebuildingRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopRebuildingRequest_Param::IsInitialized() const {
  return true;
}

void StopRebuildingRequest_Param::InternalSwap(StopRebuildingRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata StopRebuildingRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StopRebuildingRequest::_Internal {
 public:
  static const ::grpc_cli::StopRebuildingRequest_Param& param(const StopRebuildingRequest* msg);
};

const ::grpc_cli::StopRebuildingRequest_Param&
StopRebuildingRequest::_Internal::param(const StopRebuildingRequest* msg) {
  return *msg->param_;
}
StopRebuildingRequest::StopRebuildingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.StopRebuildingRequest)
}
StopRebuildingRequest::StopRebuildingRequest(const StopRebuildingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::StopRebuildingRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.StopRebuildingRequest)
}

void StopRebuildingRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

StopRebuildingRequest::~StopRebuildingRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.StopRebuildingRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopRebuildingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void StopRebuildingRequest::ArenaDtor(void* object) {
  StopRebuildingRequest* _this = reinterpret_cast< StopRebuildingRequest* >(object);
  (void)_this;
}
void StopRebuildingRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopRebuildingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StopRebuildingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.StopRebuildingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopRebuildingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StopRebuildingRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StopRebuildingRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StopRebuildingRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.StopRebuildingRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopRebuildingRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.StopRebuildingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StopRebuildingRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StopRebuildingRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StopRebuildingRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.StopRebuildingRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.StopRebuildingRequest)
  return target;
}

size_t StopRebuildingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.StopRebuildingRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.StopRebuildingRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopRebuildingRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.StopRebuildingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StopRebuildingRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopRebuildingRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.StopRebuildingRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.StopRebuildingRequest)
    MergeFrom(*source);
  }
}

void StopRebuildingRequest::MergeFrom(const StopRebuildingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.StopRebuildingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::StopRebuildingRequest_Param::MergeFrom(from._internal_param());
  }
}

void StopRebuildingRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.StopRebuildingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopRebuildingRequest::CopyFrom(const StopRebuildingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.StopRebuildingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopRebuildingRequest::IsInitialized() const {
  return true;
}

void StopRebuildingRequest::InternalSwap(StopRebuildingRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StopRebuildingRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StopRebuildingResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const StopRebuildingResponse_Result* msg);
};

const ::grpc_cli::Status&
StopRebuildingResponse_Result::_Internal::status(const StopRebuildingResponse_Result* msg) {
  return *msg->status_;
}
StopRebuildingResponse_Result::StopRebuildingResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.StopRebuildingResponse.Result)
}
StopRebuildingResponse_Result::StopRebuildingResponse_Result(const StopRebuildingResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.StopRebuildingResponse.Result)
}

void StopRebuildingResponse_Result::SharedCtor() {
status_ = nullptr;
}

StopRebuildingResponse_Result::~StopRebuildingResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.StopRebuildingResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopRebuildingResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void StopRebuildingResponse_Result::ArenaDtor(void* object) {
  StopRebuildingResponse_Result* _this = reinterpret_cast< StopRebuildingResponse_Result* >(object);
  (void)_this;
}
void StopRebuildingResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopRebuildingResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StopRebuildingResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.StopRebuildingResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopRebuildingResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopRebuildingResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.StopRebuildingResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.StopRebuildingResponse.Result)
  return target;
}

size_t StopRebuildingResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.StopRebuildingResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopRebuildingResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.StopRebuildingResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const StopRebuildingResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopRebuildingResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.StopRebuildingResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.StopRebuildingResponse.Result)
    MergeFrom(*source);
  }
}

void StopRebuildingResponse_Result::MergeFrom(const StopRebuildingResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.StopRebuildingResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void StopRebuildingResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.StopRebuildingResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopRebuildingResponse_Result::CopyFrom(const StopRebuildingResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.StopRebuildingResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopRebuildingResponse_Result::IsInitialized() const {
  return true;
}

void StopRebuildingResponse_Result::InternalSwap(StopRebuildingResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StopRebuildingResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StopRebuildingResponse::_Internal {
 public:
  static const ::grpc_cli::StopRebuildingResponse_Result& result(const StopRebuildingResponse* msg);
  static const ::grpc_cli::PosInfo& info(const StopRebuildingResponse* msg);
};

const ::grpc_cli::StopRebuildingResponse_Result&
StopRebuildingResponse::_Internal::result(const StopRebuildingResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
StopRebuildingResponse::_Internal::info(const StopRebuildingResponse* msg) {
  return *msg->info_;
}
StopRebuildingResponse::StopRebuildingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.StopRebuildingResponse)
}
StopRebuildingResponse::StopRebuildingResponse(const StopRebuildingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::StopRebuildingResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.StopRebuildingResponse)
}

void StopRebuildingResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

StopRebuildingResponse::~StopRebuildingResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.StopRebuildingResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopRebuildingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void StopRebuildingResponse::ArenaDtor(void* object) {
  StopRebuildingResponse* _this = reinterpret_cast< StopRebuildingResponse* >(object);
  (void)_this;
}
void StopRebuildingResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopRebuildingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StopRebuildingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.StopRebuildingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopRebuildingResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StopRebuildingResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StopRebuildingResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.StopRebuildingResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopRebuildingResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.StopRebuildingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StopRebuildingResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StopRebuildingResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.StopRebuildingResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.StopRebuildingResponse)
  return target;
}

size_t StopRebuildingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.StopRebuildingResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.StopRebuildingResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopRebuildingResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.StopRebuildingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StopRebuildingResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopRebuildingResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.StopRebuildingResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.StopRebuildingResponse)
    MergeFrom(*source);
  }
}

void StopRebuildingResponse::MergeFrom(const StopRebuildingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.StopRebuildingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::StopRebuildingResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void StopRebuildingResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.StopRebuildingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopRebuildingResponse::CopyFrom(const StopRebuildingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.StopRebuildingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopRebuildingResponse::IsInitialized() const {
  return true;
}

void StopRebuildingResponse::InternalSwap(StopRebuildingResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StopRebuildingResponse, info_)
      + sizeof(StopRebuildingResponse::info_)
      - PROTOBUF_FIELD_OFFSET(StopRebuildingResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StopRebuildingResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UpdateEventWrrRequest_Param::_Internal {
 public:
};

UpdateEventWrrRequest_Param::UpdateEventWrrRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.UpdateEventWrrRequest.Param)
}
UpdateEventWrrRequest_Param::UpdateEventWrrRequest_Param(const UpdateEventWrrRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  weight_ = from.weight_;
  // @@protoc_insertion_point(copy_constructor:grpc_cli.UpdateEventWrrRequest.Param)
}

void UpdateEventWrrRequest_Param::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
weight_ = PROTOBUF_LONGLONG(0);
}

UpdateEventWrrRequest_Param::~UpdateEventWrrRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.UpdateEventWrrRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateEventWrrRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpdateEventWrrRequest_Param::ArenaDtor(void* object) {
  UpdateEventWrrRequest_Param* _this = reinterpret_cast< UpdateEventWrrRequest_Param* >(object);
  (void)_this;
}
void UpdateEventWrrRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateEventWrrRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateEventWrrRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.UpdateEventWrrRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  weight_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateEventWrrRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.UpdateEventWrrRequest.Param.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 weight = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          weight_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateEventWrrRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.UpdateEventWrrRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.UpdateEventWrrRequest.Param.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // int64 weight = 2;
  if (this->weight() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_weight(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.UpdateEventWrrRequest.Param)
  return target;
}

size_t UpdateEventWrrRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.UpdateEventWrrRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // int64 weight = 2;
  if (this->weight() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_weight());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateEventWrrRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.UpdateEventWrrRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateEventWrrRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateEventWrrRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.UpdateEventWrrRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.UpdateEventWrrRequest.Param)
    MergeFrom(*source);
  }
}

void UpdateEventWrrRequest_Param::MergeFrom(const UpdateEventWrrRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.UpdateEventWrrRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.weight() != 0) {
    _internal_set_weight(from._internal_weight());
  }
}

void UpdateEventWrrRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.UpdateEventWrrRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateEventWrrRequest_Param::CopyFrom(const UpdateEventWrrRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.UpdateEventWrrRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateEventWrrRequest_Param::IsInitialized() const {
  return true;
}

void UpdateEventWrrRequest_Param::InternalSwap(UpdateEventWrrRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(weight_, other->weight_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateEventWrrRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UpdateEventWrrRequest::_Internal {
 public:
  static const ::grpc_cli::UpdateEventWrrRequest_Param& param(const UpdateEventWrrRequest* msg);
};

const ::grpc_cli::UpdateEventWrrRequest_Param&
UpdateEventWrrRequest::_Internal::param(const UpdateEventWrrRequest* msg) {
  return *msg->param_;
}
UpdateEventWrrRequest::UpdateEventWrrRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.UpdateEventWrrRequest)
}
UpdateEventWrrRequest::UpdateEventWrrRequest(const UpdateEventWrrRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::UpdateEventWrrRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.UpdateEventWrrRequest)
}

void UpdateEventWrrRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

UpdateEventWrrRequest::~UpdateEventWrrRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.UpdateEventWrrRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateEventWrrRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void UpdateEventWrrRequest::ArenaDtor(void* object) {
  UpdateEventWrrRequest* _this = reinterpret_cast< UpdateEventWrrRequest* >(object);
  (void)_this;
}
void UpdateEventWrrRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateEventWrrRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateEventWrrRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.UpdateEventWrrRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateEventWrrRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.UpdateEventWrrRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.UpdateEventWrrRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.UpdateEventWrrRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.UpdateEventWrrRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateEventWrrRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.UpdateEventWrrRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.UpdateEventWrrRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.UpdateEventWrrRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.UpdateEventWrrRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.UpdateEventWrrRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.UpdateEventWrrRequest)
  return target;
}

size_t UpdateEventWrrRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.UpdateEventWrrRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.UpdateEventWrrRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateEventWrrRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.UpdateEventWrrRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateEventWrrRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateEventWrrRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.UpdateEventWrrRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.UpdateEventWrrRequest)
    MergeFrom(*source);
  }
}

void UpdateEventWrrRequest::MergeFrom(const UpdateEventWrrRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.UpdateEventWrrRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::UpdateEventWrrRequest_Param::MergeFrom(from._internal_param());
  }
}

void UpdateEventWrrRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.UpdateEventWrrRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateEventWrrRequest::CopyFrom(const UpdateEventWrrRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.UpdateEventWrrRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateEventWrrRequest::IsInitialized() const {
  return true;
}

void UpdateEventWrrRequest::InternalSwap(UpdateEventWrrRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateEventWrrRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UpdateEventWrrResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const UpdateEventWrrResponse_Result* msg);
};

const ::grpc_cli::Status&
UpdateEventWrrResponse_Result::_Internal::status(const UpdateEventWrrResponse_Result* msg) {
  return *msg->status_;
}
UpdateEventWrrResponse_Result::UpdateEventWrrResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.UpdateEventWrrResponse.Result)
}
UpdateEventWrrResponse_Result::UpdateEventWrrResponse_Result(const UpdateEventWrrResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.UpdateEventWrrResponse.Result)
}

void UpdateEventWrrResponse_Result::SharedCtor() {
status_ = nullptr;
}

UpdateEventWrrResponse_Result::~UpdateEventWrrResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.UpdateEventWrrResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateEventWrrResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void UpdateEventWrrResponse_Result::ArenaDtor(void* object) {
  UpdateEventWrrResponse_Result* _this = reinterpret_cast< UpdateEventWrrResponse_Result* >(object);
  (void)_this;
}
void UpdateEventWrrResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateEventWrrResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateEventWrrResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.UpdateEventWrrResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateEventWrrResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateEventWrrResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.UpdateEventWrrResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.UpdateEventWrrResponse.Result)
  return target;
}

size_t UpdateEventWrrResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.UpdateEventWrrResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateEventWrrResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.UpdateEventWrrResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateEventWrrResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateEventWrrResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.UpdateEventWrrResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.UpdateEventWrrResponse.Result)
    MergeFrom(*source);
  }
}

void UpdateEventWrrResponse_Result::MergeFrom(const UpdateEventWrrResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.UpdateEventWrrResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void UpdateEventWrrResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.UpdateEventWrrResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateEventWrrResponse_Result::CopyFrom(const UpdateEventWrrResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.UpdateEventWrrResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateEventWrrResponse_Result::IsInitialized() const {
  return true;
}

void UpdateEventWrrResponse_Result::InternalSwap(UpdateEventWrrResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateEventWrrResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UpdateEventWrrResponse::_Internal {
 public:
  static const ::grpc_cli::UpdateEventWrrResponse_Result& result(const UpdateEventWrrResponse* msg);
  static const ::grpc_cli::PosInfo& info(const UpdateEventWrrResponse* msg);
};

const ::grpc_cli::UpdateEventWrrResponse_Result&
UpdateEventWrrResponse::_Internal::result(const UpdateEventWrrResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
UpdateEventWrrResponse::_Internal::info(const UpdateEventWrrResponse* msg) {
  return *msg->info_;
}
UpdateEventWrrResponse::UpdateEventWrrResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.UpdateEventWrrResponse)
}
UpdateEventWrrResponse::UpdateEventWrrResponse(const UpdateEventWrrResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::UpdateEventWrrResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.UpdateEventWrrResponse)
}

void UpdateEventWrrResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

UpdateEventWrrResponse::~UpdateEventWrrResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.UpdateEventWrrResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateEventWrrResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void UpdateEventWrrResponse::ArenaDtor(void* object) {
  UpdateEventWrrResponse* _this = reinterpret_cast< UpdateEventWrrResponse* >(object);
  (void)_this;
}
void UpdateEventWrrResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateEventWrrResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateEventWrrResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.UpdateEventWrrResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateEventWrrResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.UpdateEventWrrResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.UpdateEventWrrResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.UpdateEventWrrResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateEventWrrResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.UpdateEventWrrResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.UpdateEventWrrResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.UpdateEventWrrResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.UpdateEventWrrResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.UpdateEventWrrResponse)
  return target;
}

size_t UpdateEventWrrResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.UpdateEventWrrResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.UpdateEventWrrResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateEventWrrResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.UpdateEventWrrResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateEventWrrResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateEventWrrResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.UpdateEventWrrResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.UpdateEventWrrResponse)
    MergeFrom(*source);
  }
}

void UpdateEventWrrResponse::MergeFrom(const UpdateEventWrrResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.UpdateEventWrrResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::UpdateEventWrrResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void UpdateEventWrrResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.UpdateEventWrrResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateEventWrrResponse::CopyFrom(const UpdateEventWrrResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.UpdateEventWrrResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateEventWrrResponse::IsInitialized() const {
  return true;
}

void UpdateEventWrrResponse::InternalSwap(UpdateEventWrrResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateEventWrrResponse, info_)
      + sizeof(UpdateEventWrrResponse::info_)
      - PROTOBUF_FIELD_OFFSET(UpdateEventWrrResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateEventWrrResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AddSpareRequest_SpareDeviceName::_Internal {
 public:
};

AddSpareRequest_SpareDeviceName::AddSpareRequest_SpareDeviceName(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.AddSpareRequest.SpareDeviceName)
}
AddSpareRequest_SpareDeviceName::AddSpareRequest_SpareDeviceName(const AddSpareRequest_SpareDeviceName& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  devicename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_devicename().empty()) {
    devicename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_devicename(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.AddSpareRequest.SpareDeviceName)
}

void AddSpareRequest_SpareDeviceName::SharedCtor() {
devicename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddSpareRequest_SpareDeviceName::~AddSpareRequest_SpareDeviceName() {
  // @@protoc_insertion_point(destructor:grpc_cli.AddSpareRequest.SpareDeviceName)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddSpareRequest_SpareDeviceName::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  devicename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddSpareRequest_SpareDeviceName::ArenaDtor(void* object) {
  AddSpareRequest_SpareDeviceName* _this = reinterpret_cast< AddSpareRequest_SpareDeviceName* >(object);
  (void)_this;
}
void AddSpareRequest_SpareDeviceName::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddSpareRequest_SpareDeviceName::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddSpareRequest_SpareDeviceName::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.AddSpareRequest.SpareDeviceName)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  devicename_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddSpareRequest_SpareDeviceName::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string deviceName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_devicename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AddSpareRequest.SpareDeviceName.deviceName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddSpareRequest_SpareDeviceName::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.AddSpareRequest.SpareDeviceName)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string deviceName = 1;
  if (this->devicename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_devicename().data(), static_cast<int>(this->_internal_devicename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AddSpareRequest.SpareDeviceName.deviceName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_devicename(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.AddSpareRequest.SpareDeviceName)
  return target;
}

size_t AddSpareRequest_SpareDeviceName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.AddSpareRequest.SpareDeviceName)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string deviceName = 1;
  if (this->devicename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_devicename());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddSpareRequest_SpareDeviceName::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.AddSpareRequest.SpareDeviceName)
  GOOGLE_DCHECK_NE(&from, this);
  const AddSpareRequest_SpareDeviceName* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddSpareRequest_SpareDeviceName>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.AddSpareRequest.SpareDeviceName)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.AddSpareRequest.SpareDeviceName)
    MergeFrom(*source);
  }
}

void AddSpareRequest_SpareDeviceName::MergeFrom(const AddSpareRequest_SpareDeviceName& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.AddSpareRequest.SpareDeviceName)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.devicename().size() > 0) {
    _internal_set_devicename(from._internal_devicename());
  }
}

void AddSpareRequest_SpareDeviceName::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.AddSpareRequest.SpareDeviceName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddSpareRequest_SpareDeviceName::CopyFrom(const AddSpareRequest_SpareDeviceName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.AddSpareRequest.SpareDeviceName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddSpareRequest_SpareDeviceName::IsInitialized() const {
  return true;
}

void AddSpareRequest_SpareDeviceName::InternalSwap(AddSpareRequest_SpareDeviceName* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  devicename_.Swap(&other->devicename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddSpareRequest_SpareDeviceName::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AddSpareRequest_Param::_Internal {
 public:
};

AddSpareRequest_Param::AddSpareRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  spare_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.AddSpareRequest.Param)
}
AddSpareRequest_Param::AddSpareRequest_Param(const AddSpareRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      spare_(from.spare_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  array_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_array().empty()) {
    array_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_array(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.AddSpareRequest.Param)
}

void AddSpareRequest_Param::SharedCtor() {
array_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddSpareRequest_Param::~AddSpareRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.AddSpareRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddSpareRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  array_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddSpareRequest_Param::ArenaDtor(void* object) {
  AddSpareRequest_Param* _this = reinterpret_cast< AddSpareRequest_Param* >(object);
  (void)_this;
}
void AddSpareRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddSpareRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddSpareRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.AddSpareRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  spare_.Clear();
  array_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddSpareRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string array = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_array();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AddSpareRequest.Param.array"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .grpc_cli.AddSpareRequest.SpareDeviceName spare = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_spare(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddSpareRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.AddSpareRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string array = 1;
  if (this->array().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_array().data(), static_cast<int>(this->_internal_array().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AddSpareRequest.Param.array");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_array(), target);
  }

  // repeated .grpc_cli.AddSpareRequest.SpareDeviceName spare = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_spare_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_spare(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.AddSpareRequest.Param)
  return target;
}

size_t AddSpareRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.AddSpareRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_cli.AddSpareRequest.SpareDeviceName spare = 3;
  total_size += 1UL * this->_internal_spare_size();
  for (const auto& msg : this->spare_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string array = 1;
  if (this->array().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_array());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddSpareRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.AddSpareRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const AddSpareRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddSpareRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.AddSpareRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.AddSpareRequest.Param)
    MergeFrom(*source);
  }
}

void AddSpareRequest_Param::MergeFrom(const AddSpareRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.AddSpareRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  spare_.MergeFrom(from.spare_);
  if (from.array().size() > 0) {
    _internal_set_array(from._internal_array());
  }
}

void AddSpareRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.AddSpareRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddSpareRequest_Param::CopyFrom(const AddSpareRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.AddSpareRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddSpareRequest_Param::IsInitialized() const {
  return true;
}

void AddSpareRequest_Param::InternalSwap(AddSpareRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  spare_.InternalSwap(&other->spare_);
  array_.Swap(&other->array_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddSpareRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AddSpareRequest::_Internal {
 public:
  static const ::grpc_cli::AddSpareRequest_Param& param(const AddSpareRequest* msg);
};

const ::grpc_cli::AddSpareRequest_Param&
AddSpareRequest::_Internal::param(const AddSpareRequest* msg) {
  return *msg->param_;
}
AddSpareRequest::AddSpareRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.AddSpareRequest)
}
AddSpareRequest::AddSpareRequest(const AddSpareRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::AddSpareRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.AddSpareRequest)
}

void AddSpareRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

AddSpareRequest::~AddSpareRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.AddSpareRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddSpareRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void AddSpareRequest::ArenaDtor(void* object) {
  AddSpareRequest* _this = reinterpret_cast< AddSpareRequest* >(object);
  (void)_this;
}
void AddSpareRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddSpareRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddSpareRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.AddSpareRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddSpareRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AddSpareRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AddSpareRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AddSpareRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.AddSpareRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddSpareRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.AddSpareRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AddSpareRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AddSpareRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AddSpareRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.AddSpareRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.AddSpareRequest)
  return target;
}

size_t AddSpareRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.AddSpareRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.AddSpareRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddSpareRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.AddSpareRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddSpareRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddSpareRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.AddSpareRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.AddSpareRequest)
    MergeFrom(*source);
  }
}

void AddSpareRequest::MergeFrom(const AddSpareRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.AddSpareRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::AddSpareRequest_Param::MergeFrom(from._internal_param());
  }
}

void AddSpareRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.AddSpareRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddSpareRequest::CopyFrom(const AddSpareRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.AddSpareRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddSpareRequest::IsInitialized() const {
  return true;
}

void AddSpareRequest::InternalSwap(AddSpareRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddSpareRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AddSpareResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const AddSpareResponse_Result* msg);
};

const ::grpc_cli::Status&
AddSpareResponse_Result::_Internal::status(const AddSpareResponse_Result* msg) {
  return *msg->status_;
}
AddSpareResponse_Result::AddSpareResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.AddSpareResponse.Result)
}
AddSpareResponse_Result::AddSpareResponse_Result(const AddSpareResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.AddSpareResponse.Result)
}

void AddSpareResponse_Result::SharedCtor() {
status_ = nullptr;
}

AddSpareResponse_Result::~AddSpareResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.AddSpareResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddSpareResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void AddSpareResponse_Result::ArenaDtor(void* object) {
  AddSpareResponse_Result* _this = reinterpret_cast< AddSpareResponse_Result* >(object);
  (void)_this;
}
void AddSpareResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddSpareResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddSpareResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.AddSpareResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddSpareResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddSpareResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.AddSpareResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.AddSpareResponse.Result)
  return target;
}

size_t AddSpareResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.AddSpareResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddSpareResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.AddSpareResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const AddSpareResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddSpareResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.AddSpareResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.AddSpareResponse.Result)
    MergeFrom(*source);
  }
}

void AddSpareResponse_Result::MergeFrom(const AddSpareResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.AddSpareResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void AddSpareResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.AddSpareResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddSpareResponse_Result::CopyFrom(const AddSpareResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.AddSpareResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddSpareResponse_Result::IsInitialized() const {
  return true;
}

void AddSpareResponse_Result::InternalSwap(AddSpareResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddSpareResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AddSpareResponse::_Internal {
 public:
  static const ::grpc_cli::AddSpareResponse_Result& result(const AddSpareResponse* msg);
  static const ::grpc_cli::PosInfo& info(const AddSpareResponse* msg);
};

const ::grpc_cli::AddSpareResponse_Result&
AddSpareResponse::_Internal::result(const AddSpareResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
AddSpareResponse::_Internal::info(const AddSpareResponse* msg) {
  return *msg->info_;
}
AddSpareResponse::AddSpareResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.AddSpareResponse)
}
AddSpareResponse::AddSpareResponse(const AddSpareResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::AddSpareResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.AddSpareResponse)
}

void AddSpareResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

AddSpareResponse::~AddSpareResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.AddSpareResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddSpareResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void AddSpareResponse::ArenaDtor(void* object) {
  AddSpareResponse* _this = reinterpret_cast< AddSpareResponse* >(object);
  (void)_this;
}
void AddSpareResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddSpareResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddSpareResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.AddSpareResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddSpareResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AddSpareResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AddSpareResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.AddSpareResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddSpareResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.AddSpareResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AddSpareResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AddSpareResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.AddSpareResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.AddSpareResponse)
  return target;
}

size_t AddSpareResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.AddSpareResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.AddSpareResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddSpareResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.AddSpareResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AddSpareResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddSpareResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.AddSpareResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.AddSpareResponse)
    MergeFrom(*source);
  }
}

void AddSpareResponse::MergeFrom(const AddSpareResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.AddSpareResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::AddSpareResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void AddSpareResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.AddSpareResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddSpareResponse::CopyFrom(const AddSpareResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.AddSpareResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddSpareResponse::IsInitialized() const {
  return true;
}

void AddSpareResponse::InternalSwap(AddSpareResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AddSpareResponse, info_)
      + sizeof(AddSpareResponse::info_)
      - PROTOBUF_FIELD_OFFSET(AddSpareResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AddSpareResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DeviceNameList::_Internal {
 public:
};

DeviceNameList::DeviceNameList(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.DeviceNameList)
}
DeviceNameList::DeviceNameList(const DeviceNameList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  devicename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_devicename().empty()) {
    devicename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_devicename(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.DeviceNameList)
}

void DeviceNameList::SharedCtor() {
devicename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeviceNameList::~DeviceNameList() {
  // @@protoc_insertion_point(destructor:grpc_cli.DeviceNameList)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeviceNameList::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  devicename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeviceNameList::ArenaDtor(void* object) {
  DeviceNameList* _this = reinterpret_cast< DeviceNameList* >(object);
  (void)_this;
}
void DeviceNameList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeviceNameList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeviceNameList::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.DeviceNameList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  devicename_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeviceNameList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string deviceName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_devicename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.DeviceNameList.deviceName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeviceNameList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.DeviceNameList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string deviceName = 1;
  if (this->devicename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_devicename().data(), static_cast<int>(this->_internal_devicename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.DeviceNameList.deviceName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_devicename(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.DeviceNameList)
  return target;
}

size_t DeviceNameList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.DeviceNameList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string deviceName = 1;
  if (this->devicename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_devicename());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeviceNameList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.DeviceNameList)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceNameList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeviceNameList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.DeviceNameList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.DeviceNameList)
    MergeFrom(*source);
  }
}

void DeviceNameList::MergeFrom(const DeviceNameList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.DeviceNameList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.devicename().size() > 0) {
    _internal_set_devicename(from._internal_devicename());
  }
}

void DeviceNameList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.DeviceNameList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceNameList::CopyFrom(const DeviceNameList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.DeviceNameList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceNameList::IsInitialized() const {
  return true;
}

void DeviceNameList::InternalSwap(DeviceNameList* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  devicename_.Swap(&other->devicename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeviceNameList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RemoveSpareRequest_SpareDeviceName::_Internal {
 public:
};

RemoveSpareRequest_SpareDeviceName::RemoveSpareRequest_SpareDeviceName(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.RemoveSpareRequest.SpareDeviceName)
}
RemoveSpareRequest_SpareDeviceName::RemoveSpareRequest_SpareDeviceName(const RemoveSpareRequest_SpareDeviceName& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  devicename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_devicename().empty()) {
    devicename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_devicename(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.RemoveSpareRequest.SpareDeviceName)
}

void RemoveSpareRequest_SpareDeviceName::SharedCtor() {
devicename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveSpareRequest_SpareDeviceName::~RemoveSpareRequest_SpareDeviceName() {
  // @@protoc_insertion_point(destructor:grpc_cli.RemoveSpareRequest.SpareDeviceName)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveSpareRequest_SpareDeviceName::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  devicename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveSpareRequest_SpareDeviceName::ArenaDtor(void* object) {
  RemoveSpareRequest_SpareDeviceName* _this = reinterpret_cast< RemoveSpareRequest_SpareDeviceName* >(object);
  (void)_this;
}
void RemoveSpareRequest_SpareDeviceName::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveSpareRequest_SpareDeviceName::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveSpareRequest_SpareDeviceName::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.RemoveSpareRequest.SpareDeviceName)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  devicename_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveSpareRequest_SpareDeviceName::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string deviceName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_devicename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.RemoveSpareRequest.SpareDeviceName.deviceName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveSpareRequest_SpareDeviceName::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.RemoveSpareRequest.SpareDeviceName)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string deviceName = 1;
  if (this->devicename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_devicename().data(), static_cast<int>(this->_internal_devicename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.RemoveSpareRequest.SpareDeviceName.deviceName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_devicename(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.RemoveSpareRequest.SpareDeviceName)
  return target;
}

size_t RemoveSpareRequest_SpareDeviceName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.RemoveSpareRequest.SpareDeviceName)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string deviceName = 1;
  if (this->devicename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_devicename());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveSpareRequest_SpareDeviceName::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.RemoveSpareRequest.SpareDeviceName)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveSpareRequest_SpareDeviceName* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveSpareRequest_SpareDeviceName>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.RemoveSpareRequest.SpareDeviceName)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.RemoveSpareRequest.SpareDeviceName)
    MergeFrom(*source);
  }
}

void RemoveSpareRequest_SpareDeviceName::MergeFrom(const RemoveSpareRequest_SpareDeviceName& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.RemoveSpareRequest.SpareDeviceName)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.devicename().size() > 0) {
    _internal_set_devicename(from._internal_devicename());
  }
}

void RemoveSpareRequest_SpareDeviceName::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.RemoveSpareRequest.SpareDeviceName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveSpareRequest_SpareDeviceName::CopyFrom(const RemoveSpareRequest_SpareDeviceName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.RemoveSpareRequest.SpareDeviceName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveSpareRequest_SpareDeviceName::IsInitialized() const {
  return true;
}

void RemoveSpareRequest_SpareDeviceName::InternalSwap(RemoveSpareRequest_SpareDeviceName* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  devicename_.Swap(&other->devicename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveSpareRequest_SpareDeviceName::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RemoveSpareRequest_Param::_Internal {
 public:
};

RemoveSpareRequest_Param::RemoveSpareRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  spare_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.RemoveSpareRequest.Param)
}
RemoveSpareRequest_Param::RemoveSpareRequest_Param(const RemoveSpareRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      spare_(from.spare_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  array_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_array().empty()) {
    array_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_array(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.RemoveSpareRequest.Param)
}

void RemoveSpareRequest_Param::SharedCtor() {
array_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveSpareRequest_Param::~RemoveSpareRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.RemoveSpareRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveSpareRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  array_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveSpareRequest_Param::ArenaDtor(void* object) {
  RemoveSpareRequest_Param* _this = reinterpret_cast< RemoveSpareRequest_Param* >(object);
  (void)_this;
}
void RemoveSpareRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveSpareRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveSpareRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.RemoveSpareRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  spare_.Clear();
  array_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveSpareRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string array = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_array();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.RemoveSpareRequest.Param.array"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .grpc_cli.RemoveSpareRequest.SpareDeviceName spare = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_spare(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveSpareRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.RemoveSpareRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string array = 1;
  if (this->array().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_array().data(), static_cast<int>(this->_internal_array().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.RemoveSpareRequest.Param.array");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_array(), target);
  }

  // repeated .grpc_cli.RemoveSpareRequest.SpareDeviceName spare = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_spare_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_spare(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.RemoveSpareRequest.Param)
  return target;
}

size_t RemoveSpareRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.RemoveSpareRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_cli.RemoveSpareRequest.SpareDeviceName spare = 2;
  total_size += 1UL * this->_internal_spare_size();
  for (const auto& msg : this->spare_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string array = 1;
  if (this->array().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_array());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveSpareRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.RemoveSpareRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveSpareRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveSpareRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.RemoveSpareRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.RemoveSpareRequest.Param)
    MergeFrom(*source);
  }
}

void RemoveSpareRequest_Param::MergeFrom(const RemoveSpareRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.RemoveSpareRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  spare_.MergeFrom(from.spare_);
  if (from.array().size() > 0) {
    _internal_set_array(from._internal_array());
  }
}

void RemoveSpareRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.RemoveSpareRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveSpareRequest_Param::CopyFrom(const RemoveSpareRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.RemoveSpareRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveSpareRequest_Param::IsInitialized() const {
  return true;
}

void RemoveSpareRequest_Param::InternalSwap(RemoveSpareRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  spare_.InternalSwap(&other->spare_);
  array_.Swap(&other->array_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveSpareRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RemoveSpareRequest::_Internal {
 public:
  static const ::grpc_cli::RemoveSpareRequest_Param& param(const RemoveSpareRequest* msg);
};

const ::grpc_cli::RemoveSpareRequest_Param&
RemoveSpareRequest::_Internal::param(const RemoveSpareRequest* msg) {
  return *msg->param_;
}
RemoveSpareRequest::RemoveSpareRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.RemoveSpareRequest)
}
RemoveSpareRequest::RemoveSpareRequest(const RemoveSpareRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::RemoveSpareRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.RemoveSpareRequest)
}

void RemoveSpareRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

RemoveSpareRequest::~RemoveSpareRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.RemoveSpareRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveSpareRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void RemoveSpareRequest::ArenaDtor(void* object) {
  RemoveSpareRequest* _this = reinterpret_cast< RemoveSpareRequest* >(object);
  (void)_this;
}
void RemoveSpareRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveSpareRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveSpareRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.RemoveSpareRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveSpareRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.RemoveSpareRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.RemoveSpareRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.RemoveSpareRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.RemoveSpareRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveSpareRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.RemoveSpareRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.RemoveSpareRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.RemoveSpareRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.RemoveSpareRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.RemoveSpareRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.RemoveSpareRequest)
  return target;
}

size_t RemoveSpareRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.RemoveSpareRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.RemoveSpareRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveSpareRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.RemoveSpareRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveSpareRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveSpareRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.RemoveSpareRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.RemoveSpareRequest)
    MergeFrom(*source);
  }
}

void RemoveSpareRequest::MergeFrom(const RemoveSpareRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.RemoveSpareRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::RemoveSpareRequest_Param::MergeFrom(from._internal_param());
  }
}

void RemoveSpareRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.RemoveSpareRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveSpareRequest::CopyFrom(const RemoveSpareRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.RemoveSpareRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveSpareRequest::IsInitialized() const {
  return true;
}

void RemoveSpareRequest::InternalSwap(RemoveSpareRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveSpareRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RemoveSpareResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const RemoveSpareResponse_Result* msg);
};

const ::grpc_cli::Status&
RemoveSpareResponse_Result::_Internal::status(const RemoveSpareResponse_Result* msg) {
  return *msg->status_;
}
RemoveSpareResponse_Result::RemoveSpareResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.RemoveSpareResponse.Result)
}
RemoveSpareResponse_Result::RemoveSpareResponse_Result(const RemoveSpareResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.RemoveSpareResponse.Result)
}

void RemoveSpareResponse_Result::SharedCtor() {
status_ = nullptr;
}

RemoveSpareResponse_Result::~RemoveSpareResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.RemoveSpareResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveSpareResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void RemoveSpareResponse_Result::ArenaDtor(void* object) {
  RemoveSpareResponse_Result* _this = reinterpret_cast< RemoveSpareResponse_Result* >(object);
  (void)_this;
}
void RemoveSpareResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveSpareResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveSpareResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.RemoveSpareResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveSpareResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveSpareResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.RemoveSpareResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.RemoveSpareResponse.Result)
  return target;
}

size_t RemoveSpareResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.RemoveSpareResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveSpareResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.RemoveSpareResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveSpareResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveSpareResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.RemoveSpareResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.RemoveSpareResponse.Result)
    MergeFrom(*source);
  }
}

void RemoveSpareResponse_Result::MergeFrom(const RemoveSpareResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.RemoveSpareResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void RemoveSpareResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.RemoveSpareResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveSpareResponse_Result::CopyFrom(const RemoveSpareResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.RemoveSpareResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveSpareResponse_Result::IsInitialized() const {
  return true;
}

void RemoveSpareResponse_Result::InternalSwap(RemoveSpareResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveSpareResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RemoveSpareResponse::_Internal {
 public:
  static const ::grpc_cli::RemoveSpareResponse_Result& result(const RemoveSpareResponse* msg);
  static const ::grpc_cli::PosInfo& info(const RemoveSpareResponse* msg);
};

const ::grpc_cli::RemoveSpareResponse_Result&
RemoveSpareResponse::_Internal::result(const RemoveSpareResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
RemoveSpareResponse::_Internal::info(const RemoveSpareResponse* msg) {
  return *msg->info_;
}
RemoveSpareResponse::RemoveSpareResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.RemoveSpareResponse)
}
RemoveSpareResponse::RemoveSpareResponse(const RemoveSpareResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::RemoveSpareResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.RemoveSpareResponse)
}

void RemoveSpareResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

RemoveSpareResponse::~RemoveSpareResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.RemoveSpareResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveSpareResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void RemoveSpareResponse::ArenaDtor(void* object) {
  RemoveSpareResponse* _this = reinterpret_cast< RemoveSpareResponse* >(object);
  (void)_this;
}
void RemoveSpareResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveSpareResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveSpareResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.RemoveSpareResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveSpareResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.RemoveSpareResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.RemoveSpareResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.RemoveSpareResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveSpareResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.RemoveSpareResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.RemoveSpareResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.RemoveSpareResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.RemoveSpareResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.RemoveSpareResponse)
  return target;
}

size_t RemoveSpareResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.RemoveSpareResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.RemoveSpareResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveSpareResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.RemoveSpareResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveSpareResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveSpareResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.RemoveSpareResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.RemoveSpareResponse)
    MergeFrom(*source);
  }
}

void RemoveSpareResponse::MergeFrom(const RemoveSpareResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.RemoveSpareResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::RemoveSpareResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void RemoveSpareResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.RemoveSpareResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveSpareResponse::CopyFrom(const RemoveSpareResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.RemoveSpareResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveSpareResponse::IsInitialized() const {
  return true;
}

void RemoveSpareResponse::InternalSwap(RemoveSpareResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RemoveSpareResponse, info_)
      + sizeof(RemoveSpareResponse::info_)
      - PROTOBUF_FIELD_OFFSET(RemoveSpareResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveSpareResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ReplaceArrayDeviceRequest_Param::_Internal {
 public:
};

ReplaceArrayDeviceRequest_Param::ReplaceArrayDeviceRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ReplaceArrayDeviceRequest.Param)
}
ReplaceArrayDeviceRequest_Param::ReplaceArrayDeviceRequest_Param(const ReplaceArrayDeviceRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  array_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_array().empty()) {
    array_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_array(), 
      GetArena());
  }
  device_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_device().empty()) {
    device_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_device(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ReplaceArrayDeviceRequest.Param)
}

void ReplaceArrayDeviceRequest_Param::SharedCtor() {
array_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
device_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ReplaceArrayDeviceRequest_Param::~ReplaceArrayDeviceRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.ReplaceArrayDeviceRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReplaceArrayDeviceRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  array_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  device_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReplaceArrayDeviceRequest_Param::ArenaDtor(void* object) {
  ReplaceArrayDeviceRequest_Param* _this = reinterpret_cast< ReplaceArrayDeviceRequest_Param* >(object);
  (void)_this;
}
void ReplaceArrayDeviceRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReplaceArrayDeviceRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReplaceArrayDeviceRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ReplaceArrayDeviceRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  array_.ClearToEmpty();
  device_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReplaceArrayDeviceRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string array = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_array();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ReplaceArrayDeviceRequest.Param.array"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string device = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_device();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ReplaceArrayDeviceRequest.Param.device"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReplaceArrayDeviceRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ReplaceArrayDeviceRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string array = 1;
  if (this->array().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_array().data(), static_cast<int>(this->_internal_array().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ReplaceArrayDeviceRequest.Param.array");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_array(), target);
  }

  // string device = 2;
  if (this->device().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_device().data(), static_cast<int>(this->_internal_device().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ReplaceArrayDeviceRequest.Param.device");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_device(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ReplaceArrayDeviceRequest.Param)
  return target;
}

size_t ReplaceArrayDeviceRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ReplaceArrayDeviceRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string array = 1;
  if (this->array().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_array());
  }

  // string device = 2;
  if (this->device().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_device());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReplaceArrayDeviceRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ReplaceArrayDeviceRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const ReplaceArrayDeviceRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReplaceArrayDeviceRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ReplaceArrayDeviceRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ReplaceArrayDeviceRequest.Param)
    MergeFrom(*source);
  }
}

void ReplaceArrayDeviceRequest_Param::MergeFrom(const ReplaceArrayDeviceRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ReplaceArrayDeviceRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.array().size() > 0) {
    _internal_set_array(from._internal_array());
  }
  if (from.device().size() > 0) {
    _internal_set_device(from._internal_device());
  }
}

void ReplaceArrayDeviceRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ReplaceArrayDeviceRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReplaceArrayDeviceRequest_Param::CopyFrom(const ReplaceArrayDeviceRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ReplaceArrayDeviceRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplaceArrayDeviceRequest_Param::IsInitialized() const {
  return true;
}

void ReplaceArrayDeviceRequest_Param::InternalSwap(ReplaceArrayDeviceRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  array_.Swap(&other->array_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  device_.Swap(&other->device_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ReplaceArrayDeviceRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ReplaceArrayDeviceRequest::_Internal {
 public:
  static const ::grpc_cli::ReplaceArrayDeviceRequest_Param& param(const ReplaceArrayDeviceRequest* msg);
};

const ::grpc_cli::ReplaceArrayDeviceRequest_Param&
ReplaceArrayDeviceRequest::_Internal::param(const ReplaceArrayDeviceRequest* msg) {
  return *msg->param_;
}
ReplaceArrayDeviceRequest::ReplaceArrayDeviceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ReplaceArrayDeviceRequest)
}
ReplaceArrayDeviceRequest::ReplaceArrayDeviceRequest(const ReplaceArrayDeviceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::ReplaceArrayDeviceRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ReplaceArrayDeviceRequest)
}

void ReplaceArrayDeviceRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

ReplaceArrayDeviceRequest::~ReplaceArrayDeviceRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.ReplaceArrayDeviceRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReplaceArrayDeviceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void ReplaceArrayDeviceRequest::ArenaDtor(void* object) {
  ReplaceArrayDeviceRequest* _this = reinterpret_cast< ReplaceArrayDeviceRequest* >(object);
  (void)_this;
}
void ReplaceArrayDeviceRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReplaceArrayDeviceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReplaceArrayDeviceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ReplaceArrayDeviceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReplaceArrayDeviceRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ReplaceArrayDeviceRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ReplaceArrayDeviceRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ReplaceArrayDeviceRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ReplaceArrayDeviceRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReplaceArrayDeviceRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ReplaceArrayDeviceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ReplaceArrayDeviceRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ReplaceArrayDeviceRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ReplaceArrayDeviceRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.ReplaceArrayDeviceRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ReplaceArrayDeviceRequest)
  return target;
}

size_t ReplaceArrayDeviceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ReplaceArrayDeviceRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.ReplaceArrayDeviceRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReplaceArrayDeviceRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ReplaceArrayDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReplaceArrayDeviceRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReplaceArrayDeviceRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ReplaceArrayDeviceRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ReplaceArrayDeviceRequest)
    MergeFrom(*source);
  }
}

void ReplaceArrayDeviceRequest::MergeFrom(const ReplaceArrayDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ReplaceArrayDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::ReplaceArrayDeviceRequest_Param::MergeFrom(from._internal_param());
  }
}

void ReplaceArrayDeviceRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ReplaceArrayDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReplaceArrayDeviceRequest::CopyFrom(const ReplaceArrayDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ReplaceArrayDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplaceArrayDeviceRequest::IsInitialized() const {
  return true;
}

void ReplaceArrayDeviceRequest::InternalSwap(ReplaceArrayDeviceRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReplaceArrayDeviceRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ReplaceArrayDeviceResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const ReplaceArrayDeviceResponse_Result* msg);
};

const ::grpc_cli::Status&
ReplaceArrayDeviceResponse_Result::_Internal::status(const ReplaceArrayDeviceResponse_Result* msg) {
  return *msg->status_;
}
ReplaceArrayDeviceResponse_Result::ReplaceArrayDeviceResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ReplaceArrayDeviceResponse.Result)
}
ReplaceArrayDeviceResponse_Result::ReplaceArrayDeviceResponse_Result(const ReplaceArrayDeviceResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ReplaceArrayDeviceResponse.Result)
}

void ReplaceArrayDeviceResponse_Result::SharedCtor() {
status_ = nullptr;
}

ReplaceArrayDeviceResponse_Result::~ReplaceArrayDeviceResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.ReplaceArrayDeviceResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReplaceArrayDeviceResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void ReplaceArrayDeviceResponse_Result::ArenaDtor(void* object) {
  ReplaceArrayDeviceResponse_Result* _this = reinterpret_cast< ReplaceArrayDeviceResponse_Result* >(object);
  (void)_this;
}
void ReplaceArrayDeviceResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReplaceArrayDeviceResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReplaceArrayDeviceResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ReplaceArrayDeviceResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReplaceArrayDeviceResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReplaceArrayDeviceResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ReplaceArrayDeviceResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ReplaceArrayDeviceResponse.Result)
  return target;
}

size_t ReplaceArrayDeviceResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ReplaceArrayDeviceResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReplaceArrayDeviceResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ReplaceArrayDeviceResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const ReplaceArrayDeviceResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReplaceArrayDeviceResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ReplaceArrayDeviceResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ReplaceArrayDeviceResponse.Result)
    MergeFrom(*source);
  }
}

void ReplaceArrayDeviceResponse_Result::MergeFrom(const ReplaceArrayDeviceResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ReplaceArrayDeviceResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void ReplaceArrayDeviceResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ReplaceArrayDeviceResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReplaceArrayDeviceResponse_Result::CopyFrom(const ReplaceArrayDeviceResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ReplaceArrayDeviceResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplaceArrayDeviceResponse_Result::IsInitialized() const {
  return true;
}

void ReplaceArrayDeviceResponse_Result::InternalSwap(ReplaceArrayDeviceResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReplaceArrayDeviceResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ReplaceArrayDeviceResponse::_Internal {
 public:
  static const ::grpc_cli::ReplaceArrayDeviceResponse_Result& result(const ReplaceArrayDeviceResponse* msg);
  static const ::grpc_cli::PosInfo& info(const ReplaceArrayDeviceResponse* msg);
};

const ::grpc_cli::ReplaceArrayDeviceResponse_Result&
ReplaceArrayDeviceResponse::_Internal::result(const ReplaceArrayDeviceResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
ReplaceArrayDeviceResponse::_Internal::info(const ReplaceArrayDeviceResponse* msg) {
  return *msg->info_;
}
ReplaceArrayDeviceResponse::ReplaceArrayDeviceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ReplaceArrayDeviceResponse)
}
ReplaceArrayDeviceResponse::ReplaceArrayDeviceResponse(const ReplaceArrayDeviceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::ReplaceArrayDeviceResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ReplaceArrayDeviceResponse)
}

void ReplaceArrayDeviceResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

ReplaceArrayDeviceResponse::~ReplaceArrayDeviceResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.ReplaceArrayDeviceResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReplaceArrayDeviceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void ReplaceArrayDeviceResponse::ArenaDtor(void* object) {
  ReplaceArrayDeviceResponse* _this = reinterpret_cast< ReplaceArrayDeviceResponse* >(object);
  (void)_this;
}
void ReplaceArrayDeviceResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReplaceArrayDeviceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReplaceArrayDeviceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ReplaceArrayDeviceResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReplaceArrayDeviceResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ReplaceArrayDeviceResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ReplaceArrayDeviceResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ReplaceArrayDeviceResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReplaceArrayDeviceResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ReplaceArrayDeviceResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ReplaceArrayDeviceResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ReplaceArrayDeviceResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.ReplaceArrayDeviceResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ReplaceArrayDeviceResponse)
  return target;
}

size_t ReplaceArrayDeviceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ReplaceArrayDeviceResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.ReplaceArrayDeviceResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReplaceArrayDeviceResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ReplaceArrayDeviceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ReplaceArrayDeviceResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReplaceArrayDeviceResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ReplaceArrayDeviceResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ReplaceArrayDeviceResponse)
    MergeFrom(*source);
  }
}

void ReplaceArrayDeviceResponse::MergeFrom(const ReplaceArrayDeviceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ReplaceArrayDeviceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::ReplaceArrayDeviceResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void ReplaceArrayDeviceResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ReplaceArrayDeviceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReplaceArrayDeviceResponse::CopyFrom(const ReplaceArrayDeviceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ReplaceArrayDeviceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplaceArrayDeviceResponse::IsInitialized() const {
  return true;
}

void ReplaceArrayDeviceResponse::InternalSwap(ReplaceArrayDeviceResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReplaceArrayDeviceResponse, info_)
      + sizeof(ReplaceArrayDeviceResponse::info_)
      - PROTOBUF_FIELD_OFFSET(ReplaceArrayDeviceResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReplaceArrayDeviceResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateArrayRequest_Param::_Internal {
 public:
};

CreateArrayRequest_Param::CreateArrayRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  buffer_(arena),
  data_(arena),
  spare_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.CreateArrayRequest.Param)
}
CreateArrayRequest_Param::CreateArrayRequest_Param(const CreateArrayRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      buffer_(from.buffer_),
      data_(from.data_),
      spare_(from.spare_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  raidtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_raidtype().empty()) {
    raidtype_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_raidtype(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.CreateArrayRequest.Param)
}

void CreateArrayRequest_Param::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
raidtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CreateArrayRequest_Param::~CreateArrayRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.CreateArrayRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateArrayRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  raidtype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateArrayRequest_Param::ArenaDtor(void* object) {
  CreateArrayRequest_Param* _this = reinterpret_cast< CreateArrayRequest_Param* >(object);
  (void)_this;
}
void CreateArrayRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateArrayRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateArrayRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.CreateArrayRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  buffer_.Clear();
  data_.Clear();
  spare_.Clear();
  name_.ClearToEmpty();
  raidtype_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateArrayRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateArrayRequest.Param.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .grpc_cli.DeviceNameList buffer = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_buffer(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .grpc_cli.DeviceNameList data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .grpc_cli.DeviceNameList spare = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_spare(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // string raidtype = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_raidtype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateArrayRequest.Param.raidtype"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateArrayRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.CreateArrayRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateArrayRequest.Param.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // repeated .grpc_cli.DeviceNameList buffer = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_buffer_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_buffer(i), target, stream);
  }

  // repeated .grpc_cli.DeviceNameList data = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_data(i), target, stream);
  }

  // repeated .grpc_cli.DeviceNameList spare = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_spare_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_spare(i), target, stream);
  }

  // string raidtype = 5;
  if (this->raidtype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_raidtype().data(), static_cast<int>(this->_internal_raidtype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateArrayRequest.Param.raidtype");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_raidtype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.CreateArrayRequest.Param)
  return target;
}

size_t CreateArrayRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.CreateArrayRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_cli.DeviceNameList buffer = 2;
  total_size += 1UL * this->_internal_buffer_size();
  for (const auto& msg : this->buffer_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .grpc_cli.DeviceNameList data = 3;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .grpc_cli.DeviceNameList spare = 4;
  total_size += 1UL * this->_internal_spare_size();
  for (const auto& msg : this->spare_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string raidtype = 5;
  if (this->raidtype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_raidtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateArrayRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.CreateArrayRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateArrayRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateArrayRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.CreateArrayRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.CreateArrayRequest.Param)
    MergeFrom(*source);
  }
}

void CreateArrayRequest_Param::MergeFrom(const CreateArrayRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.CreateArrayRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  buffer_.MergeFrom(from.buffer_);
  data_.MergeFrom(from.data_);
  spare_.MergeFrom(from.spare_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.raidtype().size() > 0) {
    _internal_set_raidtype(from._internal_raidtype());
  }
}

void CreateArrayRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.CreateArrayRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateArrayRequest_Param::CopyFrom(const CreateArrayRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.CreateArrayRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateArrayRequest_Param::IsInitialized() const {
  return true;
}

void CreateArrayRequest_Param::InternalSwap(CreateArrayRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  buffer_.InternalSwap(&other->buffer_);
  data_.InternalSwap(&other->data_);
  spare_.InternalSwap(&other->spare_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  raidtype_.Swap(&other->raidtype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateArrayRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateArrayRequest::_Internal {
 public:
  static const ::grpc_cli::CreateArrayRequest_Param& param(const CreateArrayRequest* msg);
};

const ::grpc_cli::CreateArrayRequest_Param&
CreateArrayRequest::_Internal::param(const CreateArrayRequest* msg) {
  return *msg->param_;
}
CreateArrayRequest::CreateArrayRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.CreateArrayRequest)
}
CreateArrayRequest::CreateArrayRequest(const CreateArrayRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::CreateArrayRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.CreateArrayRequest)
}

void CreateArrayRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

CreateArrayRequest::~CreateArrayRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.CreateArrayRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateArrayRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void CreateArrayRequest::ArenaDtor(void* object) {
  CreateArrayRequest* _this = reinterpret_cast< CreateArrayRequest* >(object);
  (void)_this;
}
void CreateArrayRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateArrayRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateArrayRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.CreateArrayRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateArrayRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateArrayRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateArrayRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateArrayRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.CreateArrayRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateArrayRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.CreateArrayRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateArrayRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateArrayRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateArrayRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.CreateArrayRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.CreateArrayRequest)
  return target;
}

size_t CreateArrayRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.CreateArrayRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.CreateArrayRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateArrayRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.CreateArrayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateArrayRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateArrayRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.CreateArrayRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.CreateArrayRequest)
    MergeFrom(*source);
  }
}

void CreateArrayRequest::MergeFrom(const CreateArrayRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.CreateArrayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::CreateArrayRequest_Param::MergeFrom(from._internal_param());
  }
}

void CreateArrayRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.CreateArrayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateArrayRequest::CopyFrom(const CreateArrayRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.CreateArrayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateArrayRequest::IsInitialized() const {
  return true;
}

void CreateArrayRequest::InternalSwap(CreateArrayRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateArrayRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateArrayResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const CreateArrayResponse_Result* msg);
};

const ::grpc_cli::Status&
CreateArrayResponse_Result::_Internal::status(const CreateArrayResponse_Result* msg) {
  return *msg->status_;
}
CreateArrayResponse_Result::CreateArrayResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.CreateArrayResponse.Result)
}
CreateArrayResponse_Result::CreateArrayResponse_Result(const CreateArrayResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.CreateArrayResponse.Result)
}

void CreateArrayResponse_Result::SharedCtor() {
status_ = nullptr;
}

CreateArrayResponse_Result::~CreateArrayResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.CreateArrayResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateArrayResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void CreateArrayResponse_Result::ArenaDtor(void* object) {
  CreateArrayResponse_Result* _this = reinterpret_cast< CreateArrayResponse_Result* >(object);
  (void)_this;
}
void CreateArrayResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateArrayResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateArrayResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.CreateArrayResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateArrayResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateArrayResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.CreateArrayResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.CreateArrayResponse.Result)
  return target;
}

size_t CreateArrayResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.CreateArrayResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateArrayResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.CreateArrayResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateArrayResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateArrayResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.CreateArrayResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.CreateArrayResponse.Result)
    MergeFrom(*source);
  }
}

void CreateArrayResponse_Result::MergeFrom(const CreateArrayResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.CreateArrayResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void CreateArrayResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.CreateArrayResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateArrayResponse_Result::CopyFrom(const CreateArrayResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.CreateArrayResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateArrayResponse_Result::IsInitialized() const {
  return true;
}

void CreateArrayResponse_Result::InternalSwap(CreateArrayResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateArrayResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateArrayResponse::_Internal {
 public:
  static const ::grpc_cli::CreateArrayResponse_Result& result(const CreateArrayResponse* msg);
  static const ::grpc_cli::PosInfo& info(const CreateArrayResponse* msg);
};

const ::grpc_cli::CreateArrayResponse_Result&
CreateArrayResponse::_Internal::result(const CreateArrayResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
CreateArrayResponse::_Internal::info(const CreateArrayResponse* msg) {
  return *msg->info_;
}
CreateArrayResponse::CreateArrayResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.CreateArrayResponse)
}
CreateArrayResponse::CreateArrayResponse(const CreateArrayResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::CreateArrayResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.CreateArrayResponse)
}

void CreateArrayResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

CreateArrayResponse::~CreateArrayResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.CreateArrayResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateArrayResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void CreateArrayResponse::ArenaDtor(void* object) {
  CreateArrayResponse* _this = reinterpret_cast< CreateArrayResponse* >(object);
  (void)_this;
}
void CreateArrayResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateArrayResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateArrayResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.CreateArrayResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateArrayResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateArrayResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateArrayResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.CreateArrayResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateArrayResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.CreateArrayResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateArrayResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateArrayResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.CreateArrayResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.CreateArrayResponse)
  return target;
}

size_t CreateArrayResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.CreateArrayResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.CreateArrayResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateArrayResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.CreateArrayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateArrayResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateArrayResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.CreateArrayResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.CreateArrayResponse)
    MergeFrom(*source);
  }
}

void CreateArrayResponse::MergeFrom(const CreateArrayResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.CreateArrayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::CreateArrayResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void CreateArrayResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.CreateArrayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateArrayResponse::CopyFrom(const CreateArrayResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.CreateArrayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateArrayResponse::IsInitialized() const {
  return true;
}

void CreateArrayResponse::InternalSwap(CreateArrayResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateArrayResponse, info_)
      + sizeof(CreateArrayResponse::info_)
      - PROTOBUF_FIELD_OFFSET(CreateArrayResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateArrayResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AutocreateArrayRequest_Param::_Internal {
 public:
};

AutocreateArrayRequest_Param::AutocreateArrayRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  buffer_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.AutocreateArrayRequest.Param)
}
AutocreateArrayRequest_Param::AutocreateArrayRequest_Param(const AutocreateArrayRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      buffer_(from.buffer_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  raidtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_raidtype().empty()) {
    raidtype_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_raidtype(), 
      GetArena());
  }
  ::memcpy(&numdata_, &from.numdata_,
    static_cast<size_t>(reinterpret_cast<char*>(&numspare_) -
    reinterpret_cast<char*>(&numdata_)) + sizeof(numspare_));
  // @@protoc_insertion_point(copy_constructor:grpc_cli.AutocreateArrayRequest.Param)
}

void AutocreateArrayRequest_Param::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
raidtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&numdata_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&numspare_) -
    reinterpret_cast<char*>(&numdata_)) + sizeof(numspare_));
}

AutocreateArrayRequest_Param::~AutocreateArrayRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.AutocreateArrayRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AutocreateArrayRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  raidtype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AutocreateArrayRequest_Param::ArenaDtor(void* object) {
  AutocreateArrayRequest_Param* _this = reinterpret_cast< AutocreateArrayRequest_Param* >(object);
  (void)_this;
}
void AutocreateArrayRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AutocreateArrayRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AutocreateArrayRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.AutocreateArrayRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  buffer_.Clear();
  name_.ClearToEmpty();
  raidtype_.ClearToEmpty();
  ::memset(&numdata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&numspare_) -
      reinterpret_cast<char*>(&numdata_)) + sizeof(numspare_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AutocreateArrayRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AutocreateArrayRequest.Param.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .grpc_cli.DeviceNameList buffer = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_buffer(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 numData = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          numdata_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 numSpare = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          numspare_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string raidtype = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_raidtype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AutocreateArrayRequest.Param.raidtype"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AutocreateArrayRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.AutocreateArrayRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AutocreateArrayRequest.Param.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // repeated .grpc_cli.DeviceNameList buffer = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_buffer_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_buffer(i), target, stream);
  }

  // int32 numData = 3;
  if (this->numdata() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_numdata(), target);
  }

  // int32 numSpare = 4;
  if (this->numspare() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_numspare(), target);
  }

  // string raidtype = 5;
  if (this->raidtype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_raidtype().data(), static_cast<int>(this->_internal_raidtype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AutocreateArrayRequest.Param.raidtype");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_raidtype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.AutocreateArrayRequest.Param)
  return target;
}

size_t AutocreateArrayRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.AutocreateArrayRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_cli.DeviceNameList buffer = 2;
  total_size += 1UL * this->_internal_buffer_size();
  for (const auto& msg : this->buffer_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string raidtype = 5;
  if (this->raidtype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_raidtype());
  }

  // int32 numData = 3;
  if (this->numdata() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_numdata());
  }

  // int32 numSpare = 4;
  if (this->numspare() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_numspare());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AutocreateArrayRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.AutocreateArrayRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const AutocreateArrayRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AutocreateArrayRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.AutocreateArrayRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.AutocreateArrayRequest.Param)
    MergeFrom(*source);
  }
}

void AutocreateArrayRequest_Param::MergeFrom(const AutocreateArrayRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.AutocreateArrayRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  buffer_.MergeFrom(from.buffer_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.raidtype().size() > 0) {
    _internal_set_raidtype(from._internal_raidtype());
  }
  if (from.numdata() != 0) {
    _internal_set_numdata(from._internal_numdata());
  }
  if (from.numspare() != 0) {
    _internal_set_numspare(from._internal_numspare());
  }
}

void AutocreateArrayRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.AutocreateArrayRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AutocreateArrayRequest_Param::CopyFrom(const AutocreateArrayRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.AutocreateArrayRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutocreateArrayRequest_Param::IsInitialized() const {
  return true;
}

void AutocreateArrayRequest_Param::InternalSwap(AutocreateArrayRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  buffer_.InternalSwap(&other->buffer_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  raidtype_.Swap(&other->raidtype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AutocreateArrayRequest_Param, numspare_)
      + sizeof(AutocreateArrayRequest_Param::numspare_)
      - PROTOBUF_FIELD_OFFSET(AutocreateArrayRequest_Param, numdata_)>(
          reinterpret_cast<char*>(&numdata_),
          reinterpret_cast<char*>(&other->numdata_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AutocreateArrayRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AutocreateArrayRequest::_Internal {
 public:
  static const ::grpc_cli::AutocreateArrayRequest_Param& param(const AutocreateArrayRequest* msg);
};

const ::grpc_cli::AutocreateArrayRequest_Param&
AutocreateArrayRequest::_Internal::param(const AutocreateArrayRequest* msg) {
  return *msg->param_;
}
AutocreateArrayRequest::AutocreateArrayRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.AutocreateArrayRequest)
}
AutocreateArrayRequest::AutocreateArrayRequest(const AutocreateArrayRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::AutocreateArrayRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.AutocreateArrayRequest)
}

void AutocreateArrayRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

AutocreateArrayRequest::~AutocreateArrayRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.AutocreateArrayRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AutocreateArrayRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void AutocreateArrayRequest::ArenaDtor(void* object) {
  AutocreateArrayRequest* _this = reinterpret_cast< AutocreateArrayRequest* >(object);
  (void)_this;
}
void AutocreateArrayRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AutocreateArrayRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AutocreateArrayRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.AutocreateArrayRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AutocreateArrayRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AutocreateArrayRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AutocreateArrayRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AutocreateArrayRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.AutocreateArrayRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AutocreateArrayRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.AutocreateArrayRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AutocreateArrayRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AutocreateArrayRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AutocreateArrayRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.AutocreateArrayRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.AutocreateArrayRequest)
  return target;
}

size_t AutocreateArrayRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.AutocreateArrayRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.AutocreateArrayRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AutocreateArrayRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.AutocreateArrayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AutocreateArrayRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AutocreateArrayRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.AutocreateArrayRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.AutocreateArrayRequest)
    MergeFrom(*source);
  }
}

void AutocreateArrayRequest::MergeFrom(const AutocreateArrayRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.AutocreateArrayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::AutocreateArrayRequest_Param::MergeFrom(from._internal_param());
  }
}

void AutocreateArrayRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.AutocreateArrayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AutocreateArrayRequest::CopyFrom(const AutocreateArrayRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.AutocreateArrayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutocreateArrayRequest::IsInitialized() const {
  return true;
}

void AutocreateArrayRequest::InternalSwap(AutocreateArrayRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AutocreateArrayRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AutocreateArrayResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const AutocreateArrayResponse_Result* msg);
};

const ::grpc_cli::Status&
AutocreateArrayResponse_Result::_Internal::status(const AutocreateArrayResponse_Result* msg) {
  return *msg->status_;
}
AutocreateArrayResponse_Result::AutocreateArrayResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.AutocreateArrayResponse.Result)
}
AutocreateArrayResponse_Result::AutocreateArrayResponse_Result(const AutocreateArrayResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.AutocreateArrayResponse.Result)
}

void AutocreateArrayResponse_Result::SharedCtor() {
status_ = nullptr;
}

AutocreateArrayResponse_Result::~AutocreateArrayResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.AutocreateArrayResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AutocreateArrayResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void AutocreateArrayResponse_Result::ArenaDtor(void* object) {
  AutocreateArrayResponse_Result* _this = reinterpret_cast< AutocreateArrayResponse_Result* >(object);
  (void)_this;
}
void AutocreateArrayResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AutocreateArrayResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AutocreateArrayResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.AutocreateArrayResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AutocreateArrayResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AutocreateArrayResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.AutocreateArrayResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.AutocreateArrayResponse.Result)
  return target;
}

size_t AutocreateArrayResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.AutocreateArrayResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AutocreateArrayResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.AutocreateArrayResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const AutocreateArrayResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AutocreateArrayResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.AutocreateArrayResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.AutocreateArrayResponse.Result)
    MergeFrom(*source);
  }
}

void AutocreateArrayResponse_Result::MergeFrom(const AutocreateArrayResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.AutocreateArrayResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void AutocreateArrayResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.AutocreateArrayResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AutocreateArrayResponse_Result::CopyFrom(const AutocreateArrayResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.AutocreateArrayResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutocreateArrayResponse_Result::IsInitialized() const {
  return true;
}

void AutocreateArrayResponse_Result::InternalSwap(AutocreateArrayResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AutocreateArrayResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AutocreateArrayResponse::_Internal {
 public:
  static const ::grpc_cli::AutocreateArrayResponse_Result& result(const AutocreateArrayResponse* msg);
  static const ::grpc_cli::PosInfo& info(const AutocreateArrayResponse* msg);
};

const ::grpc_cli::AutocreateArrayResponse_Result&
AutocreateArrayResponse::_Internal::result(const AutocreateArrayResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
AutocreateArrayResponse::_Internal::info(const AutocreateArrayResponse* msg) {
  return *msg->info_;
}
AutocreateArrayResponse::AutocreateArrayResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.AutocreateArrayResponse)
}
AutocreateArrayResponse::AutocreateArrayResponse(const AutocreateArrayResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::AutocreateArrayResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.AutocreateArrayResponse)
}

void AutocreateArrayResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

AutocreateArrayResponse::~AutocreateArrayResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.AutocreateArrayResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AutocreateArrayResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void AutocreateArrayResponse::ArenaDtor(void* object) {
  AutocreateArrayResponse* _this = reinterpret_cast< AutocreateArrayResponse* >(object);
  (void)_this;
}
void AutocreateArrayResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AutocreateArrayResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AutocreateArrayResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.AutocreateArrayResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AutocreateArrayResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AutocreateArrayResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AutocreateArrayResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.AutocreateArrayResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AutocreateArrayResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.AutocreateArrayResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AutocreateArrayResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AutocreateArrayResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.AutocreateArrayResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.AutocreateArrayResponse)
  return target;
}

size_t AutocreateArrayResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.AutocreateArrayResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.AutocreateArrayResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AutocreateArrayResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.AutocreateArrayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AutocreateArrayResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AutocreateArrayResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.AutocreateArrayResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.AutocreateArrayResponse)
    MergeFrom(*source);
  }
}

void AutocreateArrayResponse::MergeFrom(const AutocreateArrayResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.AutocreateArrayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::AutocreateArrayResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void AutocreateArrayResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.AutocreateArrayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AutocreateArrayResponse::CopyFrom(const AutocreateArrayResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.AutocreateArrayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutocreateArrayResponse::IsInitialized() const {
  return true;
}

void AutocreateArrayResponse::InternalSwap(AutocreateArrayResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AutocreateArrayResponse, info_)
      + sizeof(AutocreateArrayResponse::info_)
      - PROTOBUF_FIELD_OFFSET(AutocreateArrayResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AutocreateArrayResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DeleteArrayRequest_Param::_Internal {
 public:
};

DeleteArrayRequest_Param::DeleteArrayRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.DeleteArrayRequest.Param)
}
DeleteArrayRequest_Param::DeleteArrayRequest_Param(const DeleteArrayRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.DeleteArrayRequest.Param)
}

void DeleteArrayRequest_Param::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteArrayRequest_Param::~DeleteArrayRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.DeleteArrayRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteArrayRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteArrayRequest_Param::ArenaDtor(void* object) {
  DeleteArrayRequest_Param* _this = reinterpret_cast< DeleteArrayRequest_Param* >(object);
  (void)_this;
}
void DeleteArrayRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteArrayRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteArrayRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.DeleteArrayRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteArrayRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.DeleteArrayRequest.Param.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteArrayRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.DeleteArrayRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.DeleteArrayRequest.Param.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.DeleteArrayRequest.Param)
  return target;
}

size_t DeleteArrayRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.DeleteArrayRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteArrayRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.DeleteArrayRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteArrayRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteArrayRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.DeleteArrayRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.DeleteArrayRequest.Param)
    MergeFrom(*source);
  }
}

void DeleteArrayRequest_Param::MergeFrom(const DeleteArrayRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.DeleteArrayRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void DeleteArrayRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.DeleteArrayRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteArrayRequest_Param::CopyFrom(const DeleteArrayRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.DeleteArrayRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteArrayRequest_Param::IsInitialized() const {
  return true;
}

void DeleteArrayRequest_Param::InternalSwap(DeleteArrayRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteArrayRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DeleteArrayRequest::_Internal {
 public:
  static const ::grpc_cli::DeleteArrayRequest_Param& param(const DeleteArrayRequest* msg);
};

const ::grpc_cli::DeleteArrayRequest_Param&
DeleteArrayRequest::_Internal::param(const DeleteArrayRequest* msg) {
  return *msg->param_;
}
DeleteArrayRequest::DeleteArrayRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.DeleteArrayRequest)
}
DeleteArrayRequest::DeleteArrayRequest(const DeleteArrayRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::DeleteArrayRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.DeleteArrayRequest)
}

void DeleteArrayRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

DeleteArrayRequest::~DeleteArrayRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.DeleteArrayRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteArrayRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void DeleteArrayRequest::ArenaDtor(void* object) {
  DeleteArrayRequest* _this = reinterpret_cast< DeleteArrayRequest* >(object);
  (void)_this;
}
void DeleteArrayRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteArrayRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteArrayRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.DeleteArrayRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteArrayRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.DeleteArrayRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.DeleteArrayRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.DeleteArrayRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.DeleteArrayRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteArrayRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.DeleteArrayRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.DeleteArrayRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.DeleteArrayRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.DeleteArrayRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.DeleteArrayRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.DeleteArrayRequest)
  return target;
}

size_t DeleteArrayRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.DeleteArrayRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.DeleteArrayRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteArrayRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.DeleteArrayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteArrayRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteArrayRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.DeleteArrayRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.DeleteArrayRequest)
    MergeFrom(*source);
  }
}

void DeleteArrayRequest::MergeFrom(const DeleteArrayRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.DeleteArrayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::DeleteArrayRequest_Param::MergeFrom(from._internal_param());
  }
}

void DeleteArrayRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.DeleteArrayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteArrayRequest::CopyFrom(const DeleteArrayRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.DeleteArrayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteArrayRequest::IsInitialized() const {
  return true;
}

void DeleteArrayRequest::InternalSwap(DeleteArrayRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteArrayRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DeleteArrayResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const DeleteArrayResponse_Result* msg);
};

const ::grpc_cli::Status&
DeleteArrayResponse_Result::_Internal::status(const DeleteArrayResponse_Result* msg) {
  return *msg->status_;
}
DeleteArrayResponse_Result::DeleteArrayResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.DeleteArrayResponse.Result)
}
DeleteArrayResponse_Result::DeleteArrayResponse_Result(const DeleteArrayResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.DeleteArrayResponse.Result)
}

void DeleteArrayResponse_Result::SharedCtor() {
status_ = nullptr;
}

DeleteArrayResponse_Result::~DeleteArrayResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.DeleteArrayResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteArrayResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void DeleteArrayResponse_Result::ArenaDtor(void* object) {
  DeleteArrayResponse_Result* _this = reinterpret_cast< DeleteArrayResponse_Result* >(object);
  (void)_this;
}
void DeleteArrayResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteArrayResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteArrayResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.DeleteArrayResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteArrayResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteArrayResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.DeleteArrayResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.DeleteArrayResponse.Result)
  return target;
}

size_t DeleteArrayResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.DeleteArrayResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteArrayResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.DeleteArrayResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteArrayResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteArrayResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.DeleteArrayResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.DeleteArrayResponse.Result)
    MergeFrom(*source);
  }
}

void DeleteArrayResponse_Result::MergeFrom(const DeleteArrayResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.DeleteArrayResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void DeleteArrayResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.DeleteArrayResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteArrayResponse_Result::CopyFrom(const DeleteArrayResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.DeleteArrayResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteArrayResponse_Result::IsInitialized() const {
  return true;
}

void DeleteArrayResponse_Result::InternalSwap(DeleteArrayResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteArrayResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DeleteArrayResponse::_Internal {
 public:
  static const ::grpc_cli::DeleteArrayResponse_Result& result(const DeleteArrayResponse* msg);
  static const ::grpc_cli::PosInfo& info(const DeleteArrayResponse* msg);
};

const ::grpc_cli::DeleteArrayResponse_Result&
DeleteArrayResponse::_Internal::result(const DeleteArrayResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
DeleteArrayResponse::_Internal::info(const DeleteArrayResponse* msg) {
  return *msg->info_;
}
DeleteArrayResponse::DeleteArrayResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.DeleteArrayResponse)
}
DeleteArrayResponse::DeleteArrayResponse(const DeleteArrayResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::DeleteArrayResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.DeleteArrayResponse)
}

void DeleteArrayResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

DeleteArrayResponse::~DeleteArrayResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.DeleteArrayResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteArrayResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void DeleteArrayResponse::ArenaDtor(void* object) {
  DeleteArrayResponse* _this = reinterpret_cast< DeleteArrayResponse* >(object);
  (void)_this;
}
void DeleteArrayResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteArrayResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteArrayResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.DeleteArrayResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteArrayResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.DeleteArrayResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.DeleteArrayResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.DeleteArrayResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteArrayResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.DeleteArrayResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.DeleteArrayResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.DeleteArrayResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.DeleteArrayResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.DeleteArrayResponse)
  return target;
}

size_t DeleteArrayResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.DeleteArrayResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.DeleteArrayResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteArrayResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.DeleteArrayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteArrayResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteArrayResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.DeleteArrayResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.DeleteArrayResponse)
    MergeFrom(*source);
  }
}

void DeleteArrayResponse::MergeFrom(const DeleteArrayResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.DeleteArrayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::DeleteArrayResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void DeleteArrayResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.DeleteArrayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteArrayResponse::CopyFrom(const DeleteArrayResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.DeleteArrayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteArrayResponse::IsInitialized() const {
  return true;
}

void DeleteArrayResponse::InternalSwap(DeleteArrayResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeleteArrayResponse, info_)
      + sizeof(DeleteArrayResponse::info_)
      - PROTOBUF_FIELD_OFFSET(DeleteArrayResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteArrayResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MountArrayRequest_Param::_Internal {
 public:
  using HasBits = decltype(std::declval<MountArrayRequest_Param>()._has_bits_);
  static void set_has_enablewritethrough(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_targetaddress(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MountArrayRequest_Param::MountArrayRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.MountArrayRequest.Param)
}
MountArrayRequest_Param::MountArrayRequest_Param(const MountArrayRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  targetaddress_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_targetaddress()) {
    targetaddress_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_targetaddress(), 
      GetArena());
  }
  enablewritethrough_ = from.enablewritethrough_;
  // @@protoc_insertion_point(copy_constructor:grpc_cli.MountArrayRequest.Param)
}

void MountArrayRequest_Param::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
targetaddress_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
enablewritethrough_ = false;
}

MountArrayRequest_Param::~MountArrayRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.MountArrayRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MountArrayRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  targetaddress_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MountArrayRequest_Param::ArenaDtor(void* object) {
  MountArrayRequest_Param* _this = reinterpret_cast< MountArrayRequest_Param* >(object);
  (void)_this;
}
void MountArrayRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MountArrayRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MountArrayRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.MountArrayRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    targetaddress_.ClearNonDefaultToEmpty();
  }
  enablewritethrough_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MountArrayRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.MountArrayRequest.Param.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool enableWriteThrough = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_enablewritethrough(&has_bits);
          enablewritethrough_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string targetAddress = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_targetaddress();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.MountArrayRequest.Param.targetAddress"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MountArrayRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.MountArrayRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.MountArrayRequest.Param.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // bool enableWriteThrough = 2;
  if (_internal_has_enablewritethrough()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_enablewritethrough(), target);
  }

  // string targetAddress = 3;
  if (_internal_has_targetaddress()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_targetaddress().data(), static_cast<int>(this->_internal_targetaddress().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.MountArrayRequest.Param.targetAddress");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_targetaddress(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.MountArrayRequest.Param)
  return target;
}

size_t MountArrayRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.MountArrayRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // string targetAddress = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_targetaddress());
    }

    // bool enableWriteThrough = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MountArrayRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.MountArrayRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const MountArrayRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MountArrayRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.MountArrayRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.MountArrayRequest.Param)
    MergeFrom(*source);
  }
}

void MountArrayRequest_Param::MergeFrom(const MountArrayRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.MountArrayRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_targetaddress(from._internal_targetaddress());
    }
    if (cached_has_bits & 0x00000002u) {
      enablewritethrough_ = from.enablewritethrough_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MountArrayRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.MountArrayRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MountArrayRequest_Param::CopyFrom(const MountArrayRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.MountArrayRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MountArrayRequest_Param::IsInitialized() const {
  return true;
}

void MountArrayRequest_Param::InternalSwap(MountArrayRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  targetaddress_.Swap(&other->targetaddress_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(enablewritethrough_, other->enablewritethrough_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MountArrayRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MountArrayRequest::_Internal {
 public:
  static const ::grpc_cli::MountArrayRequest_Param& param(const MountArrayRequest* msg);
};

const ::grpc_cli::MountArrayRequest_Param&
MountArrayRequest::_Internal::param(const MountArrayRequest* msg) {
  return *msg->param_;
}
MountArrayRequest::MountArrayRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.MountArrayRequest)
}
MountArrayRequest::MountArrayRequest(const MountArrayRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::MountArrayRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.MountArrayRequest)
}

void MountArrayRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

MountArrayRequest::~MountArrayRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.MountArrayRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MountArrayRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void MountArrayRequest::ArenaDtor(void* object) {
  MountArrayRequest* _this = reinterpret_cast< MountArrayRequest* >(object);
  (void)_this;
}
void MountArrayRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MountArrayRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MountArrayRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.MountArrayRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MountArrayRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.MountArrayRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.MountArrayRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.MountArrayRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.MountArrayRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MountArrayRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.MountArrayRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.MountArrayRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.MountArrayRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.MountArrayRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.MountArrayRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.MountArrayRequest)
  return target;
}

size_t MountArrayRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.MountArrayRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.MountArrayRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MountArrayRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.MountArrayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MountArrayRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MountArrayRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.MountArrayRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.MountArrayRequest)
    MergeFrom(*source);
  }
}

void MountArrayRequest::MergeFrom(const MountArrayRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.MountArrayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::MountArrayRequest_Param::MergeFrom(from._internal_param());
  }
}

void MountArrayRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.MountArrayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MountArrayRequest::CopyFrom(const MountArrayRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.MountArrayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MountArrayRequest::IsInitialized() const {
  return true;
}

void MountArrayRequest::InternalSwap(MountArrayRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MountArrayRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MountArrayResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const MountArrayResponse_Result* msg);
};

const ::grpc_cli::Status&
MountArrayResponse_Result::_Internal::status(const MountArrayResponse_Result* msg) {
  return *msg->status_;
}
MountArrayResponse_Result::MountArrayResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.MountArrayResponse.Result)
}
MountArrayResponse_Result::MountArrayResponse_Result(const MountArrayResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.MountArrayResponse.Result)
}

void MountArrayResponse_Result::SharedCtor() {
status_ = nullptr;
}

MountArrayResponse_Result::~MountArrayResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.MountArrayResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MountArrayResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void MountArrayResponse_Result::ArenaDtor(void* object) {
  MountArrayResponse_Result* _this = reinterpret_cast< MountArrayResponse_Result* >(object);
  (void)_this;
}
void MountArrayResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MountArrayResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MountArrayResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.MountArrayResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MountArrayResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MountArrayResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.MountArrayResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.MountArrayResponse.Result)
  return target;
}

size_t MountArrayResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.MountArrayResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MountArrayResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.MountArrayResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const MountArrayResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MountArrayResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.MountArrayResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.MountArrayResponse.Result)
    MergeFrom(*source);
  }
}

void MountArrayResponse_Result::MergeFrom(const MountArrayResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.MountArrayResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void MountArrayResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.MountArrayResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MountArrayResponse_Result::CopyFrom(const MountArrayResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.MountArrayResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MountArrayResponse_Result::IsInitialized() const {
  return true;
}

void MountArrayResponse_Result::InternalSwap(MountArrayResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MountArrayResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MountArrayResponse::_Internal {
 public:
  static const ::grpc_cli::MountArrayResponse_Result& result(const MountArrayResponse* msg);
  static const ::grpc_cli::PosInfo& info(const MountArrayResponse* msg);
};

const ::grpc_cli::MountArrayResponse_Result&
MountArrayResponse::_Internal::result(const MountArrayResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
MountArrayResponse::_Internal::info(const MountArrayResponse* msg) {
  return *msg->info_;
}
MountArrayResponse::MountArrayResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.MountArrayResponse)
}
MountArrayResponse::MountArrayResponse(const MountArrayResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::MountArrayResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.MountArrayResponse)
}

void MountArrayResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

MountArrayResponse::~MountArrayResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.MountArrayResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MountArrayResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void MountArrayResponse::ArenaDtor(void* object) {
  MountArrayResponse* _this = reinterpret_cast< MountArrayResponse* >(object);
  (void)_this;
}
void MountArrayResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MountArrayResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MountArrayResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.MountArrayResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MountArrayResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.MountArrayResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.MountArrayResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.MountArrayResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MountArrayResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.MountArrayResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.MountArrayResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.MountArrayResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.MountArrayResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.MountArrayResponse)
  return target;
}

size_t MountArrayResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.MountArrayResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.MountArrayResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MountArrayResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.MountArrayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MountArrayResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MountArrayResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.MountArrayResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.MountArrayResponse)
    MergeFrom(*source);
  }
}

void MountArrayResponse::MergeFrom(const MountArrayResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.MountArrayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::MountArrayResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void MountArrayResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.MountArrayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MountArrayResponse::CopyFrom(const MountArrayResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.MountArrayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MountArrayResponse::IsInitialized() const {
  return true;
}

void MountArrayResponse::InternalSwap(MountArrayResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MountArrayResponse, info_)
      + sizeof(MountArrayResponse::info_)
      - PROTOBUF_FIELD_OFFSET(MountArrayResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MountArrayResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UnmountArrayRequest_Param::_Internal {
 public:
};

UnmountArrayRequest_Param::UnmountArrayRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.UnmountArrayRequest.Param)
}
UnmountArrayRequest_Param::UnmountArrayRequest_Param(const UnmountArrayRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.UnmountArrayRequest.Param)
}

void UnmountArrayRequest_Param::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UnmountArrayRequest_Param::~UnmountArrayRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.UnmountArrayRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UnmountArrayRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UnmountArrayRequest_Param::ArenaDtor(void* object) {
  UnmountArrayRequest_Param* _this = reinterpret_cast< UnmountArrayRequest_Param* >(object);
  (void)_this;
}
void UnmountArrayRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnmountArrayRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UnmountArrayRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.UnmountArrayRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnmountArrayRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.UnmountArrayRequest.Param.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnmountArrayRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.UnmountArrayRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.UnmountArrayRequest.Param.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.UnmountArrayRequest.Param)
  return target;
}

size_t UnmountArrayRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.UnmountArrayRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnmountArrayRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.UnmountArrayRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const UnmountArrayRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnmountArrayRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.UnmountArrayRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.UnmountArrayRequest.Param)
    MergeFrom(*source);
  }
}

void UnmountArrayRequest_Param::MergeFrom(const UnmountArrayRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.UnmountArrayRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void UnmountArrayRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.UnmountArrayRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnmountArrayRequest_Param::CopyFrom(const UnmountArrayRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.UnmountArrayRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnmountArrayRequest_Param::IsInitialized() const {
  return true;
}

void UnmountArrayRequest_Param::InternalSwap(UnmountArrayRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata UnmountArrayRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UnmountArrayRequest::_Internal {
 public:
  static const ::grpc_cli::UnmountArrayRequest_Param& param(const UnmountArrayRequest* msg);
};

const ::grpc_cli::UnmountArrayRequest_Param&
UnmountArrayRequest::_Internal::param(const UnmountArrayRequest* msg) {
  return *msg->param_;
}
UnmountArrayRequest::UnmountArrayRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.UnmountArrayRequest)
}
UnmountArrayRequest::UnmountArrayRequest(const UnmountArrayRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::UnmountArrayRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.UnmountArrayRequest)
}

void UnmountArrayRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

UnmountArrayRequest::~UnmountArrayRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.UnmountArrayRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UnmountArrayRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void UnmountArrayRequest::ArenaDtor(void* object) {
  UnmountArrayRequest* _this = reinterpret_cast< UnmountArrayRequest* >(object);
  (void)_this;
}
void UnmountArrayRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnmountArrayRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UnmountArrayRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.UnmountArrayRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnmountArrayRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.UnmountArrayRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.UnmountArrayRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.UnmountArrayRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.UnmountArrayRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnmountArrayRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.UnmountArrayRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.UnmountArrayRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.UnmountArrayRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.UnmountArrayRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.UnmountArrayRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.UnmountArrayRequest)
  return target;
}

size_t UnmountArrayRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.UnmountArrayRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.UnmountArrayRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnmountArrayRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.UnmountArrayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UnmountArrayRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnmountArrayRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.UnmountArrayRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.UnmountArrayRequest)
    MergeFrom(*source);
  }
}

void UnmountArrayRequest::MergeFrom(const UnmountArrayRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.UnmountArrayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::UnmountArrayRequest_Param::MergeFrom(from._internal_param());
  }
}

void UnmountArrayRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.UnmountArrayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnmountArrayRequest::CopyFrom(const UnmountArrayRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.UnmountArrayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnmountArrayRequest::IsInitialized() const {
  return true;
}

void UnmountArrayRequest::InternalSwap(UnmountArrayRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnmountArrayRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UnmountArrayResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const UnmountArrayResponse_Result* msg);
};

const ::grpc_cli::Status&
UnmountArrayResponse_Result::_Internal::status(const UnmountArrayResponse_Result* msg) {
  return *msg->status_;
}
UnmountArrayResponse_Result::UnmountArrayResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.UnmountArrayResponse.Result)
}
UnmountArrayResponse_Result::UnmountArrayResponse_Result(const UnmountArrayResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.UnmountArrayResponse.Result)
}

void UnmountArrayResponse_Result::SharedCtor() {
status_ = nullptr;
}

UnmountArrayResponse_Result::~UnmountArrayResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.UnmountArrayResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UnmountArrayResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void UnmountArrayResponse_Result::ArenaDtor(void* object) {
  UnmountArrayResponse_Result* _this = reinterpret_cast< UnmountArrayResponse_Result* >(object);
  (void)_this;
}
void UnmountArrayResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnmountArrayResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UnmountArrayResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.UnmountArrayResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnmountArrayResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnmountArrayResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.UnmountArrayResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.UnmountArrayResponse.Result)
  return target;
}

size_t UnmountArrayResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.UnmountArrayResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnmountArrayResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.UnmountArrayResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const UnmountArrayResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnmountArrayResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.UnmountArrayResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.UnmountArrayResponse.Result)
    MergeFrom(*source);
  }
}

void UnmountArrayResponse_Result::MergeFrom(const UnmountArrayResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.UnmountArrayResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void UnmountArrayResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.UnmountArrayResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnmountArrayResponse_Result::CopyFrom(const UnmountArrayResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.UnmountArrayResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnmountArrayResponse_Result::IsInitialized() const {
  return true;
}

void UnmountArrayResponse_Result::InternalSwap(UnmountArrayResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnmountArrayResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UnmountArrayResponse::_Internal {
 public:
  static const ::grpc_cli::UnmountArrayResponse_Result& result(const UnmountArrayResponse* msg);
  static const ::grpc_cli::PosInfo& info(const UnmountArrayResponse* msg);
};

const ::grpc_cli::UnmountArrayResponse_Result&
UnmountArrayResponse::_Internal::result(const UnmountArrayResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
UnmountArrayResponse::_Internal::info(const UnmountArrayResponse* msg) {
  return *msg->info_;
}
UnmountArrayResponse::UnmountArrayResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.UnmountArrayResponse)
}
UnmountArrayResponse::UnmountArrayResponse(const UnmountArrayResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::UnmountArrayResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.UnmountArrayResponse)
}

void UnmountArrayResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

UnmountArrayResponse::~UnmountArrayResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.UnmountArrayResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UnmountArrayResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void UnmountArrayResponse::ArenaDtor(void* object) {
  UnmountArrayResponse* _this = reinterpret_cast< UnmountArrayResponse* >(object);
  (void)_this;
}
void UnmountArrayResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnmountArrayResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UnmountArrayResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.UnmountArrayResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnmountArrayResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.UnmountArrayResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.UnmountArrayResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.UnmountArrayResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnmountArrayResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.UnmountArrayResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.UnmountArrayResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.UnmountArrayResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.UnmountArrayResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.UnmountArrayResponse)
  return target;
}

size_t UnmountArrayResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.UnmountArrayResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.UnmountArrayResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnmountArrayResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.UnmountArrayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UnmountArrayResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnmountArrayResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.UnmountArrayResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.UnmountArrayResponse)
    MergeFrom(*source);
  }
}

void UnmountArrayResponse::MergeFrom(const UnmountArrayResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.UnmountArrayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::UnmountArrayResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void UnmountArrayResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.UnmountArrayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnmountArrayResponse::CopyFrom(const UnmountArrayResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.UnmountArrayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnmountArrayResponse::IsInitialized() const {
  return true;
}

void UnmountArrayResponse::InternalSwap(UnmountArrayResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UnmountArrayResponse, info_)
      + sizeof(UnmountArrayResponse::info_)
      - PROTOBUF_FIELD_OFFSET(UnmountArrayResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UnmountArrayResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Array::_Internal {
 public:
};

Array::Array(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  devicelist_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.Array)
}
Array::Array(const Array& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      devicelist_(from.devicelist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uniqueid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uniqueid().empty()) {
    uniqueid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uniqueid(), 
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArena());
  }
  state_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_state().empty()) {
    state_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_state(), 
      GetArena());
  }
  situation_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_situation().empty()) {
    situation_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_situation(), 
      GetArena());
  }
  createdatetime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_createdatetime().empty()) {
    createdatetime_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_createdatetime(), 
      GetArena());
  }
  updatedatetime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_updatedatetime().empty()) {
    updatedatetime_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_updatedatetime(), 
      GetArena());
  }
  rebuildingprogress_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rebuildingprogress().empty()) {
    rebuildingprogress_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rebuildingprogress(), 
      GetArena());
  }
  gcmode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_gcmode().empty()) {
    gcmode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_gcmode(), 
      GetArena());
  }
  metaraid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_metaraid().empty()) {
    metaraid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_metaraid(), 
      GetArena());
  }
  dataraid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_dataraid().empty()) {
    dataraid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_dataraid(), 
      GetArena());
  }
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&used_) -
    reinterpret_cast<char*>(&index_)) + sizeof(used_));
  // @@protoc_insertion_point(copy_constructor:grpc_cli.Array)
}

void Array::SharedCtor() {
uniqueid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
state_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
situation_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
createdatetime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
updatedatetime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rebuildingprogress_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
gcmode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
metaraid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
dataraid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&index_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&used_) -
    reinterpret_cast<char*>(&index_)) + sizeof(used_));
}

Array::~Array() {
  // @@protoc_insertion_point(destructor:grpc_cli.Array)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Array::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  uniqueid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  state_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  situation_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  createdatetime_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  updatedatetime_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rebuildingprogress_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  gcmode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  metaraid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dataraid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Array::ArenaDtor(void* object) {
  Array* _this = reinterpret_cast< Array* >(object);
  (void)_this;
}
void Array::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Array::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Array::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.Array)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  devicelist_.Clear();
  uniqueid_.ClearToEmpty();
  name_.ClearToEmpty();
  status_.ClearToEmpty();
  state_.ClearToEmpty();
  situation_.ClearToEmpty();
  createdatetime_.ClearToEmpty();
  updatedatetime_.ClearToEmpty();
  rebuildingprogress_.ClearToEmpty();
  gcmode_.ClearToEmpty();
  metaraid_.ClearToEmpty();
  dataraid_.ClearToEmpty();
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&used_) -
      reinterpret_cast<char*>(&index_)) + sizeof(used_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Array::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string uniqueId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_uniqueid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Array.uniqueId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Array.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Array.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string state = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_state();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Array.state"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string situation = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_situation();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Array.situation"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string createDatetime = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_createdatetime();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Array.createDatetime"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string updateDatetime = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_updatedatetime();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Array.updateDatetime"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rebuildingProgress = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_rebuildingprogress();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Array.rebuildingProgress"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 capacity = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          capacity_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 used = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          used_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string gcMode = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_gcmode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Array.gcMode"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string metaRaid = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          auto str = _internal_mutable_metaraid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Array.metaRaid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string dataRaid = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_dataraid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Array.dataRaid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool writeThroughEnabled = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          writethroughenabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .grpc_cli.Device devicelist = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_devicelist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<130>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Array::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.Array)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_index(), target);
  }

  // string uniqueId = 2;
  if (this->uniqueid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uniqueid().data(), static_cast<int>(this->_internal_uniqueid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Array.uniqueId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_uniqueid(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Array.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  // string status = 4;
  if (this->status().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Array.status");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_status(), target);
  }

  // string state = 5;
  if (this->state().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_state().data(), static_cast<int>(this->_internal_state().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Array.state");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_state(), target);
  }

  // string situation = 6;
  if (this->situation().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_situation().data(), static_cast<int>(this->_internal_situation().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Array.situation");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_situation(), target);
  }

  // string createDatetime = 7;
  if (this->createdatetime().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_createdatetime().data(), static_cast<int>(this->_internal_createdatetime().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Array.createDatetime");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_createdatetime(), target);
  }

  // string updateDatetime = 8;
  if (this->updatedatetime().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_updatedatetime().data(), static_cast<int>(this->_internal_updatedatetime().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Array.updateDatetime");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_updatedatetime(), target);
  }

  // string rebuildingProgress = 9;
  if (this->rebuildingprogress().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rebuildingprogress().data(), static_cast<int>(this->_internal_rebuildingprogress().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Array.rebuildingProgress");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_rebuildingprogress(), target);
  }

  // uint64 capacity = 10;
  if (this->capacity() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(10, this->_internal_capacity(), target);
  }

  // uint64 used = 11;
  if (this->used() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(11, this->_internal_used(), target);
  }

  // string gcMode = 12;
  if (this->gcmode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_gcmode().data(), static_cast<int>(this->_internal_gcmode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Array.gcMode");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_gcmode(), target);
  }

  // string metaRaid = 13;
  if (this->metaraid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_metaraid().data(), static_cast<int>(this->_internal_metaraid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Array.metaRaid");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_metaraid(), target);
  }

  // string dataRaid = 14;
  if (this->dataraid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dataraid().data(), static_cast<int>(this->_internal_dataraid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Array.dataRaid");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_dataraid(), target);
  }

  // bool writeThroughEnabled = 15;
  if (this->writethroughenabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(15, this->_internal_writethroughenabled(), target);
  }

  // repeated .grpc_cli.Device devicelist = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_devicelist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(16, this->_internal_devicelist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.Array)
  return target;
}

size_t Array::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.Array)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_cli.Device devicelist = 16;
  total_size += 2UL * this->_internal_devicelist_size();
  for (const auto& msg : this->devicelist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string uniqueId = 2;
  if (this->uniqueid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uniqueid());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string status = 4;
  if (this->status().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // string state = 5;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_state());
  }

  // string situation = 6;
  if (this->situation().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_situation());
  }

  // string createDatetime = 7;
  if (this->createdatetime().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_createdatetime());
  }

  // string updateDatetime = 8;
  if (this->updatedatetime().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_updatedatetime());
  }

  // string rebuildingProgress = 9;
  if (this->rebuildingprogress().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rebuildingprogress());
  }

  // string gcMode = 12;
  if (this->gcmode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_gcmode());
  }

  // string metaRaid = 13;
  if (this->metaraid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_metaraid());
  }

  // string dataRaid = 14;
  if (this->dataraid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dataraid());
  }

  // int32 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_index());
  }

  // bool writeThroughEnabled = 15;
  if (this->writethroughenabled() != 0) {
    total_size += 1 + 1;
  }

  // uint64 capacity = 10;
  if (this->capacity() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_capacity());
  }

  // uint64 used = 11;
  if (this->used() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_used());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Array::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.Array)
  GOOGLE_DCHECK_NE(&from, this);
  const Array* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Array>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.Array)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.Array)
    MergeFrom(*source);
  }
}

void Array::MergeFrom(const Array& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.Array)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  devicelist_.MergeFrom(from.devicelist_);
  if (from.uniqueid().size() > 0) {
    _internal_set_uniqueid(from._internal_uniqueid());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.status().size() > 0) {
    _internal_set_status(from._internal_status());
  }
  if (from.state().size() > 0) {
    _internal_set_state(from._internal_state());
  }
  if (from.situation().size() > 0) {
    _internal_set_situation(from._internal_situation());
  }
  if (from.createdatetime().size() > 0) {
    _internal_set_createdatetime(from._internal_createdatetime());
  }
  if (from.updatedatetime().size() > 0) {
    _internal_set_updatedatetime(from._internal_updatedatetime());
  }
  if (from.rebuildingprogress().size() > 0) {
    _internal_set_rebuildingprogress(from._internal_rebuildingprogress());
  }
  if (from.gcmode().size() > 0) {
    _internal_set_gcmode(from._internal_gcmode());
  }
  if (from.metaraid().size() > 0) {
    _internal_set_metaraid(from._internal_metaraid());
  }
  if (from.dataraid().size() > 0) {
    _internal_set_dataraid(from._internal_dataraid());
  }
  if (from.index() != 0) {
    _internal_set_index(from._internal_index());
  }
  if (from.writethroughenabled() != 0) {
    _internal_set_writethroughenabled(from._internal_writethroughenabled());
  }
  if (from.capacity() != 0) {
    _internal_set_capacity(from._internal_capacity());
  }
  if (from.used() != 0) {
    _internal_set_used(from._internal_used());
  }
}

void Array::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.Array)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Array::CopyFrom(const Array& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.Array)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Array::IsInitialized() const {
  return true;
}

void Array::InternalSwap(Array* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  devicelist_.InternalSwap(&other->devicelist_);
  uniqueid_.Swap(&other->uniqueid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  status_.Swap(&other->status_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  state_.Swap(&other->state_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  situation_.Swap(&other->situation_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  createdatetime_.Swap(&other->createdatetime_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  updatedatetime_.Swap(&other->updatedatetime_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rebuildingprogress_.Swap(&other->rebuildingprogress_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  gcmode_.Swap(&other->gcmode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  metaraid_.Swap(&other->metaraid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  dataraid_.Swap(&other->dataraid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Array, used_)
      + sizeof(Array::used_)
      - PROTOBUF_FIELD_OFFSET(Array, index_)>(
          reinterpret_cast<char*>(&index_),
          reinterpret_cast<char*>(&other->index_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Array::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListArrayRequest::_Internal {
 public:
};

ListArrayRequest::ListArrayRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListArrayRequest)
}
ListArrayRequest::ListArrayRequest(const ListArrayRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListArrayRequest)
}

void ListArrayRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListArrayRequest::~ListArrayRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListArrayRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListArrayRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListArrayRequest::ArenaDtor(void* object) {
  ListArrayRequest* _this = reinterpret_cast< ListArrayRequest* >(object);
  (void)_this;
}
void ListArrayRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListArrayRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListArrayRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListArrayRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListArrayRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListArrayRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListArrayRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListArrayRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListArrayRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListArrayRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListArrayRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListArrayRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListArrayRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListArrayRequest)
  return target;
}

size_t ListArrayRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListArrayRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListArrayRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListArrayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListArrayRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListArrayRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListArrayRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListArrayRequest)
    MergeFrom(*source);
  }
}

void ListArrayRequest::MergeFrom(const ListArrayRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListArrayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
}

void ListArrayRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListArrayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListArrayRequest::CopyFrom(const ListArrayRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListArrayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListArrayRequest::IsInitialized() const {
  return true;
}

void ListArrayRequest::InternalSwap(ListArrayRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ListArrayRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListArrayResponse_Result_ArrayList::_Internal {
 public:
};

ListArrayResponse_Result_ArrayList::ListArrayResponse_Result_ArrayList(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  arraylist_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListArrayResponse.Result.ArrayList)
}
ListArrayResponse_Result_ArrayList::ListArrayResponse_Result_ArrayList(const ListArrayResponse_Result_ArrayList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      arraylist_(from.arraylist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListArrayResponse.Result.ArrayList)
}

void ListArrayResponse_Result_ArrayList::SharedCtor() {
}

ListArrayResponse_Result_ArrayList::~ListArrayResponse_Result_ArrayList() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListArrayResponse.Result.ArrayList)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListArrayResponse_Result_ArrayList::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ListArrayResponse_Result_ArrayList::ArenaDtor(void* object) {
  ListArrayResponse_Result_ArrayList* _this = reinterpret_cast< ListArrayResponse_Result_ArrayList* >(object);
  (void)_this;
}
void ListArrayResponse_Result_ArrayList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListArrayResponse_Result_ArrayList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListArrayResponse_Result_ArrayList::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListArrayResponse.Result.ArrayList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arraylist_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListArrayResponse_Result_ArrayList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .grpc_cli.Array arrayList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_arraylist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListArrayResponse_Result_ArrayList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListArrayResponse.Result.ArrayList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grpc_cli.Array arrayList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_arraylist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_arraylist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListArrayResponse.Result.ArrayList)
  return target;
}

size_t ListArrayResponse_Result_ArrayList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListArrayResponse.Result.ArrayList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_cli.Array arrayList = 1;
  total_size += 1UL * this->_internal_arraylist_size();
  for (const auto& msg : this->arraylist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListArrayResponse_Result_ArrayList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListArrayResponse.Result.ArrayList)
  GOOGLE_DCHECK_NE(&from, this);
  const ListArrayResponse_Result_ArrayList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListArrayResponse_Result_ArrayList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListArrayResponse.Result.ArrayList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListArrayResponse.Result.ArrayList)
    MergeFrom(*source);
  }
}

void ListArrayResponse_Result_ArrayList::MergeFrom(const ListArrayResponse_Result_ArrayList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListArrayResponse.Result.ArrayList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arraylist_.MergeFrom(from.arraylist_);
}

void ListArrayResponse_Result_ArrayList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListArrayResponse.Result.ArrayList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListArrayResponse_Result_ArrayList::CopyFrom(const ListArrayResponse_Result_ArrayList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListArrayResponse.Result.ArrayList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListArrayResponse_Result_ArrayList::IsInitialized() const {
  return true;
}

void ListArrayResponse_Result_ArrayList::InternalSwap(ListArrayResponse_Result_ArrayList* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  arraylist_.InternalSwap(&other->arraylist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListArrayResponse_Result_ArrayList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListArrayResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const ListArrayResponse_Result* msg);
  static const ::grpc_cli::ListArrayResponse_Result_ArrayList& data(const ListArrayResponse_Result* msg);
};

const ::grpc_cli::Status&
ListArrayResponse_Result::_Internal::status(const ListArrayResponse_Result* msg) {
  return *msg->status_;
}
const ::grpc_cli::ListArrayResponse_Result_ArrayList&
ListArrayResponse_Result::_Internal::data(const ListArrayResponse_Result* msg) {
  return *msg->data_;
}
ListArrayResponse_Result::ListArrayResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListArrayResponse.Result)
}
ListArrayResponse_Result::ListArrayResponse_Result(const ListArrayResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_data()) {
    data_ = new ::grpc_cli::ListArrayResponse_Result_ArrayList(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListArrayResponse.Result)
}

void ListArrayResponse_Result::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&data_) -
    reinterpret_cast<char*>(&status_)) + sizeof(data_));
}

ListArrayResponse_Result::~ListArrayResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListArrayResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListArrayResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete data_;
}

void ListArrayResponse_Result::ArenaDtor(void* object) {
  ListArrayResponse_Result* _this = reinterpret_cast< ListArrayResponse_Result* >(object);
  (void)_this;
}
void ListArrayResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListArrayResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListArrayResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListArrayResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListArrayResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ListArrayResponse.Result.ArrayList data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListArrayResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListArrayResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .grpc_cli.ListArrayResponse.Result.ArrayList data = 2;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListArrayResponse.Result)
  return target;
}

size_t ListArrayResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListArrayResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .grpc_cli.ListArrayResponse.Result.ArrayList data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListArrayResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListArrayResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const ListArrayResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListArrayResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListArrayResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListArrayResponse.Result)
    MergeFrom(*source);
  }
}

void ListArrayResponse_Result::MergeFrom(const ListArrayResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListArrayResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
  if (from.has_data()) {
    _internal_mutable_data()->::grpc_cli::ListArrayResponse_Result_ArrayList::MergeFrom(from._internal_data());
  }
}

void ListArrayResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListArrayResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListArrayResponse_Result::CopyFrom(const ListArrayResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListArrayResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListArrayResponse_Result::IsInitialized() const {
  return true;
}

void ListArrayResponse_Result::InternalSwap(ListArrayResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListArrayResponse_Result, data_)
      + sizeof(ListArrayResponse_Result::data_)
      - PROTOBUF_FIELD_OFFSET(ListArrayResponse_Result, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListArrayResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListArrayResponse::_Internal {
 public:
  static const ::grpc_cli::ListArrayResponse_Result& result(const ListArrayResponse* msg);
  static const ::grpc_cli::PosInfo& info(const ListArrayResponse* msg);
};

const ::grpc_cli::ListArrayResponse_Result&
ListArrayResponse::_Internal::result(const ListArrayResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
ListArrayResponse::_Internal::info(const ListArrayResponse* msg) {
  return *msg->info_;
}
ListArrayResponse::ListArrayResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListArrayResponse)
}
ListArrayResponse::ListArrayResponse(const ListArrayResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::ListArrayResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListArrayResponse)
}

void ListArrayResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

ListArrayResponse::~ListArrayResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListArrayResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListArrayResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void ListArrayResponse::ArenaDtor(void* object) {
  ListArrayResponse* _this = reinterpret_cast< ListArrayResponse* >(object);
  (void)_this;
}
void ListArrayResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListArrayResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListArrayResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListArrayResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListArrayResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListArrayResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListArrayResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ListArrayResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListArrayResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListArrayResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListArrayResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListArrayResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.ListArrayResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListArrayResponse)
  return target;
}

size_t ListArrayResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListArrayResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.ListArrayResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListArrayResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListArrayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListArrayResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListArrayResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListArrayResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListArrayResponse)
    MergeFrom(*source);
  }
}

void ListArrayResponse::MergeFrom(const ListArrayResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListArrayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::ListArrayResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void ListArrayResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListArrayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListArrayResponse::CopyFrom(const ListArrayResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListArrayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListArrayResponse::IsInitialized() const {
  return true;
}

void ListArrayResponse::InternalSwap(ListArrayResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListArrayResponse, info_)
      + sizeof(ListArrayResponse::info_)
      - PROTOBUF_FIELD_OFFSET(ListArrayResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListArrayResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ArrayInfoRequest_Param::_Internal {
 public:
};

ArrayInfoRequest_Param::ArrayInfoRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ArrayInfoRequest.Param)
}
ArrayInfoRequest_Param::ArrayInfoRequest_Param(const ArrayInfoRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ArrayInfoRequest.Param)
}

void ArrayInfoRequest_Param::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ArrayInfoRequest_Param::~ArrayInfoRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.ArrayInfoRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ArrayInfoRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ArrayInfoRequest_Param::ArenaDtor(void* object) {
  ArrayInfoRequest_Param* _this = reinterpret_cast< ArrayInfoRequest_Param* >(object);
  (void)_this;
}
void ArrayInfoRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ArrayInfoRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ArrayInfoRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ArrayInfoRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ArrayInfoRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ArrayInfoRequest.Param.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ArrayInfoRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ArrayInfoRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ArrayInfoRequest.Param.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ArrayInfoRequest.Param)
  return target;
}

size_t ArrayInfoRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ArrayInfoRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ArrayInfoRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ArrayInfoRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const ArrayInfoRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ArrayInfoRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ArrayInfoRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ArrayInfoRequest.Param)
    MergeFrom(*source);
  }
}

void ArrayInfoRequest_Param::MergeFrom(const ArrayInfoRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ArrayInfoRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void ArrayInfoRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ArrayInfoRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArrayInfoRequest_Param::CopyFrom(const ArrayInfoRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ArrayInfoRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArrayInfoRequest_Param::IsInitialized() const {
  return true;
}

void ArrayInfoRequest_Param::InternalSwap(ArrayInfoRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ArrayInfoRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ArrayInfoRequest::_Internal {
 public:
  static const ::grpc_cli::ArrayInfoRequest_Param& param(const ArrayInfoRequest* msg);
};

const ::grpc_cli::ArrayInfoRequest_Param&
ArrayInfoRequest::_Internal::param(const ArrayInfoRequest* msg) {
  return *msg->param_;
}
ArrayInfoRequest::ArrayInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ArrayInfoRequest)
}
ArrayInfoRequest::ArrayInfoRequest(const ArrayInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::ArrayInfoRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ArrayInfoRequest)
}

void ArrayInfoRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

ArrayInfoRequest::~ArrayInfoRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.ArrayInfoRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ArrayInfoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void ArrayInfoRequest::ArenaDtor(void* object) {
  ArrayInfoRequest* _this = reinterpret_cast< ArrayInfoRequest* >(object);
  (void)_this;
}
void ArrayInfoRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ArrayInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ArrayInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ArrayInfoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ArrayInfoRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ArrayInfoRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ArrayInfoRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ArrayInfoRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ArrayInfoRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ArrayInfoRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ArrayInfoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ArrayInfoRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ArrayInfoRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ArrayInfoRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.ArrayInfoRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ArrayInfoRequest)
  return target;
}

size_t ArrayInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ArrayInfoRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.ArrayInfoRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ArrayInfoRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ArrayInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ArrayInfoRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ArrayInfoRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ArrayInfoRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ArrayInfoRequest)
    MergeFrom(*source);
  }
}

void ArrayInfoRequest::MergeFrom(const ArrayInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ArrayInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::ArrayInfoRequest_Param::MergeFrom(from._internal_param());
  }
}

void ArrayInfoRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ArrayInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArrayInfoRequest::CopyFrom(const ArrayInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ArrayInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArrayInfoRequest::IsInitialized() const {
  return true;
}

void ArrayInfoRequest::InternalSwap(ArrayInfoRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ArrayInfoRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ArrayInfoResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const ArrayInfoResponse_Result* msg);
  static const ::grpc_cli::Array& data(const ArrayInfoResponse_Result* msg);
};

const ::grpc_cli::Status&
ArrayInfoResponse_Result::_Internal::status(const ArrayInfoResponse_Result* msg) {
  return *msg->status_;
}
const ::grpc_cli::Array&
ArrayInfoResponse_Result::_Internal::data(const ArrayInfoResponse_Result* msg) {
  return *msg->data_;
}
ArrayInfoResponse_Result::ArrayInfoResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ArrayInfoResponse.Result)
}
ArrayInfoResponse_Result::ArrayInfoResponse_Result(const ArrayInfoResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_data()) {
    data_ = new ::grpc_cli::Array(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ArrayInfoResponse.Result)
}

void ArrayInfoResponse_Result::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&data_) -
    reinterpret_cast<char*>(&status_)) + sizeof(data_));
}

ArrayInfoResponse_Result::~ArrayInfoResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.ArrayInfoResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ArrayInfoResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete data_;
}

void ArrayInfoResponse_Result::ArenaDtor(void* object) {
  ArrayInfoResponse_Result* _this = reinterpret_cast< ArrayInfoResponse_Result* >(object);
  (void)_this;
}
void ArrayInfoResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ArrayInfoResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ArrayInfoResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ArrayInfoResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ArrayInfoResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.Array data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ArrayInfoResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ArrayInfoResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .grpc_cli.Array data = 2;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ArrayInfoResponse.Result)
  return target;
}

size_t ArrayInfoResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ArrayInfoResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .grpc_cli.Array data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ArrayInfoResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ArrayInfoResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const ArrayInfoResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ArrayInfoResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ArrayInfoResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ArrayInfoResponse.Result)
    MergeFrom(*source);
  }
}

void ArrayInfoResponse_Result::MergeFrom(const ArrayInfoResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ArrayInfoResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
  if (from.has_data()) {
    _internal_mutable_data()->::grpc_cli::Array::MergeFrom(from._internal_data());
  }
}

void ArrayInfoResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ArrayInfoResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArrayInfoResponse_Result::CopyFrom(const ArrayInfoResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ArrayInfoResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArrayInfoResponse_Result::IsInitialized() const {
  return true;
}

void ArrayInfoResponse_Result::InternalSwap(ArrayInfoResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ArrayInfoResponse_Result, data_)
      + sizeof(ArrayInfoResponse_Result::data_)
      - PROTOBUF_FIELD_OFFSET(ArrayInfoResponse_Result, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ArrayInfoResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ArrayInfoResponse::_Internal {
 public:
  static const ::grpc_cli::ArrayInfoResponse_Result& result(const ArrayInfoResponse* msg);
  static const ::grpc_cli::PosInfo& info(const ArrayInfoResponse* msg);
};

const ::grpc_cli::ArrayInfoResponse_Result&
ArrayInfoResponse::_Internal::result(const ArrayInfoResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
ArrayInfoResponse::_Internal::info(const ArrayInfoResponse* msg) {
  return *msg->info_;
}
ArrayInfoResponse::ArrayInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ArrayInfoResponse)
}
ArrayInfoResponse::ArrayInfoResponse(const ArrayInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::ArrayInfoResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ArrayInfoResponse)
}

void ArrayInfoResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

ArrayInfoResponse::~ArrayInfoResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.ArrayInfoResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ArrayInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void ArrayInfoResponse::ArenaDtor(void* object) {
  ArrayInfoResponse* _this = reinterpret_cast< ArrayInfoResponse* >(object);
  (void)_this;
}
void ArrayInfoResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ArrayInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ArrayInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ArrayInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ArrayInfoResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ArrayInfoResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ArrayInfoResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ArrayInfoResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ArrayInfoResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ArrayInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ArrayInfoResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ArrayInfoResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.ArrayInfoResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ArrayInfoResponse)
  return target;
}

size_t ArrayInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ArrayInfoResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.ArrayInfoResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ArrayInfoResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ArrayInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ArrayInfoResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ArrayInfoResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ArrayInfoResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ArrayInfoResponse)
    MergeFrom(*source);
  }
}

void ArrayInfoResponse::MergeFrom(const ArrayInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ArrayInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::ArrayInfoResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void ArrayInfoResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ArrayInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArrayInfoResponse::CopyFrom(const ArrayInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ArrayInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArrayInfoResponse::IsInitialized() const {
  return true;
}

void ArrayInfoResponse::InternalSwap(ArrayInfoResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ArrayInfoResponse, info_)
      + sizeof(ArrayInfoResponse::info_)
      - PROTOBUF_FIELD_OFFSET(ArrayInfoResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ArrayInfoResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RebuildArrayRequest_Param::_Internal {
 public:
};

RebuildArrayRequest_Param::RebuildArrayRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.RebuildArrayRequest.Param)
}
RebuildArrayRequest_Param::RebuildArrayRequest_Param(const RebuildArrayRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.RebuildArrayRequest.Param)
}

void RebuildArrayRequest_Param::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RebuildArrayRequest_Param::~RebuildArrayRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.RebuildArrayRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RebuildArrayRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RebuildArrayRequest_Param::ArenaDtor(void* object) {
  RebuildArrayRequest_Param* _this = reinterpret_cast< RebuildArrayRequest_Param* >(object);
  (void)_this;
}
void RebuildArrayRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RebuildArrayRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RebuildArrayRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.RebuildArrayRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RebuildArrayRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.RebuildArrayRequest.Param.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RebuildArrayRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.RebuildArrayRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.RebuildArrayRequest.Param.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.RebuildArrayRequest.Param)
  return target;
}

size_t RebuildArrayRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.RebuildArrayRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RebuildArrayRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.RebuildArrayRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const RebuildArrayRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RebuildArrayRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.RebuildArrayRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.RebuildArrayRequest.Param)
    MergeFrom(*source);
  }
}

void RebuildArrayRequest_Param::MergeFrom(const RebuildArrayRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.RebuildArrayRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void RebuildArrayRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.RebuildArrayRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RebuildArrayRequest_Param::CopyFrom(const RebuildArrayRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.RebuildArrayRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RebuildArrayRequest_Param::IsInitialized() const {
  return true;
}

void RebuildArrayRequest_Param::InternalSwap(RebuildArrayRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RebuildArrayRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RebuildArrayRequest::_Internal {
 public:
  static const ::grpc_cli::RebuildArrayRequest_Param& param(const RebuildArrayRequest* msg);
};

const ::grpc_cli::RebuildArrayRequest_Param&
RebuildArrayRequest::_Internal::param(const RebuildArrayRequest* msg) {
  return *msg->param_;
}
RebuildArrayRequest::RebuildArrayRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.RebuildArrayRequest)
}
RebuildArrayRequest::RebuildArrayRequest(const RebuildArrayRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::RebuildArrayRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.RebuildArrayRequest)
}

void RebuildArrayRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

RebuildArrayRequest::~RebuildArrayRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.RebuildArrayRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RebuildArrayRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void RebuildArrayRequest::ArenaDtor(void* object) {
  RebuildArrayRequest* _this = reinterpret_cast< RebuildArrayRequest* >(object);
  (void)_this;
}
void RebuildArrayRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RebuildArrayRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RebuildArrayRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.RebuildArrayRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RebuildArrayRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.RebuildArrayRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.RebuildArrayRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.RebuildArrayRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.RebuildArrayRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RebuildArrayRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.RebuildArrayRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.RebuildArrayRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.RebuildArrayRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.RebuildArrayRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.RebuildArrayRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.RebuildArrayRequest)
  return target;
}

size_t RebuildArrayRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.RebuildArrayRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.RebuildArrayRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RebuildArrayRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.RebuildArrayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RebuildArrayRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RebuildArrayRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.RebuildArrayRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.RebuildArrayRequest)
    MergeFrom(*source);
  }
}

void RebuildArrayRequest::MergeFrom(const RebuildArrayRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.RebuildArrayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::RebuildArrayRequest_Param::MergeFrom(from._internal_param());
  }
}

void RebuildArrayRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.RebuildArrayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RebuildArrayRequest::CopyFrom(const RebuildArrayRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.RebuildArrayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RebuildArrayRequest::IsInitialized() const {
  return true;
}

void RebuildArrayRequest::InternalSwap(RebuildArrayRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RebuildArrayRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RebuildArrayResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const RebuildArrayResponse_Result* msg);
};

const ::grpc_cli::Status&
RebuildArrayResponse_Result::_Internal::status(const RebuildArrayResponse_Result* msg) {
  return *msg->status_;
}
RebuildArrayResponse_Result::RebuildArrayResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.RebuildArrayResponse.Result)
}
RebuildArrayResponse_Result::RebuildArrayResponse_Result(const RebuildArrayResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.RebuildArrayResponse.Result)
}

void RebuildArrayResponse_Result::SharedCtor() {
status_ = nullptr;
}

RebuildArrayResponse_Result::~RebuildArrayResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.RebuildArrayResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RebuildArrayResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void RebuildArrayResponse_Result::ArenaDtor(void* object) {
  RebuildArrayResponse_Result* _this = reinterpret_cast< RebuildArrayResponse_Result* >(object);
  (void)_this;
}
void RebuildArrayResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RebuildArrayResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RebuildArrayResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.RebuildArrayResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RebuildArrayResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RebuildArrayResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.RebuildArrayResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.RebuildArrayResponse.Result)
  return target;
}

size_t RebuildArrayResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.RebuildArrayResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RebuildArrayResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.RebuildArrayResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const RebuildArrayResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RebuildArrayResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.RebuildArrayResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.RebuildArrayResponse.Result)
    MergeFrom(*source);
  }
}

void RebuildArrayResponse_Result::MergeFrom(const RebuildArrayResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.RebuildArrayResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void RebuildArrayResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.RebuildArrayResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RebuildArrayResponse_Result::CopyFrom(const RebuildArrayResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.RebuildArrayResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RebuildArrayResponse_Result::IsInitialized() const {
  return true;
}

void RebuildArrayResponse_Result::InternalSwap(RebuildArrayResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RebuildArrayResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RebuildArrayResponse::_Internal {
 public:
  static const ::grpc_cli::RebuildArrayResponse_Result& result(const RebuildArrayResponse* msg);
  static const ::grpc_cli::PosInfo& info(const RebuildArrayResponse* msg);
};

const ::grpc_cli::RebuildArrayResponse_Result&
RebuildArrayResponse::_Internal::result(const RebuildArrayResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
RebuildArrayResponse::_Internal::info(const RebuildArrayResponse* msg) {
  return *msg->info_;
}
RebuildArrayResponse::RebuildArrayResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.RebuildArrayResponse)
}
RebuildArrayResponse::RebuildArrayResponse(const RebuildArrayResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::RebuildArrayResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.RebuildArrayResponse)
}

void RebuildArrayResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

RebuildArrayResponse::~RebuildArrayResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.RebuildArrayResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RebuildArrayResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void RebuildArrayResponse::ArenaDtor(void* object) {
  RebuildArrayResponse* _this = reinterpret_cast< RebuildArrayResponse* >(object);
  (void)_this;
}
void RebuildArrayResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RebuildArrayResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RebuildArrayResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.RebuildArrayResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RebuildArrayResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.RebuildArrayResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.RebuildArrayResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.RebuildArrayResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RebuildArrayResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.RebuildArrayResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.RebuildArrayResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.RebuildArrayResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.RebuildArrayResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.RebuildArrayResponse)
  return target;
}

size_t RebuildArrayResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.RebuildArrayResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.RebuildArrayResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RebuildArrayResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.RebuildArrayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RebuildArrayResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RebuildArrayResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.RebuildArrayResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.RebuildArrayResponse)
    MergeFrom(*source);
  }
}

void RebuildArrayResponse::MergeFrom(const RebuildArrayResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.RebuildArrayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::RebuildArrayResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void RebuildArrayResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.RebuildArrayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RebuildArrayResponse::CopyFrom(const RebuildArrayResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.RebuildArrayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RebuildArrayResponse::IsInitialized() const {
  return true;
}

void RebuildArrayResponse::InternalSwap(RebuildArrayResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RebuildArrayResponse, info_)
      + sizeof(RebuildArrayResponse::info_)
      - PROTOBUF_FIELD_OFFSET(RebuildArrayResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RebuildArrayResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListNodeRequest::_Internal {
 public:
};

ListNodeRequest::ListNodeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListNodeRequest)
}
ListNodeRequest::ListNodeRequest(const ListNodeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListNodeRequest)
}

void ListNodeRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListNodeRequest::~ListNodeRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListNodeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListNodeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListNodeRequest::ArenaDtor(void* object) {
  ListNodeRequest* _this = reinterpret_cast< ListNodeRequest* >(object);
  (void)_this;
}
void ListNodeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListNodeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListNodeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListNodeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListNodeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListNodeRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListNodeRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListNodeRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListNodeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListNodeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListNodeRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListNodeRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListNodeRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListNodeRequest)
  return target;
}

size_t ListNodeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListNodeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListNodeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListNodeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListNodeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListNodeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListNodeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListNodeRequest)
    MergeFrom(*source);
  }
}

void ListNodeRequest::MergeFrom(const ListNodeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListNodeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
}

void ListNodeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListNodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListNodeRequest::CopyFrom(const ListNodeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListNodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListNodeRequest::IsInitialized() const {
  return true;
}

void ListNodeRequest::InternalSwap(ListNodeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ListNodeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListNodeResponse_Result_Node::_Internal {
 public:
};

ListNodeResponse_Result_Node::ListNodeResponse_Result_Node(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListNodeResponse.Result.Node)
}
ListNodeResponse_Result_Node::ListNodeResponse_Result_Node(const ListNodeResponse_Result_Node& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ip().empty()) {
    ip_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_ip(), 
      GetArena());
  }
  lastseen_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_lastseen().empty()) {
    lastseen_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_lastseen(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListNodeResponse.Result.Node)
}

void ListNodeResponse_Result_Node::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
lastseen_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListNodeResponse_Result_Node::~ListNodeResponse_Result_Node() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListNodeResponse.Result.Node)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListNodeResponse_Result_Node::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  lastseen_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListNodeResponse_Result_Node::ArenaDtor(void* object) {
  ListNodeResponse_Result_Node* _this = reinterpret_cast< ListNodeResponse_Result_Node* >(object);
  (void)_this;
}
void ListNodeResponse_Result_Node::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListNodeResponse_Result_Node::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListNodeResponse_Result_Node::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListNodeResponse.Result.Node)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  ip_.ClearToEmpty();
  lastseen_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListNodeResponse_Result_Node::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListNodeResponse.Result.Node.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ip = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_ip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListNodeResponse.Result.Node.ip"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string lastseen = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_lastseen();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListNodeResponse.Result.Node.lastseen"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListNodeResponse_Result_Node::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListNodeResponse.Result.Node)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListNodeResponse.Result.Node.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string ip = 2;
  if (this->ip().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ip().data(), static_cast<int>(this->_internal_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListNodeResponse.Result.Node.ip");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_ip(), target);
  }

  // string lastseen = 3;
  if (this->lastseen().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_lastseen().data(), static_cast<int>(this->_internal_lastseen().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListNodeResponse.Result.Node.lastseen");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_lastseen(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListNodeResponse.Result.Node)
  return target;
}

size_t ListNodeResponse_Result_Node::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListNodeResponse.Result.Node)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string ip = 2;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ip());
  }

  // string lastseen = 3;
  if (this->lastseen().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_lastseen());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListNodeResponse_Result_Node::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListNodeResponse.Result.Node)
  GOOGLE_DCHECK_NE(&from, this);
  const ListNodeResponse_Result_Node* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListNodeResponse_Result_Node>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListNodeResponse.Result.Node)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListNodeResponse.Result.Node)
    MergeFrom(*source);
  }
}

void ListNodeResponse_Result_Node::MergeFrom(const ListNodeResponse_Result_Node& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListNodeResponse.Result.Node)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.ip().size() > 0) {
    _internal_set_ip(from._internal_ip());
  }
  if (from.lastseen().size() > 0) {
    _internal_set_lastseen(from._internal_lastseen());
  }
}

void ListNodeResponse_Result_Node::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListNodeResponse.Result.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListNodeResponse_Result_Node::CopyFrom(const ListNodeResponse_Result_Node& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListNodeResponse.Result.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListNodeResponse_Result_Node::IsInitialized() const {
  return true;
}

void ListNodeResponse_Result_Node::InternalSwap(ListNodeResponse_Result_Node* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ip_.Swap(&other->ip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  lastseen_.Swap(&other->lastseen_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ListNodeResponse_Result_Node::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListNodeResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const ListNodeResponse_Result* msg);
};

const ::grpc_cli::Status&
ListNodeResponse_Result::_Internal::status(const ListNodeResponse_Result* msg) {
  return *msg->status_;
}
ListNodeResponse_Result::ListNodeResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  data_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListNodeResponse.Result)
}
ListNodeResponse_Result::ListNodeResponse_Result(const ListNodeResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      data_(from.data_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListNodeResponse.Result)
}

void ListNodeResponse_Result::SharedCtor() {
status_ = nullptr;
}

ListNodeResponse_Result::~ListNodeResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListNodeResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListNodeResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void ListNodeResponse_Result::ArenaDtor(void* object) {
  ListNodeResponse_Result* _this = reinterpret_cast< ListNodeResponse_Result* >(object);
  (void)_this;
}
void ListNodeResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListNodeResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListNodeResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListNodeResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListNodeResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .grpc_cli.ListNodeResponse.Result.Node data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListNodeResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListNodeResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // repeated .grpc_cli.ListNodeResponse.Result.Node data = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListNodeResponse.Result)
  return target;
}

size_t ListNodeResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListNodeResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_cli.ListNodeResponse.Result.Node data = 2;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListNodeResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListNodeResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const ListNodeResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListNodeResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListNodeResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListNodeResponse.Result)
    MergeFrom(*source);
  }
}

void ListNodeResponse_Result::MergeFrom(const ListNodeResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListNodeResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void ListNodeResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListNodeResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListNodeResponse_Result::CopyFrom(const ListNodeResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListNodeResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListNodeResponse_Result::IsInitialized() const {
  return true;
}

void ListNodeResponse_Result::InternalSwap(ListNodeResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  data_.InternalSwap(&other->data_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListNodeResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListNodeResponse::_Internal {
 public:
  static const ::grpc_cli::ListNodeResponse_Result& result(const ListNodeResponse* msg);
  static const ::grpc_cli::PosInfo& info(const ListNodeResponse* msg);
};

const ::grpc_cli::ListNodeResponse_Result&
ListNodeResponse::_Internal::result(const ListNodeResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
ListNodeResponse::_Internal::info(const ListNodeResponse* msg) {
  return *msg->info_;
}
ListNodeResponse::ListNodeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListNodeResponse)
}
ListNodeResponse::ListNodeResponse(const ListNodeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::ListNodeResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListNodeResponse)
}

void ListNodeResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

ListNodeResponse::~ListNodeResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListNodeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListNodeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void ListNodeResponse::ArenaDtor(void* object) {
  ListNodeResponse* _this = reinterpret_cast< ListNodeResponse* >(object);
  (void)_this;
}
void ListNodeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListNodeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListNodeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListNodeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListNodeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListNodeResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListNodeResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ListNodeResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListNodeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListNodeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListNodeResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListNodeResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.ListNodeResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListNodeResponse)
  return target;
}

size_t ListNodeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListNodeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.ListNodeResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListNodeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListNodeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListNodeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListNodeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListNodeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListNodeResponse)
    MergeFrom(*source);
  }
}

void ListNodeResponse::MergeFrom(const ListNodeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListNodeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::ListNodeResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void ListNodeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListNodeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListNodeResponse::CopyFrom(const ListNodeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListNodeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListNodeResponse::IsInitialized() const {
  return true;
}

void ListNodeResponse::InternalSwap(ListNodeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListNodeResponse, info_)
      + sizeof(ListNodeResponse::info_)
      - PROTOBUF_FIELD_OFFSET(ListNodeResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListNodeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListHaVolumeRequest::_Internal {
 public:
};

ListHaVolumeRequest::ListHaVolumeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListHaVolumeRequest)
}
ListHaVolumeRequest::ListHaVolumeRequest(const ListHaVolumeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListHaVolumeRequest)
}

void ListHaVolumeRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListHaVolumeRequest::~ListHaVolumeRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListHaVolumeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListHaVolumeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListHaVolumeRequest::ArenaDtor(void* object) {
  ListHaVolumeRequest* _this = reinterpret_cast< ListHaVolumeRequest* >(object);
  (void)_this;
}
void ListHaVolumeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListHaVolumeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListHaVolumeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListHaVolumeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListHaVolumeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListHaVolumeRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListHaVolumeRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListHaVolumeRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListHaVolumeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListHaVolumeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListHaVolumeRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListHaVolumeRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListHaVolumeRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListHaVolumeRequest)
  return target;
}

size_t ListHaVolumeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListHaVolumeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListHaVolumeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListHaVolumeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListHaVolumeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListHaVolumeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListHaVolumeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListHaVolumeRequest)
    MergeFrom(*source);
  }
}

void ListHaVolumeRequest::MergeFrom(const ListHaVolumeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListHaVolumeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
}

void ListHaVolumeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListHaVolumeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListHaVolumeRequest::CopyFrom(const ListHaVolumeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListHaVolumeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListHaVolumeRequest::IsInitialized() const {
  return true;
}

void ListHaVolumeRequest::InternalSwap(ListHaVolumeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ListHaVolumeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListHaVolumeResponse_Result_Volume::_Internal {
 public:
};

ListHaVolumeResponse_Result_Volume::ListHaVolumeResponse_Result_Volume(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListHaVolumeResponse.Result.Volume)
}
ListHaVolumeResponse_Result_Volume::ListHaVolumeResponse_Result_Volume(const ListHaVolumeResponse_Result_Volume& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  nodename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_nodename().empty()) {
    nodename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_nodename(), 
      GetArena());
  }
  arrayname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_arrayname().empty()) {
    arrayname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_arrayname(), 
      GetArena());
  }
  lastseen_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_lastseen().empty()) {
    lastseen_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_lastseen(), 
      GetArena());
  }
  ::memcpy(&size_, &from.size_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&size_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListHaVolumeResponse.Result.Volume)
}

void ListHaVolumeResponse_Result_Volume::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
nodename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
arrayname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
lastseen_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&size_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&size_)) + sizeof(id_));
}

ListHaVolumeResponse_Result_Volume::~ListHaVolumeResponse_Result_Volume() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListHaVolumeResponse.Result.Volume)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListHaVolumeResponse_Result_Volume::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nodename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  arrayname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  lastseen_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListHaVolumeResponse_Result_Volume::ArenaDtor(void* object) {
  ListHaVolumeResponse_Result_Volume* _this = reinterpret_cast< ListHaVolumeResponse_Result_Volume* >(object);
  (void)_this;
}
void ListHaVolumeResponse_Result_Volume::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListHaVolumeResponse_Result_Volume::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListHaVolumeResponse_Result_Volume::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListHaVolumeResponse.Result.Volume)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  nodename_.ClearToEmpty();
  arrayname_.ClearToEmpty();
  lastseen_.ClearToEmpty();
  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&size_)) + sizeof(id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListHaVolumeResponse_Result_Volume::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListHaVolumeResponse.Result.Volume.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string nodeName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_nodename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListHaVolumeResponse.Result.Volume.nodeName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string arrayName = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_arrayname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListHaVolumeResponse.Result.Volume.arrayName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 size = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string lastseen = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_lastseen();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListHaVolumeResponse.Result.Volume.lastseen"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListHaVolumeResponse_Result_Volume::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListHaVolumeResponse.Result.Volume)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListHaVolumeResponse.Result.Volume.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string nodeName = 3;
  if (this->nodename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nodename().data(), static_cast<int>(this->_internal_nodename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListHaVolumeResponse.Result.Volume.nodeName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_nodename(), target);
  }

  // string arrayName = 4;
  if (this->arrayname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_arrayname().data(), static_cast<int>(this->_internal_arrayname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListHaVolumeResponse.Result.Volume.arrayName");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_arrayname(), target);
  }

  // int64 size = 5;
  if (this->size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_size(), target);
  }

  // string lastseen = 6;
  if (this->lastseen().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_lastseen().data(), static_cast<int>(this->_internal_lastseen().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListHaVolumeResponse.Result.Volume.lastseen");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_lastseen(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListHaVolumeResponse.Result.Volume)
  return target;
}

size_t ListHaVolumeResponse_Result_Volume::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListHaVolumeResponse.Result.Volume)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string nodeName = 3;
  if (this->nodename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nodename());
  }

  // string arrayName = 4;
  if (this->arrayname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_arrayname());
  }

  // string lastseen = 6;
  if (this->lastseen().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_lastseen());
  }

  // int64 size = 5;
  if (this->size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_size());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListHaVolumeResponse_Result_Volume::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListHaVolumeResponse.Result.Volume)
  GOOGLE_DCHECK_NE(&from, this);
  const ListHaVolumeResponse_Result_Volume* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListHaVolumeResponse_Result_Volume>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListHaVolumeResponse.Result.Volume)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListHaVolumeResponse.Result.Volume)
    MergeFrom(*source);
  }
}

void ListHaVolumeResponse_Result_Volume::MergeFrom(const ListHaVolumeResponse_Result_Volume& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListHaVolumeResponse.Result.Volume)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.nodename().size() > 0) {
    _internal_set_nodename(from._internal_nodename());
  }
  if (from.arrayname().size() > 0) {
    _internal_set_arrayname(from._internal_arrayname());
  }
  if (from.lastseen().size() > 0) {
    _internal_set_lastseen(from._internal_lastseen());
  }
  if (from.size() != 0) {
    _internal_set_size(from._internal_size());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void ListHaVolumeResponse_Result_Volume::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListHaVolumeResponse.Result.Volume)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListHaVolumeResponse_Result_Volume::CopyFrom(const ListHaVolumeResponse_Result_Volume& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListHaVolumeResponse.Result.Volume)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListHaVolumeResponse_Result_Volume::IsInitialized() const {
  return true;
}

void ListHaVolumeResponse_Result_Volume::InternalSwap(ListHaVolumeResponse_Result_Volume* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  nodename_.Swap(&other->nodename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  arrayname_.Swap(&other->arrayname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  lastseen_.Swap(&other->lastseen_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListHaVolumeResponse_Result_Volume, id_)
      + sizeof(ListHaVolumeResponse_Result_Volume::id_)
      - PROTOBUF_FIELD_OFFSET(ListHaVolumeResponse_Result_Volume, size_)>(
          reinterpret_cast<char*>(&size_),
          reinterpret_cast<char*>(&other->size_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListHaVolumeResponse_Result_Volume::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListHaVolumeResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const ListHaVolumeResponse_Result* msg);
};

const ::grpc_cli::Status&
ListHaVolumeResponse_Result::_Internal::status(const ListHaVolumeResponse_Result* msg) {
  return *msg->status_;
}
ListHaVolumeResponse_Result::ListHaVolumeResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  data_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListHaVolumeResponse.Result)
}
ListHaVolumeResponse_Result::ListHaVolumeResponse_Result(const ListHaVolumeResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      data_(from.data_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListHaVolumeResponse.Result)
}

void ListHaVolumeResponse_Result::SharedCtor() {
status_ = nullptr;
}

ListHaVolumeResponse_Result::~ListHaVolumeResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListHaVolumeResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListHaVolumeResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void ListHaVolumeResponse_Result::ArenaDtor(void* object) {
  ListHaVolumeResponse_Result* _this = reinterpret_cast< ListHaVolumeResponse_Result* >(object);
  (void)_this;
}
void ListHaVolumeResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListHaVolumeResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListHaVolumeResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListHaVolumeResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListHaVolumeResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .grpc_cli.ListHaVolumeResponse.Result.Volume data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListHaVolumeResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListHaVolumeResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // repeated .grpc_cli.ListHaVolumeResponse.Result.Volume data = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListHaVolumeResponse.Result)
  return target;
}

size_t ListHaVolumeResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListHaVolumeResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_cli.ListHaVolumeResponse.Result.Volume data = 2;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListHaVolumeResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListHaVolumeResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const ListHaVolumeResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListHaVolumeResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListHaVolumeResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListHaVolumeResponse.Result)
    MergeFrom(*source);
  }
}

void ListHaVolumeResponse_Result::MergeFrom(const ListHaVolumeResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListHaVolumeResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void ListHaVolumeResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListHaVolumeResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListHaVolumeResponse_Result::CopyFrom(const ListHaVolumeResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListHaVolumeResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListHaVolumeResponse_Result::IsInitialized() const {
  return true;
}

void ListHaVolumeResponse_Result::InternalSwap(ListHaVolumeResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  data_.InternalSwap(&other->data_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListHaVolumeResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListHaVolumeResponse::_Internal {
 public:
  static const ::grpc_cli::ListHaVolumeResponse_Result& result(const ListHaVolumeResponse* msg);
  static const ::grpc_cli::PosInfo& info(const ListHaVolumeResponse* msg);
};

const ::grpc_cli::ListHaVolumeResponse_Result&
ListHaVolumeResponse::_Internal::result(const ListHaVolumeResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
ListHaVolumeResponse::_Internal::info(const ListHaVolumeResponse* msg) {
  return *msg->info_;
}
ListHaVolumeResponse::ListHaVolumeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListHaVolumeResponse)
}
ListHaVolumeResponse::ListHaVolumeResponse(const ListHaVolumeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::ListHaVolumeResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListHaVolumeResponse)
}

void ListHaVolumeResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

ListHaVolumeResponse::~ListHaVolumeResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListHaVolumeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListHaVolumeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void ListHaVolumeResponse::ArenaDtor(void* object) {
  ListHaVolumeResponse* _this = reinterpret_cast< ListHaVolumeResponse* >(object);
  (void)_this;
}
void ListHaVolumeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListHaVolumeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListHaVolumeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListHaVolumeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListHaVolumeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListHaVolumeResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListHaVolumeResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ListHaVolumeResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListHaVolumeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListHaVolumeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListHaVolumeResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListHaVolumeResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.ListHaVolumeResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListHaVolumeResponse)
  return target;
}

size_t ListHaVolumeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListHaVolumeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.ListHaVolumeResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListHaVolumeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListHaVolumeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListHaVolumeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListHaVolumeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListHaVolumeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListHaVolumeResponse)
    MergeFrom(*source);
  }
}

void ListHaVolumeResponse::MergeFrom(const ListHaVolumeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListHaVolumeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::ListHaVolumeResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void ListHaVolumeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListHaVolumeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListHaVolumeResponse::CopyFrom(const ListHaVolumeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListHaVolumeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListHaVolumeResponse::IsInitialized() const {
  return true;
}

void ListHaVolumeResponse::InternalSwap(ListHaVolumeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListHaVolumeResponse, info_)
      + sizeof(ListHaVolumeResponse::info_)
      - PROTOBUF_FIELD_OFFSET(ListHaVolumeResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListHaVolumeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListHaReplicationRequest::_Internal {
 public:
};

ListHaReplicationRequest::ListHaReplicationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListHaReplicationRequest)
}
ListHaReplicationRequest::ListHaReplicationRequest(const ListHaReplicationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListHaReplicationRequest)
}

void ListHaReplicationRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListHaReplicationRequest::~ListHaReplicationRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListHaReplicationRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListHaReplicationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListHaReplicationRequest::ArenaDtor(void* object) {
  ListHaReplicationRequest* _this = reinterpret_cast< ListHaReplicationRequest* >(object);
  (void)_this;
}
void ListHaReplicationRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListHaReplicationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListHaReplicationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListHaReplicationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListHaReplicationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListHaReplicationRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListHaReplicationRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListHaReplicationRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListHaReplicationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListHaReplicationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListHaReplicationRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListHaReplicationRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListHaReplicationRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListHaReplicationRequest)
  return target;
}

size_t ListHaReplicationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListHaReplicationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListHaReplicationRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListHaReplicationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListHaReplicationRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListHaReplicationRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListHaReplicationRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListHaReplicationRequest)
    MergeFrom(*source);
  }
}

void ListHaReplicationRequest::MergeFrom(const ListHaReplicationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListHaReplicationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
}

void ListHaReplicationRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListHaReplicationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListHaReplicationRequest::CopyFrom(const ListHaReplicationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListHaReplicationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListHaReplicationRequest::IsInitialized() const {
  return true;
}

void ListHaReplicationRequest::InternalSwap(ListHaReplicationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ListHaReplicationRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListHaReplicationResponse_Result_Replication::_Internal {
 public:
};

ListHaReplicationResponse_Result_Replication::ListHaReplicationResponse_Result_Replication(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListHaReplicationResponse.Result.Replication)
}
ListHaReplicationResponse_Result_Replication::ListHaReplicationResponse_Result_Replication(const ListHaReplicationResponse_Result_Replication& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&destinationwalvolumeid_) -
    reinterpret_cast<char*>(&id_)) + sizeof(destinationwalvolumeid_));
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListHaReplicationResponse.Result.Replication)
}

void ListHaReplicationResponse_Result_Replication::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&destinationwalvolumeid_) -
    reinterpret_cast<char*>(&id_)) + sizeof(destinationwalvolumeid_));
}

ListHaReplicationResponse_Result_Replication::~ListHaReplicationResponse_Result_Replication() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListHaReplicationResponse.Result.Replication)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListHaReplicationResponse_Result_Replication::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ListHaReplicationResponse_Result_Replication::ArenaDtor(void* object) {
  ListHaReplicationResponse_Result_Replication* _this = reinterpret_cast< ListHaReplicationResponse_Result_Replication* >(object);
  (void)_this;
}
void ListHaReplicationResponse_Result_Replication::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListHaReplicationResponse_Result_Replication::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListHaReplicationResponse_Result_Replication::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListHaReplicationResponse.Result.Replication)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&destinationwalvolumeid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(destinationwalvolumeid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListHaReplicationResponse_Result_Replication::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 sourceVolumeId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          sourcevolumeid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 sourceWalVolume_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          sourcewalvolume_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 destinationVolumeId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          destinationvolumeid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 destinationWalVolumeId = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          destinationwalvolumeid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListHaReplicationResponse_Result_Replication::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListHaReplicationResponse.Result.Replication)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // int32 sourceVolumeId = 2;
  if (this->sourcevolumeid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_sourcevolumeid(), target);
  }

  // int32 sourceWalVolume_id = 3;
  if (this->sourcewalvolume_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_sourcewalvolume_id(), target);
  }

  // int32 destinationVolumeId = 4;
  if (this->destinationvolumeid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_destinationvolumeid(), target);
  }

  // int32 destinationWalVolumeId = 5;
  if (this->destinationwalvolumeid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_destinationwalvolumeid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListHaReplicationResponse.Result.Replication)
  return target;
}

size_t ListHaReplicationResponse_Result_Replication::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListHaReplicationResponse.Result.Replication)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  // int32 sourceVolumeId = 2;
  if (this->sourcevolumeid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_sourcevolumeid());
  }

  // int32 sourceWalVolume_id = 3;
  if (this->sourcewalvolume_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_sourcewalvolume_id());
  }

  // int32 destinationVolumeId = 4;
  if (this->destinationvolumeid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_destinationvolumeid());
  }

  // int32 destinationWalVolumeId = 5;
  if (this->destinationwalvolumeid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_destinationwalvolumeid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListHaReplicationResponse_Result_Replication::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListHaReplicationResponse.Result.Replication)
  GOOGLE_DCHECK_NE(&from, this);
  const ListHaReplicationResponse_Result_Replication* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListHaReplicationResponse_Result_Replication>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListHaReplicationResponse.Result.Replication)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListHaReplicationResponse.Result.Replication)
    MergeFrom(*source);
  }
}

void ListHaReplicationResponse_Result_Replication::MergeFrom(const ListHaReplicationResponse_Result_Replication& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListHaReplicationResponse.Result.Replication)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.sourcevolumeid() != 0) {
    _internal_set_sourcevolumeid(from._internal_sourcevolumeid());
  }
  if (from.sourcewalvolume_id() != 0) {
    _internal_set_sourcewalvolume_id(from._internal_sourcewalvolume_id());
  }
  if (from.destinationvolumeid() != 0) {
    _internal_set_destinationvolumeid(from._internal_destinationvolumeid());
  }
  if (from.destinationwalvolumeid() != 0) {
    _internal_set_destinationwalvolumeid(from._internal_destinationwalvolumeid());
  }
}

void ListHaReplicationResponse_Result_Replication::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListHaReplicationResponse.Result.Replication)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListHaReplicationResponse_Result_Replication::CopyFrom(const ListHaReplicationResponse_Result_Replication& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListHaReplicationResponse.Result.Replication)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListHaReplicationResponse_Result_Replication::IsInitialized() const {
  return true;
}

void ListHaReplicationResponse_Result_Replication::InternalSwap(ListHaReplicationResponse_Result_Replication* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListHaReplicationResponse_Result_Replication, destinationwalvolumeid_)
      + sizeof(ListHaReplicationResponse_Result_Replication::destinationwalvolumeid_)
      - PROTOBUF_FIELD_OFFSET(ListHaReplicationResponse_Result_Replication, id_)>(
          reinterpret_cast<char*>(&id_),
          reinterpret_cast<char*>(&other->id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListHaReplicationResponse_Result_Replication::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListHaReplicationResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const ListHaReplicationResponse_Result* msg);
};

const ::grpc_cli::Status&
ListHaReplicationResponse_Result::_Internal::status(const ListHaReplicationResponse_Result* msg) {
  return *msg->status_;
}
ListHaReplicationResponse_Result::ListHaReplicationResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  data_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListHaReplicationResponse.Result)
}
ListHaReplicationResponse_Result::ListHaReplicationResponse_Result(const ListHaReplicationResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      data_(from.data_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListHaReplicationResponse.Result)
}

void ListHaReplicationResponse_Result::SharedCtor() {
status_ = nullptr;
}

ListHaReplicationResponse_Result::~ListHaReplicationResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListHaReplicationResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListHaReplicationResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void ListHaReplicationResponse_Result::ArenaDtor(void* object) {
  ListHaReplicationResponse_Result* _this = reinterpret_cast< ListHaReplicationResponse_Result* >(object);
  (void)_this;
}
void ListHaReplicationResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListHaReplicationResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListHaReplicationResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListHaReplicationResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListHaReplicationResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .grpc_cli.ListHaReplicationResponse.Result.Replication data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListHaReplicationResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListHaReplicationResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // repeated .grpc_cli.ListHaReplicationResponse.Result.Replication data = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListHaReplicationResponse.Result)
  return target;
}

size_t ListHaReplicationResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListHaReplicationResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_cli.ListHaReplicationResponse.Result.Replication data = 2;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListHaReplicationResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListHaReplicationResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const ListHaReplicationResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListHaReplicationResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListHaReplicationResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListHaReplicationResponse.Result)
    MergeFrom(*source);
  }
}

void ListHaReplicationResponse_Result::MergeFrom(const ListHaReplicationResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListHaReplicationResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void ListHaReplicationResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListHaReplicationResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListHaReplicationResponse_Result::CopyFrom(const ListHaReplicationResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListHaReplicationResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListHaReplicationResponse_Result::IsInitialized() const {
  return true;
}

void ListHaReplicationResponse_Result::InternalSwap(ListHaReplicationResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  data_.InternalSwap(&other->data_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListHaReplicationResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListHaReplicationResponse::_Internal {
 public:
  static const ::grpc_cli::ListHaReplicationResponse_Result& result(const ListHaReplicationResponse* msg);
  static const ::grpc_cli::PosInfo& info(const ListHaReplicationResponse* msg);
};

const ::grpc_cli::ListHaReplicationResponse_Result&
ListHaReplicationResponse::_Internal::result(const ListHaReplicationResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
ListHaReplicationResponse::_Internal::info(const ListHaReplicationResponse* msg) {
  return *msg->info_;
}
ListHaReplicationResponse::ListHaReplicationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListHaReplicationResponse)
}
ListHaReplicationResponse::ListHaReplicationResponse(const ListHaReplicationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::ListHaReplicationResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListHaReplicationResponse)
}

void ListHaReplicationResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

ListHaReplicationResponse::~ListHaReplicationResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListHaReplicationResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListHaReplicationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void ListHaReplicationResponse::ArenaDtor(void* object) {
  ListHaReplicationResponse* _this = reinterpret_cast< ListHaReplicationResponse* >(object);
  (void)_this;
}
void ListHaReplicationResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListHaReplicationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListHaReplicationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListHaReplicationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListHaReplicationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListHaReplicationResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListHaReplicationResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ListHaReplicationResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListHaReplicationResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListHaReplicationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListHaReplicationResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListHaReplicationResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.ListHaReplicationResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListHaReplicationResponse)
  return target;
}

size_t ListHaReplicationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListHaReplicationResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.ListHaReplicationResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListHaReplicationResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListHaReplicationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListHaReplicationResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListHaReplicationResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListHaReplicationResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListHaReplicationResponse)
    MergeFrom(*source);
  }
}

void ListHaReplicationResponse::MergeFrom(const ListHaReplicationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListHaReplicationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::ListHaReplicationResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void ListHaReplicationResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListHaReplicationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListHaReplicationResponse::CopyFrom(const ListHaReplicationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListHaReplicationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListHaReplicationResponse::IsInitialized() const {
  return true;
}

void ListHaReplicationResponse::InternalSwap(ListHaReplicationResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListHaReplicationResponse, info_)
      + sizeof(ListHaReplicationResponse::info_)
      - PROTOBUF_FIELD_OFFSET(ListHaReplicationResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListHaReplicationResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StartHaReplicationRequest_Param::_Internal {
 public:
};

StartHaReplicationRequest_Param::StartHaReplicationRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.StartHaReplicationRequest.Param)
}
StartHaReplicationRequest_Param::StartHaReplicationRequest_Param(const StartHaReplicationRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  primarynodename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_primarynodename().empty()) {
    primarynodename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_primarynodename(), 
      GetArena());
  }
  primaryarrayname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_primaryarrayname().empty()) {
    primaryarrayname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_primaryarrayname(), 
      GetArena());
  }
  primaryvolumename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_primaryvolumename().empty()) {
    primaryvolumename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_primaryvolumename(), 
      GetArena());
  }
  primarywalvolumename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_primarywalvolumename().empty()) {
    primarywalvolumename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_primarywalvolumename(), 
      GetArena());
  }
  secondarynodename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_secondarynodename().empty()) {
    secondarynodename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_secondarynodename(), 
      GetArena());
  }
  secondaryarrayname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_secondaryarrayname().empty()) {
    secondaryarrayname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_secondaryarrayname(), 
      GetArena());
  }
  secondaryvolumename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_secondaryvolumename().empty()) {
    secondaryvolumename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_secondaryvolumename(), 
      GetArena());
  }
  secondarywalvolumename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_secondarywalvolumename().empty()) {
    secondarywalvolumename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_secondarywalvolumename(), 
      GetArena());
  }
  stuats_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_stuats().empty()) {
    stuats_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_stuats(), 
      GetArena());
  }
  timestamp_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_timestamp().empty()) {
    timestamp_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_timestamp(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.StartHaReplicationRequest.Param)
}

void StartHaReplicationRequest_Param::SharedCtor() {
primarynodename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
primaryarrayname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
primaryvolumename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
primarywalvolumename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
secondarynodename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
secondaryarrayname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
secondaryvolumename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
secondarywalvolumename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
stuats_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
timestamp_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StartHaReplicationRequest_Param::~StartHaReplicationRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.StartHaReplicationRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StartHaReplicationRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  primarynodename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  primaryarrayname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  primaryvolumename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  primarywalvolumename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  secondarynodename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  secondaryarrayname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  secondaryvolumename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  secondarywalvolumename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  stuats_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  timestamp_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StartHaReplicationRequest_Param::ArenaDtor(void* object) {
  StartHaReplicationRequest_Param* _this = reinterpret_cast< StartHaReplicationRequest_Param* >(object);
  (void)_this;
}
void StartHaReplicationRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartHaReplicationRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StartHaReplicationRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.StartHaReplicationRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  primarynodename_.ClearToEmpty();
  primaryarrayname_.ClearToEmpty();
  primaryvolumename_.ClearToEmpty();
  primarywalvolumename_.ClearToEmpty();
  secondarynodename_.ClearToEmpty();
  secondaryarrayname_.ClearToEmpty();
  secondaryvolumename_.ClearToEmpty();
  secondarywalvolumename_.ClearToEmpty();
  stuats_.ClearToEmpty();
  timestamp_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartHaReplicationRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string primaryNodeName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_primarynodename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StartHaReplicationRequest.Param.primaryNodeName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string primaryArrayName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_primaryarrayname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StartHaReplicationRequest.Param.primaryArrayName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string primaryVolumeName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_primaryvolumename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StartHaReplicationRequest.Param.primaryVolumeName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string primaryWalVolumeName = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_primarywalvolumename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StartHaReplicationRequest.Param.primaryWalVolumeName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string secondaryNodeName = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_secondarynodename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StartHaReplicationRequest.Param.secondaryNodeName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string secondaryArrayName = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_secondaryarrayname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StartHaReplicationRequest.Param.secondaryArrayName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string secondaryVolumeName = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_secondaryvolumename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StartHaReplicationRequest.Param.secondaryVolumeName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string secondaryWalVolumeName = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_secondarywalvolumename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StartHaReplicationRequest.Param.secondaryWalVolumeName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string stuats = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_stuats();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StartHaReplicationRequest.Param.stuats"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string timestamp = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_timestamp();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StartHaReplicationRequest.Param.timestamp"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartHaReplicationRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.StartHaReplicationRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string primaryNodeName = 1;
  if (this->primarynodename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_primarynodename().data(), static_cast<int>(this->_internal_primarynodename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StartHaReplicationRequest.Param.primaryNodeName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_primarynodename(), target);
  }

  // string primaryArrayName = 2;
  if (this->primaryarrayname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_primaryarrayname().data(), static_cast<int>(this->_internal_primaryarrayname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StartHaReplicationRequest.Param.primaryArrayName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_primaryarrayname(), target);
  }

  // string primaryVolumeName = 3;
  if (this->primaryvolumename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_primaryvolumename().data(), static_cast<int>(this->_internal_primaryvolumename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StartHaReplicationRequest.Param.primaryVolumeName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_primaryvolumename(), target);
  }

  // string primaryWalVolumeName = 4;
  if (this->primarywalvolumename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_primarywalvolumename().data(), static_cast<int>(this->_internal_primarywalvolumename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StartHaReplicationRequest.Param.primaryWalVolumeName");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_primarywalvolumename(), target);
  }

  // string secondaryNodeName = 5;
  if (this->secondarynodename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_secondarynodename().data(), static_cast<int>(this->_internal_secondarynodename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StartHaReplicationRequest.Param.secondaryNodeName");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_secondarynodename(), target);
  }

  // string secondaryArrayName = 6;
  if (this->secondaryarrayname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_secondaryarrayname().data(), static_cast<int>(this->_internal_secondaryarrayname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StartHaReplicationRequest.Param.secondaryArrayName");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_secondaryarrayname(), target);
  }

  // string secondaryVolumeName = 7;
  if (this->secondaryvolumename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_secondaryvolumename().data(), static_cast<int>(this->_internal_secondaryvolumename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StartHaReplicationRequest.Param.secondaryVolumeName");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_secondaryvolumename(), target);
  }

  // string secondaryWalVolumeName = 8;
  if (this->secondarywalvolumename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_secondarywalvolumename().data(), static_cast<int>(this->_internal_secondarywalvolumename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StartHaReplicationRequest.Param.secondaryWalVolumeName");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_secondarywalvolumename(), target);
  }

  // string stuats = 9;
  if (this->stuats().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_stuats().data(), static_cast<int>(this->_internal_stuats().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StartHaReplicationRequest.Param.stuats");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_stuats(), target);
  }

  // string timestamp = 10;
  if (this->timestamp().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_timestamp().data(), static_cast<int>(this->_internal_timestamp().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StartHaReplicationRequest.Param.timestamp");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.StartHaReplicationRequest.Param)
  return target;
}

size_t StartHaReplicationRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.StartHaReplicationRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string primaryNodeName = 1;
  if (this->primarynodename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_primarynodename());
  }

  // string primaryArrayName = 2;
  if (this->primaryarrayname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_primaryarrayname());
  }

  // string primaryVolumeName = 3;
  if (this->primaryvolumename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_primaryvolumename());
  }

  // string primaryWalVolumeName = 4;
  if (this->primarywalvolumename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_primarywalvolumename());
  }

  // string secondaryNodeName = 5;
  if (this->secondarynodename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_secondarynodename());
  }

  // string secondaryArrayName = 6;
  if (this->secondaryarrayname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_secondaryarrayname());
  }

  // string secondaryVolumeName = 7;
  if (this->secondaryvolumename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_secondaryvolumename());
  }

  // string secondaryWalVolumeName = 8;
  if (this->secondarywalvolumename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_secondarywalvolumename());
  }

  // string stuats = 9;
  if (this->stuats().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_stuats());
  }

  // string timestamp = 10;
  if (this->timestamp().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartHaReplicationRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.StartHaReplicationRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const StartHaReplicationRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StartHaReplicationRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.StartHaReplicationRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.StartHaReplicationRequest.Param)
    MergeFrom(*source);
  }
}

void StartHaReplicationRequest_Param::MergeFrom(const StartHaReplicationRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.StartHaReplicationRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.primarynodename().size() > 0) {
    _internal_set_primarynodename(from._internal_primarynodename());
  }
  if (from.primaryarrayname().size() > 0) {
    _internal_set_primaryarrayname(from._internal_primaryarrayname());
  }
  if (from.primaryvolumename().size() > 0) {
    _internal_set_primaryvolumename(from._internal_primaryvolumename());
  }
  if (from.primarywalvolumename().size() > 0) {
    _internal_set_primarywalvolumename(from._internal_primarywalvolumename());
  }
  if (from.secondarynodename().size() > 0) {
    _internal_set_secondarynodename(from._internal_secondarynodename());
  }
  if (from.secondaryarrayname().size() > 0) {
    _internal_set_secondaryarrayname(from._internal_secondaryarrayname());
  }
  if (from.secondaryvolumename().size() > 0) {
    _internal_set_secondaryvolumename(from._internal_secondaryvolumename());
  }
  if (from.secondarywalvolumename().size() > 0) {
    _internal_set_secondarywalvolumename(from._internal_secondarywalvolumename());
  }
  if (from.stuats().size() > 0) {
    _internal_set_stuats(from._internal_stuats());
  }
  if (from.timestamp().size() > 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
}

void StartHaReplicationRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.StartHaReplicationRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartHaReplicationRequest_Param::CopyFrom(const StartHaReplicationRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.StartHaReplicationRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartHaReplicationRequest_Param::IsInitialized() const {
  return true;
}

void StartHaReplicationRequest_Param::InternalSwap(StartHaReplicationRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  primarynodename_.Swap(&other->primarynodename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  primaryarrayname_.Swap(&other->primaryarrayname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  primaryvolumename_.Swap(&other->primaryvolumename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  primarywalvolumename_.Swap(&other->primarywalvolumename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  secondarynodename_.Swap(&other->secondarynodename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  secondaryarrayname_.Swap(&other->secondaryarrayname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  secondaryvolumename_.Swap(&other->secondaryvolumename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  secondarywalvolumename_.Swap(&other->secondarywalvolumename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  stuats_.Swap(&other->stuats_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  timestamp_.Swap(&other->timestamp_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata StartHaReplicationRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StartHaReplicationRequest::_Internal {
 public:
  static const ::grpc_cli::StartHaReplicationRequest_Param& param(const StartHaReplicationRequest* msg);
};

const ::grpc_cli::StartHaReplicationRequest_Param&
StartHaReplicationRequest::_Internal::param(const StartHaReplicationRequest* msg) {
  return *msg->param_;
}
StartHaReplicationRequest::StartHaReplicationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.StartHaReplicationRequest)
}
StartHaReplicationRequest::StartHaReplicationRequest(const StartHaReplicationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::StartHaReplicationRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.StartHaReplicationRequest)
}

void StartHaReplicationRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

StartHaReplicationRequest::~StartHaReplicationRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.StartHaReplicationRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StartHaReplicationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void StartHaReplicationRequest::ArenaDtor(void* object) {
  StartHaReplicationRequest* _this = reinterpret_cast< StartHaReplicationRequest* >(object);
  (void)_this;
}
void StartHaReplicationRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartHaReplicationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StartHaReplicationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.StartHaReplicationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartHaReplicationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StartHaReplicationRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StartHaReplicationRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StartHaReplicationRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.StartHaReplicationRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartHaReplicationRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.StartHaReplicationRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StartHaReplicationRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StartHaReplicationRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StartHaReplicationRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.StartHaReplicationRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.StartHaReplicationRequest)
  return target;
}

size_t StartHaReplicationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.StartHaReplicationRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.StartHaReplicationRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartHaReplicationRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.StartHaReplicationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StartHaReplicationRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StartHaReplicationRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.StartHaReplicationRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.StartHaReplicationRequest)
    MergeFrom(*source);
  }
}

void StartHaReplicationRequest::MergeFrom(const StartHaReplicationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.StartHaReplicationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::StartHaReplicationRequest_Param::MergeFrom(from._internal_param());
  }
}

void StartHaReplicationRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.StartHaReplicationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartHaReplicationRequest::CopyFrom(const StartHaReplicationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.StartHaReplicationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartHaReplicationRequest::IsInitialized() const {
  return true;
}

void StartHaReplicationRequest::InternalSwap(StartHaReplicationRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StartHaReplicationRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StartHaReplicationResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const StartHaReplicationResponse_Result* msg);
};

const ::grpc_cli::Status&
StartHaReplicationResponse_Result::_Internal::status(const StartHaReplicationResponse_Result* msg) {
  return *msg->status_;
}
StartHaReplicationResponse_Result::StartHaReplicationResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.StartHaReplicationResponse.Result)
}
StartHaReplicationResponse_Result::StartHaReplicationResponse_Result(const StartHaReplicationResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.StartHaReplicationResponse.Result)
}

void StartHaReplicationResponse_Result::SharedCtor() {
status_ = nullptr;
}

StartHaReplicationResponse_Result::~StartHaReplicationResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.StartHaReplicationResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StartHaReplicationResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void StartHaReplicationResponse_Result::ArenaDtor(void* object) {
  StartHaReplicationResponse_Result* _this = reinterpret_cast< StartHaReplicationResponse_Result* >(object);
  (void)_this;
}
void StartHaReplicationResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartHaReplicationResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StartHaReplicationResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.StartHaReplicationResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartHaReplicationResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartHaReplicationResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.StartHaReplicationResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.StartHaReplicationResponse.Result)
  return target;
}

size_t StartHaReplicationResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.StartHaReplicationResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartHaReplicationResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.StartHaReplicationResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const StartHaReplicationResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StartHaReplicationResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.StartHaReplicationResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.StartHaReplicationResponse.Result)
    MergeFrom(*source);
  }
}

void StartHaReplicationResponse_Result::MergeFrom(const StartHaReplicationResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.StartHaReplicationResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void StartHaReplicationResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.StartHaReplicationResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartHaReplicationResponse_Result::CopyFrom(const StartHaReplicationResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.StartHaReplicationResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartHaReplicationResponse_Result::IsInitialized() const {
  return true;
}

void StartHaReplicationResponse_Result::InternalSwap(StartHaReplicationResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StartHaReplicationResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StartHaReplicationResponse::_Internal {
 public:
  static const ::grpc_cli::StartHaReplicationResponse_Result& result(const StartHaReplicationResponse* msg);
  static const ::grpc_cli::PosInfo& info(const StartHaReplicationResponse* msg);
};

const ::grpc_cli::StartHaReplicationResponse_Result&
StartHaReplicationResponse::_Internal::result(const StartHaReplicationResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
StartHaReplicationResponse::_Internal::info(const StartHaReplicationResponse* msg) {
  return *msg->info_;
}
StartHaReplicationResponse::StartHaReplicationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.StartHaReplicationResponse)
}
StartHaReplicationResponse::StartHaReplicationResponse(const StartHaReplicationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::StartHaReplicationResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.StartHaReplicationResponse)
}

void StartHaReplicationResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

StartHaReplicationResponse::~StartHaReplicationResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.StartHaReplicationResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StartHaReplicationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void StartHaReplicationResponse::ArenaDtor(void* object) {
  StartHaReplicationResponse* _this = reinterpret_cast< StartHaReplicationResponse* >(object);
  (void)_this;
}
void StartHaReplicationResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartHaReplicationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StartHaReplicationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.StartHaReplicationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartHaReplicationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StartHaReplicationResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StartHaReplicationResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.StartHaReplicationResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartHaReplicationResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.StartHaReplicationResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StartHaReplicationResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StartHaReplicationResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.StartHaReplicationResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.StartHaReplicationResponse)
  return target;
}

size_t StartHaReplicationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.StartHaReplicationResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.StartHaReplicationResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartHaReplicationResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.StartHaReplicationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StartHaReplicationResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StartHaReplicationResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.StartHaReplicationResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.StartHaReplicationResponse)
    MergeFrom(*source);
  }
}

void StartHaReplicationResponse::MergeFrom(const StartHaReplicationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.StartHaReplicationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::StartHaReplicationResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void StartHaReplicationResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.StartHaReplicationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartHaReplicationResponse::CopyFrom(const StartHaReplicationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.StartHaReplicationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartHaReplicationResponse::IsInitialized() const {
  return true;
}

void StartHaReplicationResponse::InternalSwap(StartHaReplicationResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StartHaReplicationResponse, info_)
      + sizeof(StartHaReplicationResponse::info_)
      - PROTOBUF_FIELD_OFFSET(StartHaReplicationResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StartHaReplicationResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetLogLevelRequest_Param::_Internal {
 public:
};

SetLogLevelRequest_Param::SetLogLevelRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SetLogLevelRequest.Param)
}
SetLogLevelRequest_Param::SetLogLevelRequest_Param(const SetLogLevelRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  level_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_level().empty()) {
    level_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_level(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SetLogLevelRequest.Param)
}

void SetLogLevelRequest_Param::SharedCtor() {
level_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SetLogLevelRequest_Param::~SetLogLevelRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.SetLogLevelRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetLogLevelRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  level_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SetLogLevelRequest_Param::ArenaDtor(void* object) {
  SetLogLevelRequest_Param* _this = reinterpret_cast< SetLogLevelRequest_Param* >(object);
  (void)_this;
}
void SetLogLevelRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetLogLevelRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetLogLevelRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SetLogLevelRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  level_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetLogLevelRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string level = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_level();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetLogLevelRequest.Param.level"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetLogLevelRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SetLogLevelRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string level = 1;
  if (this->level().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_level().data(), static_cast<int>(this->_internal_level().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetLogLevelRequest.Param.level");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SetLogLevelRequest.Param)
  return target;
}

size_t SetLogLevelRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SetLogLevelRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string level = 1;
  if (this->level().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_level());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetLogLevelRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SetLogLevelRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const SetLogLevelRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetLogLevelRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SetLogLevelRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SetLogLevelRequest.Param)
    MergeFrom(*source);
  }
}

void SetLogLevelRequest_Param::MergeFrom(const SetLogLevelRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SetLogLevelRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.level().size() > 0) {
    _internal_set_level(from._internal_level());
  }
}

void SetLogLevelRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SetLogLevelRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLogLevelRequest_Param::CopyFrom(const SetLogLevelRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SetLogLevelRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLogLevelRequest_Param::IsInitialized() const {
  return true;
}

void SetLogLevelRequest_Param::InternalSwap(SetLogLevelRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  level_.Swap(&other->level_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SetLogLevelRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetLogLevelRequest::_Internal {
 public:
  static const ::grpc_cli::SetLogLevelRequest_Param& param(const SetLogLevelRequest* msg);
};

const ::grpc_cli::SetLogLevelRequest_Param&
SetLogLevelRequest::_Internal::param(const SetLogLevelRequest* msg) {
  return *msg->param_;
}
SetLogLevelRequest::SetLogLevelRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SetLogLevelRequest)
}
SetLogLevelRequest::SetLogLevelRequest(const SetLogLevelRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::SetLogLevelRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SetLogLevelRequest)
}

void SetLogLevelRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

SetLogLevelRequest::~SetLogLevelRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.SetLogLevelRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetLogLevelRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void SetLogLevelRequest::ArenaDtor(void* object) {
  SetLogLevelRequest* _this = reinterpret_cast< SetLogLevelRequest* >(object);
  (void)_this;
}
void SetLogLevelRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetLogLevelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetLogLevelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SetLogLevelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetLogLevelRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetLogLevelRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetLogLevelRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetLogLevelRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.SetLogLevelRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetLogLevelRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SetLogLevelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetLogLevelRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetLogLevelRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetLogLevelRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.SetLogLevelRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SetLogLevelRequest)
  return target;
}

size_t SetLogLevelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SetLogLevelRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.SetLogLevelRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetLogLevelRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SetLogLevelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetLogLevelRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetLogLevelRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SetLogLevelRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SetLogLevelRequest)
    MergeFrom(*source);
  }
}

void SetLogLevelRequest::MergeFrom(const SetLogLevelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SetLogLevelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::SetLogLevelRequest_Param::MergeFrom(from._internal_param());
  }
}

void SetLogLevelRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SetLogLevelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLogLevelRequest::CopyFrom(const SetLogLevelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SetLogLevelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLogLevelRequest::IsInitialized() const {
  return true;
}

void SetLogLevelRequest::InternalSwap(SetLogLevelRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetLogLevelRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetLogLevelResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const SetLogLevelResponse_Result* msg);
};

const ::grpc_cli::Status&
SetLogLevelResponse_Result::_Internal::status(const SetLogLevelResponse_Result* msg) {
  return *msg->status_;
}
SetLogLevelResponse_Result::SetLogLevelResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SetLogLevelResponse.Result)
}
SetLogLevelResponse_Result::SetLogLevelResponse_Result(const SetLogLevelResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SetLogLevelResponse.Result)
}

void SetLogLevelResponse_Result::SharedCtor() {
status_ = nullptr;
}

SetLogLevelResponse_Result::~SetLogLevelResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.SetLogLevelResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetLogLevelResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void SetLogLevelResponse_Result::ArenaDtor(void* object) {
  SetLogLevelResponse_Result* _this = reinterpret_cast< SetLogLevelResponse_Result* >(object);
  (void)_this;
}
void SetLogLevelResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetLogLevelResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetLogLevelResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SetLogLevelResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetLogLevelResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetLogLevelResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SetLogLevelResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SetLogLevelResponse.Result)
  return target;
}

size_t SetLogLevelResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SetLogLevelResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetLogLevelResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SetLogLevelResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const SetLogLevelResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetLogLevelResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SetLogLevelResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SetLogLevelResponse.Result)
    MergeFrom(*source);
  }
}

void SetLogLevelResponse_Result::MergeFrom(const SetLogLevelResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SetLogLevelResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void SetLogLevelResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SetLogLevelResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLogLevelResponse_Result::CopyFrom(const SetLogLevelResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SetLogLevelResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLogLevelResponse_Result::IsInitialized() const {
  return true;
}

void SetLogLevelResponse_Result::InternalSwap(SetLogLevelResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetLogLevelResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetLogLevelResponse::_Internal {
 public:
  static const ::grpc_cli::SetLogLevelResponse_Result& result(const SetLogLevelResponse* msg);
  static const ::grpc_cli::PosInfo& info(const SetLogLevelResponse* msg);
};

const ::grpc_cli::SetLogLevelResponse_Result&
SetLogLevelResponse::_Internal::result(const SetLogLevelResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
SetLogLevelResponse::_Internal::info(const SetLogLevelResponse* msg) {
  return *msg->info_;
}
SetLogLevelResponse::SetLogLevelResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SetLogLevelResponse)
}
SetLogLevelResponse::SetLogLevelResponse(const SetLogLevelResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::SetLogLevelResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SetLogLevelResponse)
}

void SetLogLevelResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

SetLogLevelResponse::~SetLogLevelResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.SetLogLevelResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetLogLevelResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void SetLogLevelResponse::ArenaDtor(void* object) {
  SetLogLevelResponse* _this = reinterpret_cast< SetLogLevelResponse* >(object);
  (void)_this;
}
void SetLogLevelResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetLogLevelResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetLogLevelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SetLogLevelResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetLogLevelResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetLogLevelResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetLogLevelResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.SetLogLevelResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetLogLevelResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SetLogLevelResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetLogLevelResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetLogLevelResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.SetLogLevelResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SetLogLevelResponse)
  return target;
}

size_t SetLogLevelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SetLogLevelResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.SetLogLevelResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetLogLevelResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SetLogLevelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetLogLevelResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetLogLevelResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SetLogLevelResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SetLogLevelResponse)
    MergeFrom(*source);
  }
}

void SetLogLevelResponse::MergeFrom(const SetLogLevelResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SetLogLevelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::SetLogLevelResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void SetLogLevelResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SetLogLevelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLogLevelResponse::CopyFrom(const SetLogLevelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SetLogLevelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLogLevelResponse::IsInitialized() const {
  return true;
}

void SetLogLevelResponse::InternalSwap(SetLogLevelResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetLogLevelResponse, info_)
      + sizeof(SetLogLevelResponse::info_)
      - PROTOBUF_FIELD_OFFSET(SetLogLevelResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetLogLevelResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetLogPreferenceRequest_Param::_Internal {
 public:
};

SetLogPreferenceRequest_Param::SetLogPreferenceRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SetLogPreferenceRequest.Param)
}
SetLogPreferenceRequest_Param::SetLogPreferenceRequest_Param(const SetLogPreferenceRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  structuredlogging_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_structuredlogging().empty()) {
    structuredlogging_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_structuredlogging(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SetLogPreferenceRequest.Param)
}

void SetLogPreferenceRequest_Param::SharedCtor() {
structuredlogging_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SetLogPreferenceRequest_Param::~SetLogPreferenceRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.SetLogPreferenceRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetLogPreferenceRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  structuredlogging_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SetLogPreferenceRequest_Param::ArenaDtor(void* object) {
  SetLogPreferenceRequest_Param* _this = reinterpret_cast< SetLogPreferenceRequest_Param* >(object);
  (void)_this;
}
void SetLogPreferenceRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetLogPreferenceRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetLogPreferenceRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SetLogPreferenceRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  structuredlogging_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetLogPreferenceRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string structuredLogging = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_structuredlogging();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetLogPreferenceRequest.Param.structuredLogging"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetLogPreferenceRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SetLogPreferenceRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string structuredLogging = 1;
  if (this->structuredlogging().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_structuredlogging().data(), static_cast<int>(this->_internal_structuredlogging().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetLogPreferenceRequest.Param.structuredLogging");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_structuredlogging(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SetLogPreferenceRequest.Param)
  return target;
}

size_t SetLogPreferenceRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SetLogPreferenceRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string structuredLogging = 1;
  if (this->structuredlogging().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_structuredlogging());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetLogPreferenceRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SetLogPreferenceRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const SetLogPreferenceRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetLogPreferenceRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SetLogPreferenceRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SetLogPreferenceRequest.Param)
    MergeFrom(*source);
  }
}

void SetLogPreferenceRequest_Param::MergeFrom(const SetLogPreferenceRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SetLogPreferenceRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.structuredlogging().size() > 0) {
    _internal_set_structuredlogging(from._internal_structuredlogging());
  }
}

void SetLogPreferenceRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SetLogPreferenceRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLogPreferenceRequest_Param::CopyFrom(const SetLogPreferenceRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SetLogPreferenceRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLogPreferenceRequest_Param::IsInitialized() const {
  return true;
}

void SetLogPreferenceRequest_Param::InternalSwap(SetLogPreferenceRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  structuredlogging_.Swap(&other->structuredlogging_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SetLogPreferenceRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetLogPreferenceRequest::_Internal {
 public:
  static const ::grpc_cli::SetLogPreferenceRequest_Param& param(const SetLogPreferenceRequest* msg);
};

const ::grpc_cli::SetLogPreferenceRequest_Param&
SetLogPreferenceRequest::_Internal::param(const SetLogPreferenceRequest* msg) {
  return *msg->param_;
}
SetLogPreferenceRequest::SetLogPreferenceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SetLogPreferenceRequest)
}
SetLogPreferenceRequest::SetLogPreferenceRequest(const SetLogPreferenceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::SetLogPreferenceRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SetLogPreferenceRequest)
}

void SetLogPreferenceRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

SetLogPreferenceRequest::~SetLogPreferenceRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.SetLogPreferenceRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetLogPreferenceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void SetLogPreferenceRequest::ArenaDtor(void* object) {
  SetLogPreferenceRequest* _this = reinterpret_cast< SetLogPreferenceRequest* >(object);
  (void)_this;
}
void SetLogPreferenceRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetLogPreferenceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetLogPreferenceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SetLogPreferenceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetLogPreferenceRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetLogPreferenceRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetLogPreferenceRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetLogPreferenceRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.SetLogPreferenceRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetLogPreferenceRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SetLogPreferenceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetLogPreferenceRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetLogPreferenceRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetLogPreferenceRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.SetLogPreferenceRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SetLogPreferenceRequest)
  return target;
}

size_t SetLogPreferenceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SetLogPreferenceRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.SetLogPreferenceRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetLogPreferenceRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SetLogPreferenceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetLogPreferenceRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetLogPreferenceRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SetLogPreferenceRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SetLogPreferenceRequest)
    MergeFrom(*source);
  }
}

void SetLogPreferenceRequest::MergeFrom(const SetLogPreferenceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SetLogPreferenceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::SetLogPreferenceRequest_Param::MergeFrom(from._internal_param());
  }
}

void SetLogPreferenceRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SetLogPreferenceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLogPreferenceRequest::CopyFrom(const SetLogPreferenceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SetLogPreferenceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLogPreferenceRequest::IsInitialized() const {
  return true;
}

void SetLogPreferenceRequest::InternalSwap(SetLogPreferenceRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetLogPreferenceRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetLogPreferenceResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const SetLogPreferenceResponse_Result* msg);
};

const ::grpc_cli::Status&
SetLogPreferenceResponse_Result::_Internal::status(const SetLogPreferenceResponse_Result* msg) {
  return *msg->status_;
}
SetLogPreferenceResponse_Result::SetLogPreferenceResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SetLogPreferenceResponse.Result)
}
SetLogPreferenceResponse_Result::SetLogPreferenceResponse_Result(const SetLogPreferenceResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SetLogPreferenceResponse.Result)
}

void SetLogPreferenceResponse_Result::SharedCtor() {
status_ = nullptr;
}

SetLogPreferenceResponse_Result::~SetLogPreferenceResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.SetLogPreferenceResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetLogPreferenceResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void SetLogPreferenceResponse_Result::ArenaDtor(void* object) {
  SetLogPreferenceResponse_Result* _this = reinterpret_cast< SetLogPreferenceResponse_Result* >(object);
  (void)_this;
}
void SetLogPreferenceResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetLogPreferenceResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetLogPreferenceResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SetLogPreferenceResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetLogPreferenceResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetLogPreferenceResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SetLogPreferenceResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SetLogPreferenceResponse.Result)
  return target;
}

size_t SetLogPreferenceResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SetLogPreferenceResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetLogPreferenceResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SetLogPreferenceResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const SetLogPreferenceResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetLogPreferenceResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SetLogPreferenceResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SetLogPreferenceResponse.Result)
    MergeFrom(*source);
  }
}

void SetLogPreferenceResponse_Result::MergeFrom(const SetLogPreferenceResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SetLogPreferenceResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void SetLogPreferenceResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SetLogPreferenceResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLogPreferenceResponse_Result::CopyFrom(const SetLogPreferenceResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SetLogPreferenceResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLogPreferenceResponse_Result::IsInitialized() const {
  return true;
}

void SetLogPreferenceResponse_Result::InternalSwap(SetLogPreferenceResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetLogPreferenceResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetLogPreferenceResponse::_Internal {
 public:
  static const ::grpc_cli::SetLogPreferenceResponse_Result& result(const SetLogPreferenceResponse* msg);
  static const ::grpc_cli::PosInfo& info(const SetLogPreferenceResponse* msg);
};

const ::grpc_cli::SetLogPreferenceResponse_Result&
SetLogPreferenceResponse::_Internal::result(const SetLogPreferenceResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
SetLogPreferenceResponse::_Internal::info(const SetLogPreferenceResponse* msg) {
  return *msg->info_;
}
SetLogPreferenceResponse::SetLogPreferenceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SetLogPreferenceResponse)
}
SetLogPreferenceResponse::SetLogPreferenceResponse(const SetLogPreferenceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::SetLogPreferenceResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SetLogPreferenceResponse)
}

void SetLogPreferenceResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

SetLogPreferenceResponse::~SetLogPreferenceResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.SetLogPreferenceResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetLogPreferenceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void SetLogPreferenceResponse::ArenaDtor(void* object) {
  SetLogPreferenceResponse* _this = reinterpret_cast< SetLogPreferenceResponse* >(object);
  (void)_this;
}
void SetLogPreferenceResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetLogPreferenceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetLogPreferenceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SetLogPreferenceResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetLogPreferenceResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetLogPreferenceResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetLogPreferenceResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.SetLogPreferenceResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetLogPreferenceResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SetLogPreferenceResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetLogPreferenceResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetLogPreferenceResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.SetLogPreferenceResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SetLogPreferenceResponse)
  return target;
}

size_t SetLogPreferenceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SetLogPreferenceResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.SetLogPreferenceResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetLogPreferenceResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SetLogPreferenceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetLogPreferenceResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetLogPreferenceResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SetLogPreferenceResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SetLogPreferenceResponse)
    MergeFrom(*source);
  }
}

void SetLogPreferenceResponse::MergeFrom(const SetLogPreferenceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SetLogPreferenceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::SetLogPreferenceResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void SetLogPreferenceResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SetLogPreferenceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLogPreferenceResponse::CopyFrom(const SetLogPreferenceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SetLogPreferenceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLogPreferenceResponse::IsInitialized() const {
  return true;
}

void SetLogPreferenceResponse::InternalSwap(SetLogPreferenceResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetLogPreferenceResponse, info_)
      + sizeof(SetLogPreferenceResponse::info_)
      - PROTOBUF_FIELD_OFFSET(SetLogPreferenceResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetLogPreferenceResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class LoggerInfoRequest::_Internal {
 public:
};

LoggerInfoRequest::LoggerInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.LoggerInfoRequest)
}
LoggerInfoRequest::LoggerInfoRequest(const LoggerInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.LoggerInfoRequest)
}

void LoggerInfoRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

LoggerInfoRequest::~LoggerInfoRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.LoggerInfoRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LoggerInfoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LoggerInfoRequest::ArenaDtor(void* object) {
  LoggerInfoRequest* _this = reinterpret_cast< LoggerInfoRequest* >(object);
  (void)_this;
}
void LoggerInfoRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LoggerInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LoggerInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.LoggerInfoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoggerInfoRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.LoggerInfoRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.LoggerInfoRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.LoggerInfoRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoggerInfoRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.LoggerInfoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.LoggerInfoRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.LoggerInfoRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.LoggerInfoRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.LoggerInfoRequest)
  return target;
}

size_t LoggerInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.LoggerInfoRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoggerInfoRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.LoggerInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LoggerInfoRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoggerInfoRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.LoggerInfoRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.LoggerInfoRequest)
    MergeFrom(*source);
  }
}

void LoggerInfoRequest::MergeFrom(const LoggerInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.LoggerInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
}

void LoggerInfoRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.LoggerInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoggerInfoRequest::CopyFrom(const LoggerInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.LoggerInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoggerInfoRequest::IsInitialized() const {
  return true;
}

void LoggerInfoRequest::InternalSwap(LoggerInfoRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata LoggerInfoRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class LoggerInfoResponse_Result_LoggerInfo::_Internal {
 public:
};

LoggerInfoResponse_Result_LoggerInfo::LoggerInfoResponse_Result_LoggerInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.LoggerInfoResponse.Result.LoggerInfo)
}
LoggerInfoResponse_Result_LoggerInfo::LoggerInfoResponse_Result_LoggerInfo(const LoggerInfoResponse_Result_LoggerInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  minorlogpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_minorlogpath().empty()) {
    minorlogpath_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_minorlogpath(), 
      GetArena());
  }
  majorlogpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_majorlogpath().empty()) {
    majorlogpath_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_majorlogpath(), 
      GetArena());
  }
  logfilesizeinmb_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_logfilesizeinmb().empty()) {
    logfilesizeinmb_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_logfilesizeinmb(), 
      GetArena());
  }
  minallowableloglevel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_minallowableloglevel().empty()) {
    minallowableloglevel_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_minallowableloglevel(), 
      GetArena());
  }
  filterincluded_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_filterincluded().empty()) {
    filterincluded_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_filterincluded(), 
      GetArena());
  }
  filterexcluded_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_filterexcluded().empty()) {
    filterexcluded_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_filterexcluded(), 
      GetArena());
  }
  ::memcpy(&logfilerotationcount_, &from.logfilerotationcount_,
    static_cast<size_t>(reinterpret_cast<char*>(&structuredlogging_) -
    reinterpret_cast<char*>(&logfilerotationcount_)) + sizeof(structuredlogging_));
  // @@protoc_insertion_point(copy_constructor:grpc_cli.LoggerInfoResponse.Result.LoggerInfo)
}

void LoggerInfoResponse_Result_LoggerInfo::SharedCtor() {
minorlogpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
majorlogpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
logfilesizeinmb_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
minallowableloglevel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
filterincluded_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
filterexcluded_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&logfilerotationcount_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&structuredlogging_) -
    reinterpret_cast<char*>(&logfilerotationcount_)) + sizeof(structuredlogging_));
}

LoggerInfoResponse_Result_LoggerInfo::~LoggerInfoResponse_Result_LoggerInfo() {
  // @@protoc_insertion_point(destructor:grpc_cli.LoggerInfoResponse.Result.LoggerInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LoggerInfoResponse_Result_LoggerInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  minorlogpath_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  majorlogpath_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  logfilesizeinmb_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  minallowableloglevel_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  filterincluded_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  filterexcluded_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LoggerInfoResponse_Result_LoggerInfo::ArenaDtor(void* object) {
  LoggerInfoResponse_Result_LoggerInfo* _this = reinterpret_cast< LoggerInfoResponse_Result_LoggerInfo* >(object);
  (void)_this;
}
void LoggerInfoResponse_Result_LoggerInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LoggerInfoResponse_Result_LoggerInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LoggerInfoResponse_Result_LoggerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.LoggerInfoResponse.Result.LoggerInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  minorlogpath_.ClearToEmpty();
  majorlogpath_.ClearToEmpty();
  logfilesizeinmb_.ClearToEmpty();
  minallowableloglevel_.ClearToEmpty();
  filterincluded_.ClearToEmpty();
  filterexcluded_.ClearToEmpty();
  ::memset(&logfilerotationcount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&structuredlogging_) -
      reinterpret_cast<char*>(&logfilerotationcount_)) + sizeof(structuredlogging_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoggerInfoResponse_Result_LoggerInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string minorLogPath = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_minorlogpath();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.LoggerInfoResponse.Result.LoggerInfo.minorLogPath"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string majorLogPath = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_majorlogpath();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.LoggerInfoResponse.Result.LoggerInfo.majorLogPath"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string logfileSizeInMb = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_logfilesizeinmb();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.LoggerInfoResponse.Result.LoggerInfo.logfileSizeInMb"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 logfileRotationCount = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          logfilerotationcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string minAllowableLogLevel = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_minallowableloglevel();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.LoggerInfoResponse.Result.LoggerInfo.minAllowableLogLevel"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 filterEnabled = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          filterenabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string filterIncluded = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_filterincluded();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.LoggerInfoResponse.Result.LoggerInfo.filterIncluded"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string filterExcluded = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_filterexcluded();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.LoggerInfoResponse.Result.LoggerInfo.filterExcluded"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool structuredLogging = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          structuredlogging_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoggerInfoResponse_Result_LoggerInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.LoggerInfoResponse.Result.LoggerInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string minorLogPath = 1;
  if (this->minorlogpath().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_minorlogpath().data(), static_cast<int>(this->_internal_minorlogpath().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.LoggerInfoResponse.Result.LoggerInfo.minorLogPath");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_minorlogpath(), target);
  }

  // string majorLogPath = 2;
  if (this->majorlogpath().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_majorlogpath().data(), static_cast<int>(this->_internal_majorlogpath().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.LoggerInfoResponse.Result.LoggerInfo.majorLogPath");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_majorlogpath(), target);
  }

  // string logfileSizeInMb = 3;
  if (this->logfilesizeinmb().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_logfilesizeinmb().data(), static_cast<int>(this->_internal_logfilesizeinmb().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.LoggerInfoResponse.Result.LoggerInfo.logfileSizeInMb");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_logfilesizeinmb(), target);
  }

  // int32 logfileRotationCount = 4;
  if (this->logfilerotationcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_logfilerotationcount(), target);
  }

  // string minAllowableLogLevel = 5;
  if (this->minallowableloglevel().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_minallowableloglevel().data(), static_cast<int>(this->_internal_minallowableloglevel().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.LoggerInfoResponse.Result.LoggerInfo.minAllowableLogLevel");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_minallowableloglevel(), target);
  }

  // int32 filterEnabled = 6;
  if (this->filterenabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_filterenabled(), target);
  }

  // string filterIncluded = 7;
  if (this->filterincluded().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filterincluded().data(), static_cast<int>(this->_internal_filterincluded().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.LoggerInfoResponse.Result.LoggerInfo.filterIncluded");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_filterincluded(), target);
  }

  // string filterExcluded = 8;
  if (this->filterexcluded().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filterexcluded().data(), static_cast<int>(this->_internal_filterexcluded().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.LoggerInfoResponse.Result.LoggerInfo.filterExcluded");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_filterexcluded(), target);
  }

  // bool structuredLogging = 9;
  if (this->structuredlogging() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(9, this->_internal_structuredlogging(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.LoggerInfoResponse.Result.LoggerInfo)
  return target;
}

size_t LoggerInfoResponse_Result_LoggerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.LoggerInfoResponse.Result.LoggerInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string minorLogPath = 1;
  if (this->minorlogpath().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_minorlogpath());
  }

  // string majorLogPath = 2;
  if (this->majorlogpath().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_majorlogpath());
  }

  // string logfileSizeInMb = 3;
  if (this->logfilesizeinmb().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_logfilesizeinmb());
  }

  // string minAllowableLogLevel = 5;
  if (this->minallowableloglevel().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_minallowableloglevel());
  }

  // string filterIncluded = 7;
  if (this->filterincluded().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_filterincluded());
  }

  // string filterExcluded = 8;
  if (this->filterexcluded().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_filterexcluded());
  }

  // int32 logfileRotationCount = 4;
  if (this->logfilerotationcount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_logfilerotationcount());
  }

  // int32 filterEnabled = 6;
  if (this->filterenabled() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_filterenabled());
  }

  // bool structuredLogging = 9;
  if (this->structuredlogging() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoggerInfoResponse_Result_LoggerInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.LoggerInfoResponse.Result.LoggerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const LoggerInfoResponse_Result_LoggerInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoggerInfoResponse_Result_LoggerInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.LoggerInfoResponse.Result.LoggerInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.LoggerInfoResponse.Result.LoggerInfo)
    MergeFrom(*source);
  }
}

void LoggerInfoResponse_Result_LoggerInfo::MergeFrom(const LoggerInfoResponse_Result_LoggerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.LoggerInfoResponse.Result.LoggerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.minorlogpath().size() > 0) {
    _internal_set_minorlogpath(from._internal_minorlogpath());
  }
  if (from.majorlogpath().size() > 0) {
    _internal_set_majorlogpath(from._internal_majorlogpath());
  }
  if (from.logfilesizeinmb().size() > 0) {
    _internal_set_logfilesizeinmb(from._internal_logfilesizeinmb());
  }
  if (from.minallowableloglevel().size() > 0) {
    _internal_set_minallowableloglevel(from._internal_minallowableloglevel());
  }
  if (from.filterincluded().size() > 0) {
    _internal_set_filterincluded(from._internal_filterincluded());
  }
  if (from.filterexcluded().size() > 0) {
    _internal_set_filterexcluded(from._internal_filterexcluded());
  }
  if (from.logfilerotationcount() != 0) {
    _internal_set_logfilerotationcount(from._internal_logfilerotationcount());
  }
  if (from.filterenabled() != 0) {
    _internal_set_filterenabled(from._internal_filterenabled());
  }
  if (from.structuredlogging() != 0) {
    _internal_set_structuredlogging(from._internal_structuredlogging());
  }
}

void LoggerInfoResponse_Result_LoggerInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.LoggerInfoResponse.Result.LoggerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoggerInfoResponse_Result_LoggerInfo::CopyFrom(const LoggerInfoResponse_Result_LoggerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.LoggerInfoResponse.Result.LoggerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoggerInfoResponse_Result_LoggerInfo::IsInitialized() const {
  return true;
}

void LoggerInfoResponse_Result_LoggerInfo::InternalSwap(LoggerInfoResponse_Result_LoggerInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  minorlogpath_.Swap(&other->minorlogpath_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  majorlogpath_.Swap(&other->majorlogpath_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  logfilesizeinmb_.Swap(&other->logfilesizeinmb_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  minallowableloglevel_.Swap(&other->minallowableloglevel_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  filterincluded_.Swap(&other->filterincluded_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  filterexcluded_.Swap(&other->filterexcluded_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LoggerInfoResponse_Result_LoggerInfo, structuredlogging_)
      + sizeof(LoggerInfoResponse_Result_LoggerInfo::structuredlogging_)
      - PROTOBUF_FIELD_OFFSET(LoggerInfoResponse_Result_LoggerInfo, logfilerotationcount_)>(
          reinterpret_cast<char*>(&logfilerotationcount_),
          reinterpret_cast<char*>(&other->logfilerotationcount_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LoggerInfoResponse_Result_LoggerInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class LoggerInfoResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const LoggerInfoResponse_Result* msg);
  static const ::grpc_cli::LoggerInfoResponse_Result_LoggerInfo& data(const LoggerInfoResponse_Result* msg);
};

const ::grpc_cli::Status&
LoggerInfoResponse_Result::_Internal::status(const LoggerInfoResponse_Result* msg) {
  return *msg->status_;
}
const ::grpc_cli::LoggerInfoResponse_Result_LoggerInfo&
LoggerInfoResponse_Result::_Internal::data(const LoggerInfoResponse_Result* msg) {
  return *msg->data_;
}
LoggerInfoResponse_Result::LoggerInfoResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.LoggerInfoResponse.Result)
}
LoggerInfoResponse_Result::LoggerInfoResponse_Result(const LoggerInfoResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_data()) {
    data_ = new ::grpc_cli::LoggerInfoResponse_Result_LoggerInfo(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.LoggerInfoResponse.Result)
}

void LoggerInfoResponse_Result::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&data_) -
    reinterpret_cast<char*>(&status_)) + sizeof(data_));
}

LoggerInfoResponse_Result::~LoggerInfoResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.LoggerInfoResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LoggerInfoResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete data_;
}

void LoggerInfoResponse_Result::ArenaDtor(void* object) {
  LoggerInfoResponse_Result* _this = reinterpret_cast< LoggerInfoResponse_Result* >(object);
  (void)_this;
}
void LoggerInfoResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LoggerInfoResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LoggerInfoResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.LoggerInfoResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoggerInfoResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.LoggerInfoResponse.Result.LoggerInfo data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoggerInfoResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.LoggerInfoResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .grpc_cli.LoggerInfoResponse.Result.LoggerInfo data = 2;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.LoggerInfoResponse.Result)
  return target;
}

size_t LoggerInfoResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.LoggerInfoResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .grpc_cli.LoggerInfoResponse.Result.LoggerInfo data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoggerInfoResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.LoggerInfoResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const LoggerInfoResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoggerInfoResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.LoggerInfoResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.LoggerInfoResponse.Result)
    MergeFrom(*source);
  }
}

void LoggerInfoResponse_Result::MergeFrom(const LoggerInfoResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.LoggerInfoResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
  if (from.has_data()) {
    _internal_mutable_data()->::grpc_cli::LoggerInfoResponse_Result_LoggerInfo::MergeFrom(from._internal_data());
  }
}

void LoggerInfoResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.LoggerInfoResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoggerInfoResponse_Result::CopyFrom(const LoggerInfoResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.LoggerInfoResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoggerInfoResponse_Result::IsInitialized() const {
  return true;
}

void LoggerInfoResponse_Result::InternalSwap(LoggerInfoResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LoggerInfoResponse_Result, data_)
      + sizeof(LoggerInfoResponse_Result::data_)
      - PROTOBUF_FIELD_OFFSET(LoggerInfoResponse_Result, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LoggerInfoResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class LoggerInfoResponse::_Internal {
 public:
  static const ::grpc_cli::LoggerInfoResponse_Result& result(const LoggerInfoResponse* msg);
  static const ::grpc_cli::PosInfo& info(const LoggerInfoResponse* msg);
};

const ::grpc_cli::LoggerInfoResponse_Result&
LoggerInfoResponse::_Internal::result(const LoggerInfoResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
LoggerInfoResponse::_Internal::info(const LoggerInfoResponse* msg) {
  return *msg->info_;
}
LoggerInfoResponse::LoggerInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.LoggerInfoResponse)
}
LoggerInfoResponse::LoggerInfoResponse(const LoggerInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::LoggerInfoResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.LoggerInfoResponse)
}

void LoggerInfoResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

LoggerInfoResponse::~LoggerInfoResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.LoggerInfoResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LoggerInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void LoggerInfoResponse::ArenaDtor(void* object) {
  LoggerInfoResponse* _this = reinterpret_cast< LoggerInfoResponse* >(object);
  (void)_this;
}
void LoggerInfoResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LoggerInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LoggerInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.LoggerInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoggerInfoResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.LoggerInfoResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.LoggerInfoResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.LoggerInfoResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoggerInfoResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.LoggerInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.LoggerInfoResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.LoggerInfoResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.LoggerInfoResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.LoggerInfoResponse)
  return target;
}

size_t LoggerInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.LoggerInfoResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.LoggerInfoResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoggerInfoResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.LoggerInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LoggerInfoResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoggerInfoResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.LoggerInfoResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.LoggerInfoResponse)
    MergeFrom(*source);
  }
}

void LoggerInfoResponse::MergeFrom(const LoggerInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.LoggerInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::LoggerInfoResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void LoggerInfoResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.LoggerInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoggerInfoResponse::CopyFrom(const LoggerInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.LoggerInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoggerInfoResponse::IsInitialized() const {
  return true;
}

void LoggerInfoResponse::InternalSwap(LoggerInfoResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LoggerInfoResponse, info_)
      + sizeof(LoggerInfoResponse::info_)
      - PROTOBUF_FIELD_OFFSET(LoggerInfoResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LoggerInfoResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetLogLevelRequest::_Internal {
 public:
};

GetLogLevelRequest::GetLogLevelRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.GetLogLevelRequest)
}
GetLogLevelRequest::GetLogLevelRequest(const GetLogLevelRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.GetLogLevelRequest)
}

void GetLogLevelRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetLogLevelRequest::~GetLogLevelRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.GetLogLevelRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetLogLevelRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetLogLevelRequest::ArenaDtor(void* object) {
  GetLogLevelRequest* _this = reinterpret_cast< GetLogLevelRequest* >(object);
  (void)_this;
}
void GetLogLevelRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetLogLevelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetLogLevelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.GetLogLevelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLogLevelRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.GetLogLevelRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.GetLogLevelRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.GetLogLevelRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetLogLevelRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.GetLogLevelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.GetLogLevelRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.GetLogLevelRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.GetLogLevelRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.GetLogLevelRequest)
  return target;
}

size_t GetLogLevelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.GetLogLevelRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetLogLevelRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.GetLogLevelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLogLevelRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetLogLevelRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.GetLogLevelRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.GetLogLevelRequest)
    MergeFrom(*source);
  }
}

void GetLogLevelRequest::MergeFrom(const GetLogLevelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.GetLogLevelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
}

void GetLogLevelRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.GetLogLevelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLogLevelRequest::CopyFrom(const GetLogLevelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.GetLogLevelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLogLevelRequest::IsInitialized() const {
  return true;
}

void GetLogLevelRequest::InternalSwap(GetLogLevelRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLogLevelRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetLogLevelResponse_Result_LogLevel::_Internal {
 public:
};

GetLogLevelResponse_Result_LogLevel::GetLogLevelResponse_Result_LogLevel(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.GetLogLevelResponse.Result.LogLevel)
}
GetLogLevelResponse_Result_LogLevel::GetLogLevelResponse_Result_LogLevel(const GetLogLevelResponse_Result_LogLevel& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  level_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_level().empty()) {
    level_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_level(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.GetLogLevelResponse.Result.LogLevel)
}

void GetLogLevelResponse_Result_LogLevel::SharedCtor() {
level_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetLogLevelResponse_Result_LogLevel::~GetLogLevelResponse_Result_LogLevel() {
  // @@protoc_insertion_point(destructor:grpc_cli.GetLogLevelResponse.Result.LogLevel)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetLogLevelResponse_Result_LogLevel::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  level_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetLogLevelResponse_Result_LogLevel::ArenaDtor(void* object) {
  GetLogLevelResponse_Result_LogLevel* _this = reinterpret_cast< GetLogLevelResponse_Result_LogLevel* >(object);
  (void)_this;
}
void GetLogLevelResponse_Result_LogLevel::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetLogLevelResponse_Result_LogLevel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetLogLevelResponse_Result_LogLevel::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.GetLogLevelResponse.Result.LogLevel)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  level_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLogLevelResponse_Result_LogLevel::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string level = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_level();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.GetLogLevelResponse.Result.LogLevel.level"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetLogLevelResponse_Result_LogLevel::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.GetLogLevelResponse.Result.LogLevel)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string level = 1;
  if (this->level().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_level().data(), static_cast<int>(this->_internal_level().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.GetLogLevelResponse.Result.LogLevel.level");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.GetLogLevelResponse.Result.LogLevel)
  return target;
}

size_t GetLogLevelResponse_Result_LogLevel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.GetLogLevelResponse.Result.LogLevel)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string level = 1;
  if (this->level().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_level());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetLogLevelResponse_Result_LogLevel::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.GetLogLevelResponse.Result.LogLevel)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLogLevelResponse_Result_LogLevel* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetLogLevelResponse_Result_LogLevel>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.GetLogLevelResponse.Result.LogLevel)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.GetLogLevelResponse.Result.LogLevel)
    MergeFrom(*source);
  }
}

void GetLogLevelResponse_Result_LogLevel::MergeFrom(const GetLogLevelResponse_Result_LogLevel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.GetLogLevelResponse.Result.LogLevel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.level().size() > 0) {
    _internal_set_level(from._internal_level());
  }
}

void GetLogLevelResponse_Result_LogLevel::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.GetLogLevelResponse.Result.LogLevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLogLevelResponse_Result_LogLevel::CopyFrom(const GetLogLevelResponse_Result_LogLevel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.GetLogLevelResponse.Result.LogLevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLogLevelResponse_Result_LogLevel::IsInitialized() const {
  return true;
}

void GetLogLevelResponse_Result_LogLevel::InternalSwap(GetLogLevelResponse_Result_LogLevel* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  level_.Swap(&other->level_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLogLevelResponse_Result_LogLevel::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetLogLevelResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const GetLogLevelResponse_Result* msg);
  static const ::grpc_cli::GetLogLevelResponse_Result_LogLevel& data(const GetLogLevelResponse_Result* msg);
};

const ::grpc_cli::Status&
GetLogLevelResponse_Result::_Internal::status(const GetLogLevelResponse_Result* msg) {
  return *msg->status_;
}
const ::grpc_cli::GetLogLevelResponse_Result_LogLevel&
GetLogLevelResponse_Result::_Internal::data(const GetLogLevelResponse_Result* msg) {
  return *msg->data_;
}
GetLogLevelResponse_Result::GetLogLevelResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.GetLogLevelResponse.Result)
}
GetLogLevelResponse_Result::GetLogLevelResponse_Result(const GetLogLevelResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_data()) {
    data_ = new ::grpc_cli::GetLogLevelResponse_Result_LogLevel(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.GetLogLevelResponse.Result)
}

void GetLogLevelResponse_Result::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&data_) -
    reinterpret_cast<char*>(&status_)) + sizeof(data_));
}

GetLogLevelResponse_Result::~GetLogLevelResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.GetLogLevelResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetLogLevelResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete data_;
}

void GetLogLevelResponse_Result::ArenaDtor(void* object) {
  GetLogLevelResponse_Result* _this = reinterpret_cast< GetLogLevelResponse_Result* >(object);
  (void)_this;
}
void GetLogLevelResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetLogLevelResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetLogLevelResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.GetLogLevelResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLogLevelResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.GetLogLevelResponse.Result.LogLevel data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetLogLevelResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.GetLogLevelResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .grpc_cli.GetLogLevelResponse.Result.LogLevel data = 2;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.GetLogLevelResponse.Result)
  return target;
}

size_t GetLogLevelResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.GetLogLevelResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .grpc_cli.GetLogLevelResponse.Result.LogLevel data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetLogLevelResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.GetLogLevelResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLogLevelResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetLogLevelResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.GetLogLevelResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.GetLogLevelResponse.Result)
    MergeFrom(*source);
  }
}

void GetLogLevelResponse_Result::MergeFrom(const GetLogLevelResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.GetLogLevelResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
  if (from.has_data()) {
    _internal_mutable_data()->::grpc_cli::GetLogLevelResponse_Result_LogLevel::MergeFrom(from._internal_data());
  }
}

void GetLogLevelResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.GetLogLevelResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLogLevelResponse_Result::CopyFrom(const GetLogLevelResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.GetLogLevelResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLogLevelResponse_Result::IsInitialized() const {
  return true;
}

void GetLogLevelResponse_Result::InternalSwap(GetLogLevelResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetLogLevelResponse_Result, data_)
      + sizeof(GetLogLevelResponse_Result::data_)
      - PROTOBUF_FIELD_OFFSET(GetLogLevelResponse_Result, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLogLevelResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetLogLevelResponse::_Internal {
 public:
  static const ::grpc_cli::GetLogLevelResponse_Result& result(const GetLogLevelResponse* msg);
  static const ::grpc_cli::PosInfo& info(const GetLogLevelResponse* msg);
};

const ::grpc_cli::GetLogLevelResponse_Result&
GetLogLevelResponse::_Internal::result(const GetLogLevelResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
GetLogLevelResponse::_Internal::info(const GetLogLevelResponse* msg) {
  return *msg->info_;
}
GetLogLevelResponse::GetLogLevelResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.GetLogLevelResponse)
}
GetLogLevelResponse::GetLogLevelResponse(const GetLogLevelResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::GetLogLevelResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.GetLogLevelResponse)
}

void GetLogLevelResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

GetLogLevelResponse::~GetLogLevelResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.GetLogLevelResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetLogLevelResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void GetLogLevelResponse::ArenaDtor(void* object) {
  GetLogLevelResponse* _this = reinterpret_cast< GetLogLevelResponse* >(object);
  (void)_this;
}
void GetLogLevelResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetLogLevelResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetLogLevelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.GetLogLevelResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLogLevelResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.GetLogLevelResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.GetLogLevelResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.GetLogLevelResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetLogLevelResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.GetLogLevelResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.GetLogLevelResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.GetLogLevelResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.GetLogLevelResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.GetLogLevelResponse)
  return target;
}

size_t GetLogLevelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.GetLogLevelResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.GetLogLevelResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetLogLevelResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.GetLogLevelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLogLevelResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetLogLevelResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.GetLogLevelResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.GetLogLevelResponse)
    MergeFrom(*source);
  }
}

void GetLogLevelResponse::MergeFrom(const GetLogLevelResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.GetLogLevelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::GetLogLevelResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void GetLogLevelResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.GetLogLevelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLogLevelResponse::CopyFrom(const GetLogLevelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.GetLogLevelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLogLevelResponse::IsInitialized() const {
  return true;
}

void GetLogLevelResponse::InternalSwap(GetLogLevelResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetLogLevelResponse, info_)
      + sizeof(GetLogLevelResponse::info_)
      - PROTOBUF_FIELD_OFFSET(GetLogLevelResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLogLevelResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ApplyLogFilterRequest::_Internal {
 public:
};

ApplyLogFilterRequest::ApplyLogFilterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ApplyLogFilterRequest)
}
ApplyLogFilterRequest::ApplyLogFilterRequest(const ApplyLogFilterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ApplyLogFilterRequest)
}

void ApplyLogFilterRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ApplyLogFilterRequest::~ApplyLogFilterRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.ApplyLogFilterRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ApplyLogFilterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ApplyLogFilterRequest::ArenaDtor(void* object) {
  ApplyLogFilterRequest* _this = reinterpret_cast< ApplyLogFilterRequest* >(object);
  (void)_this;
}
void ApplyLogFilterRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ApplyLogFilterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ApplyLogFilterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ApplyLogFilterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ApplyLogFilterRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ApplyLogFilterRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ApplyLogFilterRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ApplyLogFilterRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ApplyLogFilterRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ApplyLogFilterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ApplyLogFilterRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ApplyLogFilterRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ApplyLogFilterRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ApplyLogFilterRequest)
  return target;
}

size_t ApplyLogFilterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ApplyLogFilterRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApplyLogFilterRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ApplyLogFilterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ApplyLogFilterRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ApplyLogFilterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ApplyLogFilterRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ApplyLogFilterRequest)
    MergeFrom(*source);
  }
}

void ApplyLogFilterRequest::MergeFrom(const ApplyLogFilterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ApplyLogFilterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
}

void ApplyLogFilterRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ApplyLogFilterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApplyLogFilterRequest::CopyFrom(const ApplyLogFilterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ApplyLogFilterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApplyLogFilterRequest::IsInitialized() const {
  return true;
}

void ApplyLogFilterRequest::InternalSwap(ApplyLogFilterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ApplyLogFilterRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ApplyLogFilterResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const ApplyLogFilterResponse_Result* msg);
};

const ::grpc_cli::Status&
ApplyLogFilterResponse_Result::_Internal::status(const ApplyLogFilterResponse_Result* msg) {
  return *msg->status_;
}
ApplyLogFilterResponse_Result::ApplyLogFilterResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ApplyLogFilterResponse.Result)
}
ApplyLogFilterResponse_Result::ApplyLogFilterResponse_Result(const ApplyLogFilterResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ApplyLogFilterResponse.Result)
}

void ApplyLogFilterResponse_Result::SharedCtor() {
status_ = nullptr;
}

ApplyLogFilterResponse_Result::~ApplyLogFilterResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.ApplyLogFilterResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ApplyLogFilterResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void ApplyLogFilterResponse_Result::ArenaDtor(void* object) {
  ApplyLogFilterResponse_Result* _this = reinterpret_cast< ApplyLogFilterResponse_Result* >(object);
  (void)_this;
}
void ApplyLogFilterResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ApplyLogFilterResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ApplyLogFilterResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ApplyLogFilterResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ApplyLogFilterResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ApplyLogFilterResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ApplyLogFilterResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ApplyLogFilterResponse.Result)
  return target;
}

size_t ApplyLogFilterResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ApplyLogFilterResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApplyLogFilterResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ApplyLogFilterResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const ApplyLogFilterResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ApplyLogFilterResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ApplyLogFilterResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ApplyLogFilterResponse.Result)
    MergeFrom(*source);
  }
}

void ApplyLogFilterResponse_Result::MergeFrom(const ApplyLogFilterResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ApplyLogFilterResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void ApplyLogFilterResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ApplyLogFilterResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApplyLogFilterResponse_Result::CopyFrom(const ApplyLogFilterResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ApplyLogFilterResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApplyLogFilterResponse_Result::IsInitialized() const {
  return true;
}

void ApplyLogFilterResponse_Result::InternalSwap(ApplyLogFilterResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ApplyLogFilterResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ApplyLogFilterResponse::_Internal {
 public:
  static const ::grpc_cli::ApplyLogFilterResponse_Result& result(const ApplyLogFilterResponse* msg);
  static const ::grpc_cli::PosInfo& info(const ApplyLogFilterResponse* msg);
};

const ::grpc_cli::ApplyLogFilterResponse_Result&
ApplyLogFilterResponse::_Internal::result(const ApplyLogFilterResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
ApplyLogFilterResponse::_Internal::info(const ApplyLogFilterResponse* msg) {
  return *msg->info_;
}
ApplyLogFilterResponse::ApplyLogFilterResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ApplyLogFilterResponse)
}
ApplyLogFilterResponse::ApplyLogFilterResponse(const ApplyLogFilterResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::ApplyLogFilterResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ApplyLogFilterResponse)
}

void ApplyLogFilterResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

ApplyLogFilterResponse::~ApplyLogFilterResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.ApplyLogFilterResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ApplyLogFilterResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void ApplyLogFilterResponse::ArenaDtor(void* object) {
  ApplyLogFilterResponse* _this = reinterpret_cast< ApplyLogFilterResponse* >(object);
  (void)_this;
}
void ApplyLogFilterResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ApplyLogFilterResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ApplyLogFilterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ApplyLogFilterResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ApplyLogFilterResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ApplyLogFilterResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ApplyLogFilterResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ApplyLogFilterResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ApplyLogFilterResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ApplyLogFilterResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ApplyLogFilterResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ApplyLogFilterResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.ApplyLogFilterResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ApplyLogFilterResponse)
  return target;
}

size_t ApplyLogFilterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ApplyLogFilterResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.ApplyLogFilterResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ApplyLogFilterResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ApplyLogFilterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ApplyLogFilterResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ApplyLogFilterResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ApplyLogFilterResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ApplyLogFilterResponse)
    MergeFrom(*source);
  }
}

void ApplyLogFilterResponse::MergeFrom(const ApplyLogFilterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ApplyLogFilterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::ApplyLogFilterResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void ApplyLogFilterResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ApplyLogFilterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ApplyLogFilterResponse::CopyFrom(const ApplyLogFilterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ApplyLogFilterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ApplyLogFilterResponse::IsInitialized() const {
  return true;
}

void ApplyLogFilterResponse::InternalSwap(ApplyLogFilterResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ApplyLogFilterResponse, info_)
      + sizeof(ApplyLogFilterResponse::info_)
      - PROTOBUF_FIELD_OFFSET(ApplyLogFilterResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ApplyLogFilterResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateDeviceRequest_Param::_Internal {
 public:
};

CreateDeviceRequest_Param::CreateDeviceRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.CreateDeviceRequest.Param)
}
CreateDeviceRequest_Param::CreateDeviceRequest_Param(const CreateDeviceRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  devtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_devtype().empty()) {
    devtype_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_devtype(), 
      GetArena());
  }
  ::memcpy(&numblocks_, &from.numblocks_,
    static_cast<size_t>(reinterpret_cast<char*>(&numa_) -
    reinterpret_cast<char*>(&numblocks_)) + sizeof(numa_));
  // @@protoc_insertion_point(copy_constructor:grpc_cli.CreateDeviceRequest.Param)
}

void CreateDeviceRequest_Param::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
devtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&numblocks_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&numa_) -
    reinterpret_cast<char*>(&numblocks_)) + sizeof(numa_));
}

CreateDeviceRequest_Param::~CreateDeviceRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.CreateDeviceRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateDeviceRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  devtype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateDeviceRequest_Param::ArenaDtor(void* object) {
  CreateDeviceRequest_Param* _this = reinterpret_cast< CreateDeviceRequest_Param* >(object);
  (void)_this;
}
void CreateDeviceRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateDeviceRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateDeviceRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.CreateDeviceRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  devtype_.ClearToEmpty();
  ::memset(&numblocks_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&numa_) -
      reinterpret_cast<char*>(&numblocks_)) + sizeof(numa_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateDeviceRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateDeviceRequest.Param.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 numBlocks = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          numblocks_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 blockSize = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          blocksize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string devType = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_devtype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateDeviceRequest.Param.devType"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 numa = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          numa_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateDeviceRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.CreateDeviceRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateDeviceRequest.Param.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // uint32 numBlocks = 2;
  if (this->numblocks() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_numblocks(), target);
  }

  // uint32 blockSize = 3;
  if (this->blocksize() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_blocksize(), target);
  }

  // string devType = 4;
  if (this->devtype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_devtype().data(), static_cast<int>(this->_internal_devtype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateDeviceRequest.Param.devType");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_devtype(), target);
  }

  // uint32 numa = 5;
  if (this->numa() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_numa(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.CreateDeviceRequest.Param)
  return target;
}

size_t CreateDeviceRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.CreateDeviceRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string devType = 4;
  if (this->devtype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_devtype());
  }

  // uint32 numBlocks = 2;
  if (this->numblocks() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_numblocks());
  }

  // uint32 blockSize = 3;
  if (this->blocksize() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_blocksize());
  }

  // uint32 numa = 5;
  if (this->numa() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_numa());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateDeviceRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.CreateDeviceRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateDeviceRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateDeviceRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.CreateDeviceRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.CreateDeviceRequest.Param)
    MergeFrom(*source);
  }
}

void CreateDeviceRequest_Param::MergeFrom(const CreateDeviceRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.CreateDeviceRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.devtype().size() > 0) {
    _internal_set_devtype(from._internal_devtype());
  }
  if (from.numblocks() != 0) {
    _internal_set_numblocks(from._internal_numblocks());
  }
  if (from.blocksize() != 0) {
    _internal_set_blocksize(from._internal_blocksize());
  }
  if (from.numa() != 0) {
    _internal_set_numa(from._internal_numa());
  }
}

void CreateDeviceRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.CreateDeviceRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateDeviceRequest_Param::CopyFrom(const CreateDeviceRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.CreateDeviceRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateDeviceRequest_Param::IsInitialized() const {
  return true;
}

void CreateDeviceRequest_Param::InternalSwap(CreateDeviceRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  devtype_.Swap(&other->devtype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateDeviceRequest_Param, numa_)
      + sizeof(CreateDeviceRequest_Param::numa_)
      - PROTOBUF_FIELD_OFFSET(CreateDeviceRequest_Param, numblocks_)>(
          reinterpret_cast<char*>(&numblocks_),
          reinterpret_cast<char*>(&other->numblocks_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateDeviceRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateDeviceRequest::_Internal {
 public:
  static const ::grpc_cli::CreateDeviceRequest_Param& param(const CreateDeviceRequest* msg);
};

const ::grpc_cli::CreateDeviceRequest_Param&
CreateDeviceRequest::_Internal::param(const CreateDeviceRequest* msg) {
  return *msg->param_;
}
CreateDeviceRequest::CreateDeviceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.CreateDeviceRequest)
}
CreateDeviceRequest::CreateDeviceRequest(const CreateDeviceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::CreateDeviceRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.CreateDeviceRequest)
}

void CreateDeviceRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

CreateDeviceRequest::~CreateDeviceRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.CreateDeviceRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateDeviceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void CreateDeviceRequest::ArenaDtor(void* object) {
  CreateDeviceRequest* _this = reinterpret_cast< CreateDeviceRequest* >(object);
  (void)_this;
}
void CreateDeviceRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateDeviceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateDeviceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.CreateDeviceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateDeviceRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateDeviceRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateDeviceRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateDeviceRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.CreateDeviceRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateDeviceRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.CreateDeviceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateDeviceRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateDeviceRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateDeviceRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.CreateDeviceRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.CreateDeviceRequest)
  return target;
}

size_t CreateDeviceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.CreateDeviceRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.CreateDeviceRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateDeviceRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.CreateDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateDeviceRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateDeviceRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.CreateDeviceRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.CreateDeviceRequest)
    MergeFrom(*source);
  }
}

void CreateDeviceRequest::MergeFrom(const CreateDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.CreateDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::CreateDeviceRequest_Param::MergeFrom(from._internal_param());
  }
}

void CreateDeviceRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.CreateDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateDeviceRequest::CopyFrom(const CreateDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.CreateDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateDeviceRequest::IsInitialized() const {
  return true;
}

void CreateDeviceRequest::InternalSwap(CreateDeviceRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateDeviceRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateDeviceResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const CreateDeviceResponse_Result* msg);
};

const ::grpc_cli::Status&
CreateDeviceResponse_Result::_Internal::status(const CreateDeviceResponse_Result* msg) {
  return *msg->status_;
}
CreateDeviceResponse_Result::CreateDeviceResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.CreateDeviceResponse.Result)
}
CreateDeviceResponse_Result::CreateDeviceResponse_Result(const CreateDeviceResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.CreateDeviceResponse.Result)
}

void CreateDeviceResponse_Result::SharedCtor() {
status_ = nullptr;
}

CreateDeviceResponse_Result::~CreateDeviceResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.CreateDeviceResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateDeviceResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void CreateDeviceResponse_Result::ArenaDtor(void* object) {
  CreateDeviceResponse_Result* _this = reinterpret_cast< CreateDeviceResponse_Result* >(object);
  (void)_this;
}
void CreateDeviceResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateDeviceResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateDeviceResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.CreateDeviceResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateDeviceResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateDeviceResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.CreateDeviceResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.CreateDeviceResponse.Result)
  return target;
}

size_t CreateDeviceResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.CreateDeviceResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateDeviceResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.CreateDeviceResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateDeviceResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateDeviceResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.CreateDeviceResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.CreateDeviceResponse.Result)
    MergeFrom(*source);
  }
}

void CreateDeviceResponse_Result::MergeFrom(const CreateDeviceResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.CreateDeviceResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void CreateDeviceResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.CreateDeviceResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateDeviceResponse_Result::CopyFrom(const CreateDeviceResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.CreateDeviceResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateDeviceResponse_Result::IsInitialized() const {
  return true;
}

void CreateDeviceResponse_Result::InternalSwap(CreateDeviceResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateDeviceResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateDeviceResponse::_Internal {
 public:
  static const ::grpc_cli::CreateDeviceResponse_Result& result(const CreateDeviceResponse* msg);
  static const ::grpc_cli::PosInfo& info(const CreateDeviceResponse* msg);
};

const ::grpc_cli::CreateDeviceResponse_Result&
CreateDeviceResponse::_Internal::result(const CreateDeviceResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
CreateDeviceResponse::_Internal::info(const CreateDeviceResponse* msg) {
  return *msg->info_;
}
CreateDeviceResponse::CreateDeviceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.CreateDeviceResponse)
}
CreateDeviceResponse::CreateDeviceResponse(const CreateDeviceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::CreateDeviceResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.CreateDeviceResponse)
}

void CreateDeviceResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

CreateDeviceResponse::~CreateDeviceResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.CreateDeviceResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateDeviceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void CreateDeviceResponse::ArenaDtor(void* object) {
  CreateDeviceResponse* _this = reinterpret_cast< CreateDeviceResponse* >(object);
  (void)_this;
}
void CreateDeviceResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateDeviceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateDeviceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.CreateDeviceResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateDeviceResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateDeviceResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateDeviceResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.CreateDeviceResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateDeviceResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.CreateDeviceResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateDeviceResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateDeviceResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.CreateDeviceResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.CreateDeviceResponse)
  return target;
}

size_t CreateDeviceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.CreateDeviceResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.CreateDeviceResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateDeviceResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.CreateDeviceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateDeviceResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateDeviceResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.CreateDeviceResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.CreateDeviceResponse)
    MergeFrom(*source);
  }
}

void CreateDeviceResponse::MergeFrom(const CreateDeviceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.CreateDeviceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::CreateDeviceResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void CreateDeviceResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.CreateDeviceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateDeviceResponse::CopyFrom(const CreateDeviceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.CreateDeviceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateDeviceResponse::IsInitialized() const {
  return true;
}

void CreateDeviceResponse::InternalSwap(CreateDeviceResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateDeviceResponse, info_)
      + sizeof(CreateDeviceResponse::info_)
      - PROTOBUF_FIELD_OFFSET(CreateDeviceResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateDeviceResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ScanDeviceRequest::_Internal {
 public:
};

ScanDeviceRequest::ScanDeviceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ScanDeviceRequest)
}
ScanDeviceRequest::ScanDeviceRequest(const ScanDeviceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ScanDeviceRequest)
}

void ScanDeviceRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ScanDeviceRequest::~ScanDeviceRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.ScanDeviceRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ScanDeviceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ScanDeviceRequest::ArenaDtor(void* object) {
  ScanDeviceRequest* _this = reinterpret_cast< ScanDeviceRequest* >(object);
  (void)_this;
}
void ScanDeviceRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ScanDeviceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ScanDeviceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ScanDeviceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ScanDeviceRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ScanDeviceRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ScanDeviceRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ScanDeviceRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ScanDeviceRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ScanDeviceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ScanDeviceRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ScanDeviceRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ScanDeviceRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ScanDeviceRequest)
  return target;
}

size_t ScanDeviceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ScanDeviceRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScanDeviceRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ScanDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ScanDeviceRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ScanDeviceRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ScanDeviceRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ScanDeviceRequest)
    MergeFrom(*source);
  }
}

void ScanDeviceRequest::MergeFrom(const ScanDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ScanDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
}

void ScanDeviceRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ScanDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScanDeviceRequest::CopyFrom(const ScanDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ScanDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScanDeviceRequest::IsInitialized() const {
  return true;
}

void ScanDeviceRequest::InternalSwap(ScanDeviceRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ScanDeviceRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ScanDeviceResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const ScanDeviceResponse_Result* msg);
};

const ::grpc_cli::Status&
ScanDeviceResponse_Result::_Internal::status(const ScanDeviceResponse_Result* msg) {
  return *msg->status_;
}
ScanDeviceResponse_Result::ScanDeviceResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ScanDeviceResponse.Result)
}
ScanDeviceResponse_Result::ScanDeviceResponse_Result(const ScanDeviceResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ScanDeviceResponse.Result)
}

void ScanDeviceResponse_Result::SharedCtor() {
status_ = nullptr;
}

ScanDeviceResponse_Result::~ScanDeviceResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.ScanDeviceResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ScanDeviceResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void ScanDeviceResponse_Result::ArenaDtor(void* object) {
  ScanDeviceResponse_Result* _this = reinterpret_cast< ScanDeviceResponse_Result* >(object);
  (void)_this;
}
void ScanDeviceResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ScanDeviceResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ScanDeviceResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ScanDeviceResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ScanDeviceResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ScanDeviceResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ScanDeviceResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ScanDeviceResponse.Result)
  return target;
}

size_t ScanDeviceResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ScanDeviceResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScanDeviceResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ScanDeviceResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const ScanDeviceResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ScanDeviceResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ScanDeviceResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ScanDeviceResponse.Result)
    MergeFrom(*source);
  }
}

void ScanDeviceResponse_Result::MergeFrom(const ScanDeviceResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ScanDeviceResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void ScanDeviceResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ScanDeviceResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScanDeviceResponse_Result::CopyFrom(const ScanDeviceResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ScanDeviceResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScanDeviceResponse_Result::IsInitialized() const {
  return true;
}

void ScanDeviceResponse_Result::InternalSwap(ScanDeviceResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ScanDeviceResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ScanDeviceResponse::_Internal {
 public:
  static const ::grpc_cli::ScanDeviceResponse_Result& result(const ScanDeviceResponse* msg);
  static const ::grpc_cli::PosInfo& info(const ScanDeviceResponse* msg);
};

const ::grpc_cli::ScanDeviceResponse_Result&
ScanDeviceResponse::_Internal::result(const ScanDeviceResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
ScanDeviceResponse::_Internal::info(const ScanDeviceResponse* msg) {
  return *msg->info_;
}
ScanDeviceResponse::ScanDeviceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ScanDeviceResponse)
}
ScanDeviceResponse::ScanDeviceResponse(const ScanDeviceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::ScanDeviceResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ScanDeviceResponse)
}

void ScanDeviceResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

ScanDeviceResponse::~ScanDeviceResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.ScanDeviceResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ScanDeviceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void ScanDeviceResponse::ArenaDtor(void* object) {
  ScanDeviceResponse* _this = reinterpret_cast< ScanDeviceResponse* >(object);
  (void)_this;
}
void ScanDeviceResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ScanDeviceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ScanDeviceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ScanDeviceResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ScanDeviceResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ScanDeviceResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ScanDeviceResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ScanDeviceResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ScanDeviceResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ScanDeviceResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ScanDeviceResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ScanDeviceResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.ScanDeviceResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ScanDeviceResponse)
  return target;
}

size_t ScanDeviceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ScanDeviceResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.ScanDeviceResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScanDeviceResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ScanDeviceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ScanDeviceResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ScanDeviceResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ScanDeviceResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ScanDeviceResponse)
    MergeFrom(*source);
  }
}

void ScanDeviceResponse::MergeFrom(const ScanDeviceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ScanDeviceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::ScanDeviceResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void ScanDeviceResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ScanDeviceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScanDeviceResponse::CopyFrom(const ScanDeviceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ScanDeviceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScanDeviceResponse::IsInitialized() const {
  return true;
}

void ScanDeviceResponse::InternalSwap(ScanDeviceResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ScanDeviceResponse, info_)
      + sizeof(ScanDeviceResponse::info_)
      - PROTOBUF_FIELD_OFFSET(ScanDeviceResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ScanDeviceResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Device::_Internal {
 public:
};

Device::Device(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.Device)
}
Device::Device(const Device& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_type().empty()) {
    type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_type(), 
      GetArena());
  }
  address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_address().empty()) {
    address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_address(), 
      GetArena());
  }
  class__.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_class_().empty()) {
    class__.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_class_(), 
      GetArena());
  }
  modelnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_modelnumber().empty()) {
    modelnumber_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_modelnumber(), 
      GetArena());
  }
  numa_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_numa().empty()) {
    numa_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_numa(), 
      GetArena());
  }
  serialnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_serialnumber().empty()) {
    serialnumber_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_serialnumber(), 
      GetArena());
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:grpc_cli.Device)
}

void Device::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
class__.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
modelnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
numa_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
serialnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
size_ = PROTOBUF_ULONGLONG(0);
}

Device::~Device() {
  // @@protoc_insertion_point(destructor:grpc_cli.Device)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Device::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  class__.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  modelnumber_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  numa_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  serialnumber_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Device::ArenaDtor(void* object) {
  Device* _this = reinterpret_cast< Device* >(object);
  (void)_this;
}
void Device::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Device::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Device::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.Device)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  type_.ClearToEmpty();
  address_.ClearToEmpty();
  class__.ClearToEmpty();
  modelnumber_.ClearToEmpty();
  numa_.ClearToEmpty();
  serialnumber_.ClearToEmpty();
  size_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Device::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Device.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Device.type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string address = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Device.address"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string class = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_class_();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Device.class"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string modelNumber = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_modelnumber();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Device.modelNumber"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string numa = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_numa();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Device.numa"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 size = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string serialNumber = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_serialnumber();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Device.serialNumber"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Device::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.Device)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Device.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Device.type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_type(), target);
  }

  // string address = 3;
  if (this->address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_address().data(), static_cast<int>(this->_internal_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Device.address");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_address(), target);
  }

  // string class = 4;
  if (this->class_().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_class_().data(), static_cast<int>(this->_internal_class_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Device.class");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_class_(), target);
  }

  // string modelNumber = 5;
  if (this->modelnumber().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_modelnumber().data(), static_cast<int>(this->_internal_modelnumber().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Device.modelNumber");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_modelnumber(), target);
  }

  // string numa = 6;
  if (this->numa().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_numa().data(), static_cast<int>(this->_internal_numa().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Device.numa");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_numa(), target);
  }

  // uint64 size = 7;
  if (this->size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(7, this->_internal_size(), target);
  }

  // string serialNumber = 8;
  if (this->serialnumber().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_serialnumber().data(), static_cast<int>(this->_internal_serialnumber().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Device.serialNumber");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_serialnumber(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.Device)
  return target;
}

size_t Device::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.Device)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string type = 2;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // string address = 3;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_address());
  }

  // string class = 4;
  if (this->class_().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_class_());
  }

  // string modelNumber = 5;
  if (this->modelnumber().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_modelnumber());
  }

  // string numa = 6;
  if (this->numa().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_numa());
  }

  // string serialNumber = 8;
  if (this->serialnumber().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_serialnumber());
  }

  // uint64 size = 7;
  if (this->size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Device::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.Device)
  GOOGLE_DCHECK_NE(&from, this);
  const Device* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Device>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.Device)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.Device)
    MergeFrom(*source);
  }
}

void Device::MergeFrom(const Device& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.Device)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.type().size() > 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.address().size() > 0) {
    _internal_set_address(from._internal_address());
  }
  if (from.class_().size() > 0) {
    _internal_set_class_(from._internal_class_());
  }
  if (from.modelnumber().size() > 0) {
    _internal_set_modelnumber(from._internal_modelnumber());
  }
  if (from.numa().size() > 0) {
    _internal_set_numa(from._internal_numa());
  }
  if (from.serialnumber().size() > 0) {
    _internal_set_serialnumber(from._internal_serialnumber());
  }
  if (from.size() != 0) {
    _internal_set_size(from._internal_size());
  }
}

void Device::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.Device)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Device::CopyFrom(const Device& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.Device)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Device::IsInitialized() const {
  return true;
}

void Device::InternalSwap(Device* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_.Swap(&other->type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  address_.Swap(&other->address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  class__.Swap(&other->class__, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  modelnumber_.Swap(&other->modelnumber_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  numa_.Swap(&other->numa_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  serialnumber_.Swap(&other->serialnumber_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(size_, other->size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Device::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListDeviceRequest::_Internal {
 public:
};

ListDeviceRequest::ListDeviceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListDeviceRequest)
}
ListDeviceRequest::ListDeviceRequest(const ListDeviceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListDeviceRequest)
}

void ListDeviceRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListDeviceRequest::~ListDeviceRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListDeviceRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListDeviceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListDeviceRequest::ArenaDtor(void* object) {
  ListDeviceRequest* _this = reinterpret_cast< ListDeviceRequest* >(object);
  (void)_this;
}
void ListDeviceRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListDeviceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListDeviceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListDeviceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListDeviceRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListDeviceRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListDeviceRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListDeviceRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListDeviceRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListDeviceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListDeviceRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListDeviceRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListDeviceRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListDeviceRequest)
  return target;
}

size_t ListDeviceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListDeviceRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListDeviceRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListDeviceRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListDeviceRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListDeviceRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListDeviceRequest)
    MergeFrom(*source);
  }
}

void ListDeviceRequest::MergeFrom(const ListDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
}

void ListDeviceRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListDeviceRequest::CopyFrom(const ListDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListDeviceRequest::IsInitialized() const {
  return true;
}

void ListDeviceRequest::InternalSwap(ListDeviceRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ListDeviceRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListDeviceResponse_Result_DeviceList::_Internal {
 public:
};

ListDeviceResponse_Result_DeviceList::ListDeviceResponse_Result_DeviceList(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  devicelist_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListDeviceResponse.Result.DeviceList)
}
ListDeviceResponse_Result_DeviceList::ListDeviceResponse_Result_DeviceList(const ListDeviceResponse_Result_DeviceList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      devicelist_(from.devicelist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListDeviceResponse.Result.DeviceList)
}

void ListDeviceResponse_Result_DeviceList::SharedCtor() {
}

ListDeviceResponse_Result_DeviceList::~ListDeviceResponse_Result_DeviceList() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListDeviceResponse.Result.DeviceList)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListDeviceResponse_Result_DeviceList::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ListDeviceResponse_Result_DeviceList::ArenaDtor(void* object) {
  ListDeviceResponse_Result_DeviceList* _this = reinterpret_cast< ListDeviceResponse_Result_DeviceList* >(object);
  (void)_this;
}
void ListDeviceResponse_Result_DeviceList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListDeviceResponse_Result_DeviceList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListDeviceResponse_Result_DeviceList::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListDeviceResponse.Result.DeviceList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  devicelist_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListDeviceResponse_Result_DeviceList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .grpc_cli.Device devicelist = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_devicelist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListDeviceResponse_Result_DeviceList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListDeviceResponse.Result.DeviceList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grpc_cli.Device devicelist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_devicelist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_devicelist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListDeviceResponse.Result.DeviceList)
  return target;
}

size_t ListDeviceResponse_Result_DeviceList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListDeviceResponse.Result.DeviceList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_cli.Device devicelist = 1;
  total_size += 1UL * this->_internal_devicelist_size();
  for (const auto& msg : this->devicelist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListDeviceResponse_Result_DeviceList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListDeviceResponse.Result.DeviceList)
  GOOGLE_DCHECK_NE(&from, this);
  const ListDeviceResponse_Result_DeviceList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListDeviceResponse_Result_DeviceList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListDeviceResponse.Result.DeviceList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListDeviceResponse.Result.DeviceList)
    MergeFrom(*source);
  }
}

void ListDeviceResponse_Result_DeviceList::MergeFrom(const ListDeviceResponse_Result_DeviceList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListDeviceResponse.Result.DeviceList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  devicelist_.MergeFrom(from.devicelist_);
}

void ListDeviceResponse_Result_DeviceList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListDeviceResponse.Result.DeviceList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListDeviceResponse_Result_DeviceList::CopyFrom(const ListDeviceResponse_Result_DeviceList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListDeviceResponse.Result.DeviceList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListDeviceResponse_Result_DeviceList::IsInitialized() const {
  return true;
}

void ListDeviceResponse_Result_DeviceList::InternalSwap(ListDeviceResponse_Result_DeviceList* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  devicelist_.InternalSwap(&other->devicelist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListDeviceResponse_Result_DeviceList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListDeviceResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const ListDeviceResponse_Result* msg);
  static const ::grpc_cli::ListDeviceResponse_Result_DeviceList& data(const ListDeviceResponse_Result* msg);
};

const ::grpc_cli::Status&
ListDeviceResponse_Result::_Internal::status(const ListDeviceResponse_Result* msg) {
  return *msg->status_;
}
const ::grpc_cli::ListDeviceResponse_Result_DeviceList&
ListDeviceResponse_Result::_Internal::data(const ListDeviceResponse_Result* msg) {
  return *msg->data_;
}
ListDeviceResponse_Result::ListDeviceResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListDeviceResponse.Result)
}
ListDeviceResponse_Result::ListDeviceResponse_Result(const ListDeviceResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_data()) {
    data_ = new ::grpc_cli::ListDeviceResponse_Result_DeviceList(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListDeviceResponse.Result)
}

void ListDeviceResponse_Result::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&data_) -
    reinterpret_cast<char*>(&status_)) + sizeof(data_));
}

ListDeviceResponse_Result::~ListDeviceResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListDeviceResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListDeviceResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete data_;
}

void ListDeviceResponse_Result::ArenaDtor(void* object) {
  ListDeviceResponse_Result* _this = reinterpret_cast< ListDeviceResponse_Result* >(object);
  (void)_this;
}
void ListDeviceResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListDeviceResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListDeviceResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListDeviceResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListDeviceResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ListDeviceResponse.Result.DeviceList data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListDeviceResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListDeviceResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .grpc_cli.ListDeviceResponse.Result.DeviceList data = 2;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListDeviceResponse.Result)
  return target;
}

size_t ListDeviceResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListDeviceResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .grpc_cli.ListDeviceResponse.Result.DeviceList data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListDeviceResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListDeviceResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const ListDeviceResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListDeviceResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListDeviceResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListDeviceResponse.Result)
    MergeFrom(*source);
  }
}

void ListDeviceResponse_Result::MergeFrom(const ListDeviceResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListDeviceResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
  if (from.has_data()) {
    _internal_mutable_data()->::grpc_cli::ListDeviceResponse_Result_DeviceList::MergeFrom(from._internal_data());
  }
}

void ListDeviceResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListDeviceResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListDeviceResponse_Result::CopyFrom(const ListDeviceResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListDeviceResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListDeviceResponse_Result::IsInitialized() const {
  return true;
}

void ListDeviceResponse_Result::InternalSwap(ListDeviceResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListDeviceResponse_Result, data_)
      + sizeof(ListDeviceResponse_Result::data_)
      - PROTOBUF_FIELD_OFFSET(ListDeviceResponse_Result, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListDeviceResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListDeviceResponse::_Internal {
 public:
  static const ::grpc_cli::ListDeviceResponse_Result& result(const ListDeviceResponse* msg);
  static const ::grpc_cli::PosInfo& info(const ListDeviceResponse* msg);
};

const ::grpc_cli::ListDeviceResponse_Result&
ListDeviceResponse::_Internal::result(const ListDeviceResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
ListDeviceResponse::_Internal::info(const ListDeviceResponse* msg) {
  return *msg->info_;
}
ListDeviceResponse::ListDeviceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListDeviceResponse)
}
ListDeviceResponse::ListDeviceResponse(const ListDeviceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::ListDeviceResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListDeviceResponse)
}

void ListDeviceResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

ListDeviceResponse::~ListDeviceResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListDeviceResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListDeviceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void ListDeviceResponse::ArenaDtor(void* object) {
  ListDeviceResponse* _this = reinterpret_cast< ListDeviceResponse* >(object);
  (void)_this;
}
void ListDeviceResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListDeviceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListDeviceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListDeviceResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListDeviceResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListDeviceResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListDeviceResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ListDeviceResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListDeviceResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListDeviceResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListDeviceResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListDeviceResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.ListDeviceResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListDeviceResponse)
  return target;
}

size_t ListDeviceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListDeviceResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.ListDeviceResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListDeviceResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListDeviceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListDeviceResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListDeviceResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListDeviceResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListDeviceResponse)
    MergeFrom(*source);
  }
}

void ListDeviceResponse::MergeFrom(const ListDeviceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListDeviceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::ListDeviceResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void ListDeviceResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListDeviceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListDeviceResponse::CopyFrom(const ListDeviceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListDeviceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListDeviceResponse::IsInitialized() const {
  return true;
}

void ListDeviceResponse::InternalSwap(ListDeviceResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListDeviceResponse, info_)
      + sizeof(ListDeviceResponse::info_)
      - PROTOBUF_FIELD_OFFSET(ListDeviceResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListDeviceResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SmartLog::_Internal {
 public:
};

SmartLog::SmartLog(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  temperaturesensor_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SmartLog)
}
SmartLog::SmartLog(const SmartLog& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      temperaturesensor_(from.temperaturesensor_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  availablesparespace_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_availablesparespace().empty()) {
    availablesparespace_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_availablesparespace(), 
      GetArena());
  }
  temperature_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_temperature().empty()) {
    temperature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_temperature(), 
      GetArena());
  }
  devicereliability_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_devicereliability().empty()) {
    devicereliability_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_devicereliability(), 
      GetArena());
  }
  readonly_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_readonly().empty()) {
    readonly_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_readonly(), 
      GetArena());
  }
  volatilememorybackup_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_volatilememorybackup().empty()) {
    volatilememorybackup_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_volatilememorybackup(), 
      GetArena());
  }
  currenttemperature_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_currenttemperature().empty()) {
    currenttemperature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_currenttemperature(), 
      GetArena());
  }
  availablespare_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_availablespare().empty()) {
    availablespare_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_availablespare(), 
      GetArena());
  }
  availablesparethreshold_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_availablesparethreshold().empty()) {
    availablesparethreshold_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_availablesparethreshold(), 
      GetArena());
  }
  lifepercentageused_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_lifepercentageused().empty()) {
    lifepercentageused_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_lifepercentageused(), 
      GetArena());
  }
  dataunitsread_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_dataunitsread().empty()) {
    dataunitsread_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_dataunitsread(), 
      GetArena());
  }
  dataunitswritten_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_dataunitswritten().empty()) {
    dataunitswritten_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_dataunitswritten(), 
      GetArena());
  }
  hostreadcommands_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_hostreadcommands().empty()) {
    hostreadcommands_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_hostreadcommands(), 
      GetArena());
  }
  hostwritecommands_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_hostwritecommands().empty()) {
    hostwritecommands_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_hostwritecommands(), 
      GetArena());
  }
  controllerbusytime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_controllerbusytime().empty()) {
    controllerbusytime_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_controllerbusytime(), 
      GetArena());
  }
  powercycles_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_powercycles().empty()) {
    powercycles_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_powercycles(), 
      GetArena());
  }
  poweronhours_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_poweronhours().empty()) {
    poweronhours_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_poweronhours(), 
      GetArena());
  }
  unsafeshutdowns_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_unsafeshutdowns().empty()) {
    unsafeshutdowns_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_unsafeshutdowns(), 
      GetArena());
  }
  unrecoverablemediaerrors_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_unrecoverablemediaerrors().empty()) {
    unrecoverablemediaerrors_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_unrecoverablemediaerrors(), 
      GetArena());
  }
  lifetimeerrorlogentries_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_lifetimeerrorlogentries().empty()) {
    lifetimeerrorlogentries_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_lifetimeerrorlogentries(), 
      GetArena());
  }
  warningtemperaturetime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_warningtemperaturetime().empty()) {
    warningtemperaturetime_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_warningtemperaturetime(), 
      GetArena());
  }
  criticaltemperaturetime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_criticaltemperaturetime().empty()) {
    criticaltemperaturetime_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_criticaltemperaturetime(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SmartLog)
}

void SmartLog::SharedCtor() {
availablesparespace_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
temperature_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
devicereliability_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
readonly_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
volatilememorybackup_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
currenttemperature_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
availablespare_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
availablesparethreshold_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
lifepercentageused_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
dataunitsread_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
dataunitswritten_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
hostreadcommands_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
hostwritecommands_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
controllerbusytime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
powercycles_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
poweronhours_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
unsafeshutdowns_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
unrecoverablemediaerrors_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
lifetimeerrorlogentries_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
warningtemperaturetime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
criticaltemperaturetime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SmartLog::~SmartLog() {
  // @@protoc_insertion_point(destructor:grpc_cli.SmartLog)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SmartLog::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  availablesparespace_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  temperature_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  devicereliability_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  readonly_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  volatilememorybackup_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  currenttemperature_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  availablespare_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  availablesparethreshold_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  lifepercentageused_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dataunitsread_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dataunitswritten_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  hostreadcommands_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  hostwritecommands_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  controllerbusytime_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  powercycles_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  poweronhours_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  unsafeshutdowns_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  unrecoverablemediaerrors_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  lifetimeerrorlogentries_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  warningtemperaturetime_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  criticaltemperaturetime_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SmartLog::ArenaDtor(void* object) {
  SmartLog* _this = reinterpret_cast< SmartLog* >(object);
  (void)_this;
}
void SmartLog::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SmartLog::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SmartLog::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SmartLog)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  temperaturesensor_.Clear();
  availablesparespace_.ClearToEmpty();
  temperature_.ClearToEmpty();
  devicereliability_.ClearToEmpty();
  readonly_.ClearToEmpty();
  volatilememorybackup_.ClearToEmpty();
  currenttemperature_.ClearToEmpty();
  availablespare_.ClearToEmpty();
  availablesparethreshold_.ClearToEmpty();
  lifepercentageused_.ClearToEmpty();
  dataunitsread_.ClearToEmpty();
  dataunitswritten_.ClearToEmpty();
  hostreadcommands_.ClearToEmpty();
  hostwritecommands_.ClearToEmpty();
  controllerbusytime_.ClearToEmpty();
  powercycles_.ClearToEmpty();
  poweronhours_.ClearToEmpty();
  unsafeshutdowns_.ClearToEmpty();
  unrecoverablemediaerrors_.ClearToEmpty();
  lifetimeerrorlogentries_.ClearToEmpty();
  warningtemperaturetime_.ClearToEmpty();
  criticaltemperaturetime_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SmartLog::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string availableSpareSpace = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_availablesparespace();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SmartLog.availableSpareSpace"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string temperature = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_temperature();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SmartLog.temperature"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string deviceReliability = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_devicereliability();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SmartLog.deviceReliability"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string readOnly = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_readonly();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SmartLog.readOnly"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string volatileMemoryBackup = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_volatilememorybackup();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SmartLog.volatileMemoryBackup"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string currentTemperature = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_currenttemperature();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SmartLog.currentTemperature"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string availableSpare = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_availablespare();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SmartLog.availableSpare"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string availableSpareThreshold = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_availablesparethreshold();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SmartLog.availableSpareThreshold"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string lifePercentageUsed = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_lifepercentageused();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SmartLog.lifePercentageUsed"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string dataUnitsRead = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_dataunitsread();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SmartLog.dataUnitsRead"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string dataUnitsWritten = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_dataunitswritten();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SmartLog.dataUnitsWritten"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string hostReadCommands = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_hostreadcommands();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SmartLog.hostReadCommands"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string hostWriteCommands = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          auto str = _internal_mutable_hostwritecommands();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SmartLog.hostWriteCommands"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string controllerBusyTime = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_controllerbusytime();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SmartLog.controllerBusyTime"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string powerCycles = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          auto str = _internal_mutable_powercycles();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SmartLog.powerCycles"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string powerOnHours = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          auto str = _internal_mutable_poweronhours();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SmartLog.powerOnHours"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string unsafeShutdowns = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          auto str = _internal_mutable_unsafeshutdowns();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SmartLog.unsafeShutdowns"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string unrecoverableMediaErrors = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          auto str = _internal_mutable_unrecoverablemediaerrors();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SmartLog.unrecoverableMediaErrors"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string lifetimeErrorLogEntries = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          auto str = _internal_mutable_lifetimeerrorlogentries();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SmartLog.lifetimeErrorLogEntries"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string warningTemperatureTime = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          auto str = _internal_mutable_warningtemperaturetime();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SmartLog.warningTemperatureTime"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string criticalTemperatureTime = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          auto str = _internal_mutable_criticaltemperaturetime();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SmartLog.criticalTemperatureTime"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string temperatureSensor = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          ptr -= 2;
          do {
            ptr += 2;
            auto str = _internal_add_temperaturesensor();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SmartLog.temperatureSensor"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<178>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SmartLog::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SmartLog)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string availableSpareSpace = 1;
  if (this->availablesparespace().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_availablesparespace().data(), static_cast<int>(this->_internal_availablesparespace().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SmartLog.availableSpareSpace");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_availablesparespace(), target);
  }

  // string temperature = 2;
  if (this->temperature().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_temperature().data(), static_cast<int>(this->_internal_temperature().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SmartLog.temperature");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_temperature(), target);
  }

  // string deviceReliability = 3;
  if (this->devicereliability().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_devicereliability().data(), static_cast<int>(this->_internal_devicereliability().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SmartLog.deviceReliability");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_devicereliability(), target);
  }

  // string readOnly = 4;
  if (this->readonly().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_readonly().data(), static_cast<int>(this->_internal_readonly().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SmartLog.readOnly");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_readonly(), target);
  }

  // string volatileMemoryBackup = 5;
  if (this->volatilememorybackup().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_volatilememorybackup().data(), static_cast<int>(this->_internal_volatilememorybackup().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SmartLog.volatileMemoryBackup");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_volatilememorybackup(), target);
  }

  // string currentTemperature = 6;
  if (this->currenttemperature().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_currenttemperature().data(), static_cast<int>(this->_internal_currenttemperature().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SmartLog.currentTemperature");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_currenttemperature(), target);
  }

  // string availableSpare = 7;
  if (this->availablespare().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_availablespare().data(), static_cast<int>(this->_internal_availablespare().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SmartLog.availableSpare");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_availablespare(), target);
  }

  // string availableSpareThreshold = 8;
  if (this->availablesparethreshold().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_availablesparethreshold().data(), static_cast<int>(this->_internal_availablesparethreshold().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SmartLog.availableSpareThreshold");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_availablesparethreshold(), target);
  }

  // string lifePercentageUsed = 9;
  if (this->lifepercentageused().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_lifepercentageused().data(), static_cast<int>(this->_internal_lifepercentageused().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SmartLog.lifePercentageUsed");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_lifepercentageused(), target);
  }

  // string dataUnitsRead = 10;
  if (this->dataunitsread().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dataunitsread().data(), static_cast<int>(this->_internal_dataunitsread().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SmartLog.dataUnitsRead");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_dataunitsread(), target);
  }

  // string dataUnitsWritten = 11;
  if (this->dataunitswritten().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dataunitswritten().data(), static_cast<int>(this->_internal_dataunitswritten().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SmartLog.dataUnitsWritten");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_dataunitswritten(), target);
  }

  // string hostReadCommands = 12;
  if (this->hostreadcommands().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_hostreadcommands().data(), static_cast<int>(this->_internal_hostreadcommands().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SmartLog.hostReadCommands");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_hostreadcommands(), target);
  }

  // string hostWriteCommands = 13;
  if (this->hostwritecommands().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_hostwritecommands().data(), static_cast<int>(this->_internal_hostwritecommands().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SmartLog.hostWriteCommands");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_hostwritecommands(), target);
  }

  // string controllerBusyTime = 14;
  if (this->controllerbusytime().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_controllerbusytime().data(), static_cast<int>(this->_internal_controllerbusytime().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SmartLog.controllerBusyTime");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_controllerbusytime(), target);
  }

  // string powerCycles = 15;
  if (this->powercycles().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_powercycles().data(), static_cast<int>(this->_internal_powercycles().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SmartLog.powerCycles");
    target = stream->WriteStringMaybeAliased(
        15, this->_internal_powercycles(), target);
  }

  // string powerOnHours = 16;
  if (this->poweronhours().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_poweronhours().data(), static_cast<int>(this->_internal_poweronhours().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SmartLog.powerOnHours");
    target = stream->WriteStringMaybeAliased(
        16, this->_internal_poweronhours(), target);
  }

  // string unsafeShutdowns = 17;
  if (this->unsafeshutdowns().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_unsafeshutdowns().data(), static_cast<int>(this->_internal_unsafeshutdowns().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SmartLog.unsafeShutdowns");
    target = stream->WriteStringMaybeAliased(
        17, this->_internal_unsafeshutdowns(), target);
  }

  // string unrecoverableMediaErrors = 18;
  if (this->unrecoverablemediaerrors().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_unrecoverablemediaerrors().data(), static_cast<int>(this->_internal_unrecoverablemediaerrors().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SmartLog.unrecoverableMediaErrors");
    target = stream->WriteStringMaybeAliased(
        18, this->_internal_unrecoverablemediaerrors(), target);
  }

  // string lifetimeErrorLogEntries = 19;
  if (this->lifetimeerrorlogentries().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_lifetimeerrorlogentries().data(), static_cast<int>(this->_internal_lifetimeerrorlogentries().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SmartLog.lifetimeErrorLogEntries");
    target = stream->WriteStringMaybeAliased(
        19, this->_internal_lifetimeerrorlogentries(), target);
  }

  // string warningTemperatureTime = 20;
  if (this->warningtemperaturetime().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_warningtemperaturetime().data(), static_cast<int>(this->_internal_warningtemperaturetime().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SmartLog.warningTemperatureTime");
    target = stream->WriteStringMaybeAliased(
        20, this->_internal_warningtemperaturetime(), target);
  }

  // string criticalTemperatureTime = 21;
  if (this->criticaltemperaturetime().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_criticaltemperaturetime().data(), static_cast<int>(this->_internal_criticaltemperaturetime().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SmartLog.criticalTemperatureTime");
    target = stream->WriteStringMaybeAliased(
        21, this->_internal_criticaltemperaturetime(), target);
  }

  // repeated string temperatureSensor = 22;
  for (int i = 0, n = this->_internal_temperaturesensor_size(); i < n; i++) {
    const auto& s = this->_internal_temperaturesensor(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SmartLog.temperatureSensor");
    target = stream->WriteString(22, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SmartLog)
  return target;
}

size_t SmartLog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SmartLog)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string temperatureSensor = 22;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(temperaturesensor_.size());
  for (int i = 0, n = temperaturesensor_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      temperaturesensor_.Get(i));
  }

  // string availableSpareSpace = 1;
  if (this->availablesparespace().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_availablesparespace());
  }

  // string temperature = 2;
  if (this->temperature().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_temperature());
  }

  // string deviceReliability = 3;
  if (this->devicereliability().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_devicereliability());
  }

  // string readOnly = 4;
  if (this->readonly().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_readonly());
  }

  // string volatileMemoryBackup = 5;
  if (this->volatilememorybackup().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_volatilememorybackup());
  }

  // string currentTemperature = 6;
  if (this->currenttemperature().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_currenttemperature());
  }

  // string availableSpare = 7;
  if (this->availablespare().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_availablespare());
  }

  // string availableSpareThreshold = 8;
  if (this->availablesparethreshold().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_availablesparethreshold());
  }

  // string lifePercentageUsed = 9;
  if (this->lifepercentageused().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_lifepercentageused());
  }

  // string dataUnitsRead = 10;
  if (this->dataunitsread().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dataunitsread());
  }

  // string dataUnitsWritten = 11;
  if (this->dataunitswritten().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dataunitswritten());
  }

  // string hostReadCommands = 12;
  if (this->hostreadcommands().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_hostreadcommands());
  }

  // string hostWriteCommands = 13;
  if (this->hostwritecommands().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_hostwritecommands());
  }

  // string controllerBusyTime = 14;
  if (this->controllerbusytime().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_controllerbusytime());
  }

  // string powerCycles = 15;
  if (this->powercycles().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_powercycles());
  }

  // string powerOnHours = 16;
  if (this->poweronhours().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_poweronhours());
  }

  // string unsafeShutdowns = 17;
  if (this->unsafeshutdowns().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_unsafeshutdowns());
  }

  // string unrecoverableMediaErrors = 18;
  if (this->unrecoverablemediaerrors().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_unrecoverablemediaerrors());
  }

  // string lifetimeErrorLogEntries = 19;
  if (this->lifetimeerrorlogentries().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_lifetimeerrorlogentries());
  }

  // string warningTemperatureTime = 20;
  if (this->warningtemperaturetime().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_warningtemperaturetime());
  }

  // string criticalTemperatureTime = 21;
  if (this->criticaltemperaturetime().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_criticaltemperaturetime());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SmartLog::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SmartLog)
  GOOGLE_DCHECK_NE(&from, this);
  const SmartLog* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SmartLog>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SmartLog)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SmartLog)
    MergeFrom(*source);
  }
}

void SmartLog::MergeFrom(const SmartLog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SmartLog)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  temperaturesensor_.MergeFrom(from.temperaturesensor_);
  if (from.availablesparespace().size() > 0) {
    _internal_set_availablesparespace(from._internal_availablesparespace());
  }
  if (from.temperature().size() > 0) {
    _internal_set_temperature(from._internal_temperature());
  }
  if (from.devicereliability().size() > 0) {
    _internal_set_devicereliability(from._internal_devicereliability());
  }
  if (from.readonly().size() > 0) {
    _internal_set_readonly(from._internal_readonly());
  }
  if (from.volatilememorybackup().size() > 0) {
    _internal_set_volatilememorybackup(from._internal_volatilememorybackup());
  }
  if (from.currenttemperature().size() > 0) {
    _internal_set_currenttemperature(from._internal_currenttemperature());
  }
  if (from.availablespare().size() > 0) {
    _internal_set_availablespare(from._internal_availablespare());
  }
  if (from.availablesparethreshold().size() > 0) {
    _internal_set_availablesparethreshold(from._internal_availablesparethreshold());
  }
  if (from.lifepercentageused().size() > 0) {
    _internal_set_lifepercentageused(from._internal_lifepercentageused());
  }
  if (from.dataunitsread().size() > 0) {
    _internal_set_dataunitsread(from._internal_dataunitsread());
  }
  if (from.dataunitswritten().size() > 0) {
    _internal_set_dataunitswritten(from._internal_dataunitswritten());
  }
  if (from.hostreadcommands().size() > 0) {
    _internal_set_hostreadcommands(from._internal_hostreadcommands());
  }
  if (from.hostwritecommands().size() > 0) {
    _internal_set_hostwritecommands(from._internal_hostwritecommands());
  }
  if (from.controllerbusytime().size() > 0) {
    _internal_set_controllerbusytime(from._internal_controllerbusytime());
  }
  if (from.powercycles().size() > 0) {
    _internal_set_powercycles(from._internal_powercycles());
  }
  if (from.poweronhours().size() > 0) {
    _internal_set_poweronhours(from._internal_poweronhours());
  }
  if (from.unsafeshutdowns().size() > 0) {
    _internal_set_unsafeshutdowns(from._internal_unsafeshutdowns());
  }
  if (from.unrecoverablemediaerrors().size() > 0) {
    _internal_set_unrecoverablemediaerrors(from._internal_unrecoverablemediaerrors());
  }
  if (from.lifetimeerrorlogentries().size() > 0) {
    _internal_set_lifetimeerrorlogentries(from._internal_lifetimeerrorlogentries());
  }
  if (from.warningtemperaturetime().size() > 0) {
    _internal_set_warningtemperaturetime(from._internal_warningtemperaturetime());
  }
  if (from.criticaltemperaturetime().size() > 0) {
    _internal_set_criticaltemperaturetime(from._internal_criticaltemperaturetime());
  }
}

void SmartLog::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SmartLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SmartLog::CopyFrom(const SmartLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SmartLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SmartLog::IsInitialized() const {
  return true;
}

void SmartLog::InternalSwap(SmartLog* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  temperaturesensor_.InternalSwap(&other->temperaturesensor_);
  availablesparespace_.Swap(&other->availablesparespace_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  temperature_.Swap(&other->temperature_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  devicereliability_.Swap(&other->devicereliability_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  readonly_.Swap(&other->readonly_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  volatilememorybackup_.Swap(&other->volatilememorybackup_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  currenttemperature_.Swap(&other->currenttemperature_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  availablespare_.Swap(&other->availablespare_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  availablesparethreshold_.Swap(&other->availablesparethreshold_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  lifepercentageused_.Swap(&other->lifepercentageused_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  dataunitsread_.Swap(&other->dataunitsread_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  dataunitswritten_.Swap(&other->dataunitswritten_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  hostreadcommands_.Swap(&other->hostreadcommands_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  hostwritecommands_.Swap(&other->hostwritecommands_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  controllerbusytime_.Swap(&other->controllerbusytime_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  powercycles_.Swap(&other->powercycles_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  poweronhours_.Swap(&other->poweronhours_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  unsafeshutdowns_.Swap(&other->unsafeshutdowns_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  unrecoverablemediaerrors_.Swap(&other->unrecoverablemediaerrors_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  lifetimeerrorlogentries_.Swap(&other->lifetimeerrorlogentries_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  warningtemperaturetime_.Swap(&other->warningtemperaturetime_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  criticaltemperaturetime_.Swap(&other->criticaltemperaturetime_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SmartLog::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetSmartLogRequest_Param::_Internal {
 public:
};

GetSmartLogRequest_Param::GetSmartLogRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.GetSmartLogRequest.Param)
}
GetSmartLogRequest_Param::GetSmartLogRequest_Param(const GetSmartLogRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.GetSmartLogRequest.Param)
}

void GetSmartLogRequest_Param::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetSmartLogRequest_Param::~GetSmartLogRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.GetSmartLogRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSmartLogRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetSmartLogRequest_Param::ArenaDtor(void* object) {
  GetSmartLogRequest_Param* _this = reinterpret_cast< GetSmartLogRequest_Param* >(object);
  (void)_this;
}
void GetSmartLogRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSmartLogRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetSmartLogRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.GetSmartLogRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSmartLogRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.GetSmartLogRequest.Param.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSmartLogRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.GetSmartLogRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.GetSmartLogRequest.Param.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.GetSmartLogRequest.Param)
  return target;
}

size_t GetSmartLogRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.GetSmartLogRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSmartLogRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.GetSmartLogRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSmartLogRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSmartLogRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.GetSmartLogRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.GetSmartLogRequest.Param)
    MergeFrom(*source);
  }
}

void GetSmartLogRequest_Param::MergeFrom(const GetSmartLogRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.GetSmartLogRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void GetSmartLogRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.GetSmartLogRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSmartLogRequest_Param::CopyFrom(const GetSmartLogRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.GetSmartLogRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSmartLogRequest_Param::IsInitialized() const {
  return true;
}

void GetSmartLogRequest_Param::InternalSwap(GetSmartLogRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSmartLogRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetSmartLogRequest::_Internal {
 public:
  static const ::grpc_cli::GetSmartLogRequest_Param& param(const GetSmartLogRequest* msg);
};

const ::grpc_cli::GetSmartLogRequest_Param&
GetSmartLogRequest::_Internal::param(const GetSmartLogRequest* msg) {
  return *msg->param_;
}
GetSmartLogRequest::GetSmartLogRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.GetSmartLogRequest)
}
GetSmartLogRequest::GetSmartLogRequest(const GetSmartLogRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::GetSmartLogRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.GetSmartLogRequest)
}

void GetSmartLogRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

GetSmartLogRequest::~GetSmartLogRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.GetSmartLogRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSmartLogRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void GetSmartLogRequest::ArenaDtor(void* object) {
  GetSmartLogRequest* _this = reinterpret_cast< GetSmartLogRequest* >(object);
  (void)_this;
}
void GetSmartLogRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSmartLogRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetSmartLogRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.GetSmartLogRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSmartLogRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.GetSmartLogRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.GetSmartLogRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.GetSmartLogRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.GetSmartLogRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSmartLogRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.GetSmartLogRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.GetSmartLogRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.GetSmartLogRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.GetSmartLogRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.GetSmartLogRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.GetSmartLogRequest)
  return target;
}

size_t GetSmartLogRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.GetSmartLogRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.GetSmartLogRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSmartLogRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.GetSmartLogRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSmartLogRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSmartLogRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.GetSmartLogRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.GetSmartLogRequest)
    MergeFrom(*source);
  }
}

void GetSmartLogRequest::MergeFrom(const GetSmartLogRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.GetSmartLogRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::GetSmartLogRequest_Param::MergeFrom(from._internal_param());
  }
}

void GetSmartLogRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.GetSmartLogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSmartLogRequest::CopyFrom(const GetSmartLogRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.GetSmartLogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSmartLogRequest::IsInitialized() const {
  return true;
}

void GetSmartLogRequest::InternalSwap(GetSmartLogRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSmartLogRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetSmartLogResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const GetSmartLogResponse_Result* msg);
  static const ::grpc_cli::SmartLog& data(const GetSmartLogResponse_Result* msg);
};

const ::grpc_cli::Status&
GetSmartLogResponse_Result::_Internal::status(const GetSmartLogResponse_Result* msg) {
  return *msg->status_;
}
const ::grpc_cli::SmartLog&
GetSmartLogResponse_Result::_Internal::data(const GetSmartLogResponse_Result* msg) {
  return *msg->data_;
}
GetSmartLogResponse_Result::GetSmartLogResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.GetSmartLogResponse.Result)
}
GetSmartLogResponse_Result::GetSmartLogResponse_Result(const GetSmartLogResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_data()) {
    data_ = new ::grpc_cli::SmartLog(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.GetSmartLogResponse.Result)
}

void GetSmartLogResponse_Result::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&data_) -
    reinterpret_cast<char*>(&status_)) + sizeof(data_));
}

GetSmartLogResponse_Result::~GetSmartLogResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.GetSmartLogResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSmartLogResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete data_;
}

void GetSmartLogResponse_Result::ArenaDtor(void* object) {
  GetSmartLogResponse_Result* _this = reinterpret_cast< GetSmartLogResponse_Result* >(object);
  (void)_this;
}
void GetSmartLogResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSmartLogResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetSmartLogResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.GetSmartLogResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSmartLogResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.SmartLog data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSmartLogResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.GetSmartLogResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .grpc_cli.SmartLog data = 2;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.GetSmartLogResponse.Result)
  return target;
}

size_t GetSmartLogResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.GetSmartLogResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .grpc_cli.SmartLog data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSmartLogResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.GetSmartLogResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSmartLogResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSmartLogResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.GetSmartLogResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.GetSmartLogResponse.Result)
    MergeFrom(*source);
  }
}

void GetSmartLogResponse_Result::MergeFrom(const GetSmartLogResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.GetSmartLogResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
  if (from.has_data()) {
    _internal_mutable_data()->::grpc_cli::SmartLog::MergeFrom(from._internal_data());
  }
}

void GetSmartLogResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.GetSmartLogResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSmartLogResponse_Result::CopyFrom(const GetSmartLogResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.GetSmartLogResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSmartLogResponse_Result::IsInitialized() const {
  return true;
}

void GetSmartLogResponse_Result::InternalSwap(GetSmartLogResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetSmartLogResponse_Result, data_)
      + sizeof(GetSmartLogResponse_Result::data_)
      - PROTOBUF_FIELD_OFFSET(GetSmartLogResponse_Result, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSmartLogResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetSmartLogResponse::_Internal {
 public:
  static const ::grpc_cli::GetSmartLogResponse_Result& result(const GetSmartLogResponse* msg);
  static const ::grpc_cli::PosInfo& info(const GetSmartLogResponse* msg);
};

const ::grpc_cli::GetSmartLogResponse_Result&
GetSmartLogResponse::_Internal::result(const GetSmartLogResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
GetSmartLogResponse::_Internal::info(const GetSmartLogResponse* msg) {
  return *msg->info_;
}
GetSmartLogResponse::GetSmartLogResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.GetSmartLogResponse)
}
GetSmartLogResponse::GetSmartLogResponse(const GetSmartLogResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::GetSmartLogResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.GetSmartLogResponse)
}

void GetSmartLogResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

GetSmartLogResponse::~GetSmartLogResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.GetSmartLogResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSmartLogResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void GetSmartLogResponse::ArenaDtor(void* object) {
  GetSmartLogResponse* _this = reinterpret_cast< GetSmartLogResponse* >(object);
  (void)_this;
}
void GetSmartLogResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSmartLogResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetSmartLogResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.GetSmartLogResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSmartLogResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.GetSmartLogResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.GetSmartLogResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.GetSmartLogResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSmartLogResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.GetSmartLogResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.GetSmartLogResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.GetSmartLogResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.GetSmartLogResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.GetSmartLogResponse)
  return target;
}

size_t GetSmartLogResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.GetSmartLogResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.GetSmartLogResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSmartLogResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.GetSmartLogResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSmartLogResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSmartLogResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.GetSmartLogResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.GetSmartLogResponse)
    MergeFrom(*source);
  }
}

void GetSmartLogResponse::MergeFrom(const GetSmartLogResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.GetSmartLogResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::GetSmartLogResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void GetSmartLogResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.GetSmartLogResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSmartLogResponse::CopyFrom(const GetSmartLogResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.GetSmartLogResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSmartLogResponse::IsInitialized() const {
  return true;
}

void GetSmartLogResponse::InternalSwap(GetSmartLogResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetSmartLogResponse, info_)
      + sizeof(GetSmartLogResponse::info_)
      - PROTOBUF_FIELD_OFFSET(GetSmartLogResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSmartLogResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateSubsystemRequest_Param::_Internal {
 public:
};

CreateSubsystemRequest_Param::CreateSubsystemRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.CreateSubsystemRequest.Param)
}
CreateSubsystemRequest_Param::CreateSubsystemRequest_Param(const CreateSubsystemRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  nqn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_nqn().empty()) {
    nqn_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_nqn(), 
      GetArena());
  }
  serialnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_serialnumber().empty()) {
    serialnumber_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_serialnumber(), 
      GetArena());
  }
  modelnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_modelnumber().empty()) {
    modelnumber_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_modelnumber(), 
      GetArena());
  }
  ::memcpy(&maxnamespaces_, &from.maxnamespaces_,
    static_cast<size_t>(reinterpret_cast<char*>(&anareporting_) -
    reinterpret_cast<char*>(&maxnamespaces_)) + sizeof(anareporting_));
  // @@protoc_insertion_point(copy_constructor:grpc_cli.CreateSubsystemRequest.Param)
}

void CreateSubsystemRequest_Param::SharedCtor() {
nqn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
serialnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
modelnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&maxnamespaces_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&anareporting_) -
    reinterpret_cast<char*>(&maxnamespaces_)) + sizeof(anareporting_));
}

CreateSubsystemRequest_Param::~CreateSubsystemRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.CreateSubsystemRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateSubsystemRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  nqn_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  serialnumber_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  modelnumber_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateSubsystemRequest_Param::ArenaDtor(void* object) {
  CreateSubsystemRequest_Param* _this = reinterpret_cast< CreateSubsystemRequest_Param* >(object);
  (void)_this;
}
void CreateSubsystemRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateSubsystemRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateSubsystemRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.CreateSubsystemRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nqn_.ClearToEmpty();
  serialnumber_.ClearToEmpty();
  modelnumber_.ClearToEmpty();
  ::memset(&maxnamespaces_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&anareporting_) -
      reinterpret_cast<char*>(&maxnamespaces_)) + sizeof(anareporting_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateSubsystemRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string nqn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_nqn();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateSubsystemRequest.Param.nqn"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string serialNumber = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_serialnumber();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateSubsystemRequest.Param.serialNumber"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string modelNumber = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_modelnumber();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateSubsystemRequest.Param.modelNumber"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 maxNamespaces = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          maxnamespaces_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool allowAnyHost = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          allowanyhost_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool anaReporting = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          anareporting_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateSubsystemRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.CreateSubsystemRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nqn = 1;
  if (this->nqn().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nqn().data(), static_cast<int>(this->_internal_nqn().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateSubsystemRequest.Param.nqn");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_nqn(), target);
  }

  // string serialNumber = 2;
  if (this->serialnumber().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_serialnumber().data(), static_cast<int>(this->_internal_serialnumber().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateSubsystemRequest.Param.serialNumber");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_serialnumber(), target);
  }

  // string modelNumber = 3;
  if (this->modelnumber().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_modelnumber().data(), static_cast<int>(this->_internal_modelnumber().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateSubsystemRequest.Param.modelNumber");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_modelnumber(), target);
  }

  // uint32 maxNamespaces = 4;
  if (this->maxnamespaces() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_maxnamespaces(), target);
  }

  // bool allowAnyHost = 5;
  if (this->allowanyhost() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_allowanyhost(), target);
  }

  // bool anaReporting = 6;
  if (this->anareporting() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_anareporting(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.CreateSubsystemRequest.Param)
  return target;
}

size_t CreateSubsystemRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.CreateSubsystemRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string nqn = 1;
  if (this->nqn().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nqn());
  }

  // string serialNumber = 2;
  if (this->serialnumber().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_serialnumber());
  }

  // string modelNumber = 3;
  if (this->modelnumber().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_modelnumber());
  }

  // uint32 maxNamespaces = 4;
  if (this->maxnamespaces() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_maxnamespaces());
  }

  // bool allowAnyHost = 5;
  if (this->allowanyhost() != 0) {
    total_size += 1 + 1;
  }

  // bool anaReporting = 6;
  if (this->anareporting() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateSubsystemRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.CreateSubsystemRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateSubsystemRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateSubsystemRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.CreateSubsystemRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.CreateSubsystemRequest.Param)
    MergeFrom(*source);
  }
}

void CreateSubsystemRequest_Param::MergeFrom(const CreateSubsystemRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.CreateSubsystemRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nqn().size() > 0) {
    _internal_set_nqn(from._internal_nqn());
  }
  if (from.serialnumber().size() > 0) {
    _internal_set_serialnumber(from._internal_serialnumber());
  }
  if (from.modelnumber().size() > 0) {
    _internal_set_modelnumber(from._internal_modelnumber());
  }
  if (from.maxnamespaces() != 0) {
    _internal_set_maxnamespaces(from._internal_maxnamespaces());
  }
  if (from.allowanyhost() != 0) {
    _internal_set_allowanyhost(from._internal_allowanyhost());
  }
  if (from.anareporting() != 0) {
    _internal_set_anareporting(from._internal_anareporting());
  }
}

void CreateSubsystemRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.CreateSubsystemRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateSubsystemRequest_Param::CopyFrom(const CreateSubsystemRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.CreateSubsystemRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSubsystemRequest_Param::IsInitialized() const {
  return true;
}

void CreateSubsystemRequest_Param::InternalSwap(CreateSubsystemRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  nqn_.Swap(&other->nqn_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  serialnumber_.Swap(&other->serialnumber_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  modelnumber_.Swap(&other->modelnumber_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateSubsystemRequest_Param, anareporting_)
      + sizeof(CreateSubsystemRequest_Param::anareporting_)
      - PROTOBUF_FIELD_OFFSET(CreateSubsystemRequest_Param, maxnamespaces_)>(
          reinterpret_cast<char*>(&maxnamespaces_),
          reinterpret_cast<char*>(&other->maxnamespaces_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateSubsystemRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateSubsystemRequest::_Internal {
 public:
  static const ::grpc_cli::CreateSubsystemRequest_Param& param(const CreateSubsystemRequest* msg);
};

const ::grpc_cli::CreateSubsystemRequest_Param&
CreateSubsystemRequest::_Internal::param(const CreateSubsystemRequest* msg) {
  return *msg->param_;
}
CreateSubsystemRequest::CreateSubsystemRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.CreateSubsystemRequest)
}
CreateSubsystemRequest::CreateSubsystemRequest(const CreateSubsystemRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::CreateSubsystemRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.CreateSubsystemRequest)
}

void CreateSubsystemRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

CreateSubsystemRequest::~CreateSubsystemRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.CreateSubsystemRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateSubsystemRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void CreateSubsystemRequest::ArenaDtor(void* object) {
  CreateSubsystemRequest* _this = reinterpret_cast< CreateSubsystemRequest* >(object);
  (void)_this;
}
void CreateSubsystemRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateSubsystemRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateSubsystemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.CreateSubsystemRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateSubsystemRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateSubsystemRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateSubsystemRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateSubsystemRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.CreateSubsystemRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateSubsystemRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.CreateSubsystemRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateSubsystemRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateSubsystemRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateSubsystemRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.CreateSubsystemRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.CreateSubsystemRequest)
  return target;
}

size_t CreateSubsystemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.CreateSubsystemRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.CreateSubsystemRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateSubsystemRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.CreateSubsystemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateSubsystemRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateSubsystemRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.CreateSubsystemRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.CreateSubsystemRequest)
    MergeFrom(*source);
  }
}

void CreateSubsystemRequest::MergeFrom(const CreateSubsystemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.CreateSubsystemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::CreateSubsystemRequest_Param::MergeFrom(from._internal_param());
  }
}

void CreateSubsystemRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.CreateSubsystemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateSubsystemRequest::CopyFrom(const CreateSubsystemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.CreateSubsystemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSubsystemRequest::IsInitialized() const {
  return true;
}

void CreateSubsystemRequest::InternalSwap(CreateSubsystemRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateSubsystemRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateSubsystemResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const CreateSubsystemResponse_Result* msg);
};

const ::grpc_cli::Status&
CreateSubsystemResponse_Result::_Internal::status(const CreateSubsystemResponse_Result* msg) {
  return *msg->status_;
}
CreateSubsystemResponse_Result::CreateSubsystemResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.CreateSubsystemResponse.Result)
}
CreateSubsystemResponse_Result::CreateSubsystemResponse_Result(const CreateSubsystemResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.CreateSubsystemResponse.Result)
}

void CreateSubsystemResponse_Result::SharedCtor() {
status_ = nullptr;
}

CreateSubsystemResponse_Result::~CreateSubsystemResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.CreateSubsystemResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateSubsystemResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void CreateSubsystemResponse_Result::ArenaDtor(void* object) {
  CreateSubsystemResponse_Result* _this = reinterpret_cast< CreateSubsystemResponse_Result* >(object);
  (void)_this;
}
void CreateSubsystemResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateSubsystemResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateSubsystemResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.CreateSubsystemResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateSubsystemResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateSubsystemResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.CreateSubsystemResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.CreateSubsystemResponse.Result)
  return target;
}

size_t CreateSubsystemResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.CreateSubsystemResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateSubsystemResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.CreateSubsystemResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateSubsystemResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateSubsystemResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.CreateSubsystemResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.CreateSubsystemResponse.Result)
    MergeFrom(*source);
  }
}

void CreateSubsystemResponse_Result::MergeFrom(const CreateSubsystemResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.CreateSubsystemResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void CreateSubsystemResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.CreateSubsystemResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateSubsystemResponse_Result::CopyFrom(const CreateSubsystemResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.CreateSubsystemResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSubsystemResponse_Result::IsInitialized() const {
  return true;
}

void CreateSubsystemResponse_Result::InternalSwap(CreateSubsystemResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateSubsystemResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateSubsystemResponse::_Internal {
 public:
  static const ::grpc_cli::CreateSubsystemResponse_Result& result(const CreateSubsystemResponse* msg);
  static const ::grpc_cli::PosInfo& info(const CreateSubsystemResponse* msg);
};

const ::grpc_cli::CreateSubsystemResponse_Result&
CreateSubsystemResponse::_Internal::result(const CreateSubsystemResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
CreateSubsystemResponse::_Internal::info(const CreateSubsystemResponse* msg) {
  return *msg->info_;
}
CreateSubsystemResponse::CreateSubsystemResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.CreateSubsystemResponse)
}
CreateSubsystemResponse::CreateSubsystemResponse(const CreateSubsystemResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::CreateSubsystemResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.CreateSubsystemResponse)
}

void CreateSubsystemResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

CreateSubsystemResponse::~CreateSubsystemResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.CreateSubsystemResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateSubsystemResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void CreateSubsystemResponse::ArenaDtor(void* object) {
  CreateSubsystemResponse* _this = reinterpret_cast< CreateSubsystemResponse* >(object);
  (void)_this;
}
void CreateSubsystemResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateSubsystemResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateSubsystemResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.CreateSubsystemResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateSubsystemResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateSubsystemResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateSubsystemResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.CreateSubsystemResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateSubsystemResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.CreateSubsystemResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateSubsystemResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateSubsystemResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.CreateSubsystemResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.CreateSubsystemResponse)
  return target;
}

size_t CreateSubsystemResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.CreateSubsystemResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.CreateSubsystemResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateSubsystemResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.CreateSubsystemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateSubsystemResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateSubsystemResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.CreateSubsystemResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.CreateSubsystemResponse)
    MergeFrom(*source);
  }
}

void CreateSubsystemResponse::MergeFrom(const CreateSubsystemResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.CreateSubsystemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::CreateSubsystemResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void CreateSubsystemResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.CreateSubsystemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateSubsystemResponse::CopyFrom(const CreateSubsystemResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.CreateSubsystemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSubsystemResponse::IsInitialized() const {
  return true;
}

void CreateSubsystemResponse::InternalSwap(CreateSubsystemResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateSubsystemResponse, info_)
      + sizeof(CreateSubsystemResponse::info_)
      - PROTOBUF_FIELD_OFFSET(CreateSubsystemResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateSubsystemResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DeleteSubsystemRequest_Param::_Internal {
 public:
};

DeleteSubsystemRequest_Param::DeleteSubsystemRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.DeleteSubsystemRequest.Param)
}
DeleteSubsystemRequest_Param::DeleteSubsystemRequest_Param(const DeleteSubsystemRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  subnqn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subnqn().empty()) {
    subnqn_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_subnqn(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.DeleteSubsystemRequest.Param)
}

void DeleteSubsystemRequest_Param::SharedCtor() {
subnqn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteSubsystemRequest_Param::~DeleteSubsystemRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.DeleteSubsystemRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteSubsystemRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  subnqn_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteSubsystemRequest_Param::ArenaDtor(void* object) {
  DeleteSubsystemRequest_Param* _this = reinterpret_cast< DeleteSubsystemRequest_Param* >(object);
  (void)_this;
}
void DeleteSubsystemRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteSubsystemRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteSubsystemRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.DeleteSubsystemRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subnqn_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteSubsystemRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string subnqn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_subnqn();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.DeleteSubsystemRequest.Param.subnqn"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteSubsystemRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.DeleteSubsystemRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string subnqn = 1;
  if (this->subnqn().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subnqn().data(), static_cast<int>(this->_internal_subnqn().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.DeleteSubsystemRequest.Param.subnqn");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_subnqn(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.DeleteSubsystemRequest.Param)
  return target;
}

size_t DeleteSubsystemRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.DeleteSubsystemRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string subnqn = 1;
  if (this->subnqn().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subnqn());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteSubsystemRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.DeleteSubsystemRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteSubsystemRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteSubsystemRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.DeleteSubsystemRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.DeleteSubsystemRequest.Param)
    MergeFrom(*source);
  }
}

void DeleteSubsystemRequest_Param::MergeFrom(const DeleteSubsystemRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.DeleteSubsystemRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.subnqn().size() > 0) {
    _internal_set_subnqn(from._internal_subnqn());
  }
}

void DeleteSubsystemRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.DeleteSubsystemRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteSubsystemRequest_Param::CopyFrom(const DeleteSubsystemRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.DeleteSubsystemRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSubsystemRequest_Param::IsInitialized() const {
  return true;
}

void DeleteSubsystemRequest_Param::InternalSwap(DeleteSubsystemRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  subnqn_.Swap(&other->subnqn_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteSubsystemRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DeleteSubsystemRequest::_Internal {
 public:
  static const ::grpc_cli::DeleteSubsystemRequest_Param& param(const DeleteSubsystemRequest* msg);
};

const ::grpc_cli::DeleteSubsystemRequest_Param&
DeleteSubsystemRequest::_Internal::param(const DeleteSubsystemRequest* msg) {
  return *msg->param_;
}
DeleteSubsystemRequest::DeleteSubsystemRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.DeleteSubsystemRequest)
}
DeleteSubsystemRequest::DeleteSubsystemRequest(const DeleteSubsystemRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::DeleteSubsystemRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.DeleteSubsystemRequest)
}

void DeleteSubsystemRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

DeleteSubsystemRequest::~DeleteSubsystemRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.DeleteSubsystemRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteSubsystemRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void DeleteSubsystemRequest::ArenaDtor(void* object) {
  DeleteSubsystemRequest* _this = reinterpret_cast< DeleteSubsystemRequest* >(object);
  (void)_this;
}
void DeleteSubsystemRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteSubsystemRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteSubsystemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.DeleteSubsystemRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteSubsystemRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.DeleteSubsystemRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.DeleteSubsystemRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.DeleteSubsystemRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.DeleteSubsystemRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteSubsystemRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.DeleteSubsystemRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.DeleteSubsystemRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.DeleteSubsystemRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.DeleteSubsystemRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.DeleteSubsystemRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.DeleteSubsystemRequest)
  return target;
}

size_t DeleteSubsystemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.DeleteSubsystemRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.DeleteSubsystemRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteSubsystemRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.DeleteSubsystemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteSubsystemRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteSubsystemRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.DeleteSubsystemRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.DeleteSubsystemRequest)
    MergeFrom(*source);
  }
}

void DeleteSubsystemRequest::MergeFrom(const DeleteSubsystemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.DeleteSubsystemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::DeleteSubsystemRequest_Param::MergeFrom(from._internal_param());
  }
}

void DeleteSubsystemRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.DeleteSubsystemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteSubsystemRequest::CopyFrom(const DeleteSubsystemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.DeleteSubsystemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSubsystemRequest::IsInitialized() const {
  return true;
}

void DeleteSubsystemRequest::InternalSwap(DeleteSubsystemRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteSubsystemRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DeleteSubsystemResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const DeleteSubsystemResponse_Result* msg);
};

const ::grpc_cli::Status&
DeleteSubsystemResponse_Result::_Internal::status(const DeleteSubsystemResponse_Result* msg) {
  return *msg->status_;
}
DeleteSubsystemResponse_Result::DeleteSubsystemResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.DeleteSubsystemResponse.Result)
}
DeleteSubsystemResponse_Result::DeleteSubsystemResponse_Result(const DeleteSubsystemResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.DeleteSubsystemResponse.Result)
}

void DeleteSubsystemResponse_Result::SharedCtor() {
status_ = nullptr;
}

DeleteSubsystemResponse_Result::~DeleteSubsystemResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.DeleteSubsystemResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteSubsystemResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void DeleteSubsystemResponse_Result::ArenaDtor(void* object) {
  DeleteSubsystemResponse_Result* _this = reinterpret_cast< DeleteSubsystemResponse_Result* >(object);
  (void)_this;
}
void DeleteSubsystemResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteSubsystemResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteSubsystemResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.DeleteSubsystemResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteSubsystemResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteSubsystemResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.DeleteSubsystemResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.DeleteSubsystemResponse.Result)
  return target;
}

size_t DeleteSubsystemResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.DeleteSubsystemResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteSubsystemResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.DeleteSubsystemResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteSubsystemResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteSubsystemResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.DeleteSubsystemResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.DeleteSubsystemResponse.Result)
    MergeFrom(*source);
  }
}

void DeleteSubsystemResponse_Result::MergeFrom(const DeleteSubsystemResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.DeleteSubsystemResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void DeleteSubsystemResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.DeleteSubsystemResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteSubsystemResponse_Result::CopyFrom(const DeleteSubsystemResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.DeleteSubsystemResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSubsystemResponse_Result::IsInitialized() const {
  return true;
}

void DeleteSubsystemResponse_Result::InternalSwap(DeleteSubsystemResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteSubsystemResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DeleteSubsystemResponse::_Internal {
 public:
  static const ::grpc_cli::DeleteSubsystemResponse_Result& result(const DeleteSubsystemResponse* msg);
  static const ::grpc_cli::PosInfo& info(const DeleteSubsystemResponse* msg);
};

const ::grpc_cli::DeleteSubsystemResponse_Result&
DeleteSubsystemResponse::_Internal::result(const DeleteSubsystemResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
DeleteSubsystemResponse::_Internal::info(const DeleteSubsystemResponse* msg) {
  return *msg->info_;
}
DeleteSubsystemResponse::DeleteSubsystemResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.DeleteSubsystemResponse)
}
DeleteSubsystemResponse::DeleteSubsystemResponse(const DeleteSubsystemResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::DeleteSubsystemResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.DeleteSubsystemResponse)
}

void DeleteSubsystemResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

DeleteSubsystemResponse::~DeleteSubsystemResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.DeleteSubsystemResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteSubsystemResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void DeleteSubsystemResponse::ArenaDtor(void* object) {
  DeleteSubsystemResponse* _this = reinterpret_cast< DeleteSubsystemResponse* >(object);
  (void)_this;
}
void DeleteSubsystemResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteSubsystemResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteSubsystemResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.DeleteSubsystemResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteSubsystemResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.DeleteSubsystemResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.DeleteSubsystemResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.DeleteSubsystemResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteSubsystemResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.DeleteSubsystemResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.DeleteSubsystemResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.DeleteSubsystemResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.DeleteSubsystemResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.DeleteSubsystemResponse)
  return target;
}

size_t DeleteSubsystemResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.DeleteSubsystemResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.DeleteSubsystemResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteSubsystemResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.DeleteSubsystemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteSubsystemResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteSubsystemResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.DeleteSubsystemResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.DeleteSubsystemResponse)
    MergeFrom(*source);
  }
}

void DeleteSubsystemResponse::MergeFrom(const DeleteSubsystemResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.DeleteSubsystemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::DeleteSubsystemResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void DeleteSubsystemResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.DeleteSubsystemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteSubsystemResponse::CopyFrom(const DeleteSubsystemResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.DeleteSubsystemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSubsystemResponse::IsInitialized() const {
  return true;
}

void DeleteSubsystemResponse::InternalSwap(DeleteSubsystemResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeleteSubsystemResponse, info_)
      + sizeof(DeleteSubsystemResponse::info_)
      - PROTOBUF_FIELD_OFFSET(DeleteSubsystemResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteSubsystemResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AddListenerRequest_Param::_Internal {
 public:
};

AddListenerRequest_Param::AddListenerRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.AddListenerRequest.Param)
}
AddListenerRequest_Param::AddListenerRequest_Param(const AddListenerRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  subnqn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subnqn().empty()) {
    subnqn_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_subnqn(), 
      GetArena());
  }
  transporttype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_transporttype().empty()) {
    transporttype_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_transporttype(), 
      GetArena());
  }
  targetaddress_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_targetaddress().empty()) {
    targetaddress_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_targetaddress(), 
      GetArena());
  }
  transportserviceid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_transportserviceid().empty()) {
    transportserviceid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_transportserviceid(), 
      GetArena());
  }
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uuid().empty()) {
    uuid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uuid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.AddListenerRequest.Param)
}

void AddListenerRequest_Param::SharedCtor() {
subnqn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
transporttype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
targetaddress_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
transportserviceid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddListenerRequest_Param::~AddListenerRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.AddListenerRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddListenerRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  subnqn_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  transporttype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  targetaddress_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  transportserviceid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddListenerRequest_Param::ArenaDtor(void* object) {
  AddListenerRequest_Param* _this = reinterpret_cast< AddListenerRequest_Param* >(object);
  (void)_this;
}
void AddListenerRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddListenerRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddListenerRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.AddListenerRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subnqn_.ClearToEmpty();
  transporttype_.ClearToEmpty();
  targetaddress_.ClearToEmpty();
  transportserviceid_.ClearToEmpty();
  uuid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddListenerRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string subnqn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_subnqn();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AddListenerRequest.Param.subnqn"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string transportType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_transporttype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AddListenerRequest.Param.transportType"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string targetAddress = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_targetaddress();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AddListenerRequest.Param.targetAddress"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string transportServiceId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_transportserviceid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AddListenerRequest.Param.transportServiceId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string uuid = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AddListenerRequest.Param.uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddListenerRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.AddListenerRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string subnqn = 1;
  if (this->subnqn().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subnqn().data(), static_cast<int>(this->_internal_subnqn().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AddListenerRequest.Param.subnqn");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_subnqn(), target);
  }

  // string transportType = 2;
  if (this->transporttype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_transporttype().data(), static_cast<int>(this->_internal_transporttype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AddListenerRequest.Param.transportType");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_transporttype(), target);
  }

  // string targetAddress = 3;
  if (this->targetaddress().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_targetaddress().data(), static_cast<int>(this->_internal_targetaddress().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AddListenerRequest.Param.targetAddress");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_targetaddress(), target);
  }

  // string transportServiceId = 4;
  if (this->transportserviceid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_transportserviceid().data(), static_cast<int>(this->_internal_transportserviceid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AddListenerRequest.Param.transportServiceId");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_transportserviceid(), target);
  }

  // string uuid = 5;
  if (this->uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AddListenerRequest.Param.uuid");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_uuid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.AddListenerRequest.Param)
  return target;
}

size_t AddListenerRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.AddListenerRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string subnqn = 1;
  if (this->subnqn().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subnqn());
  }

  // string transportType = 2;
  if (this->transporttype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_transporttype());
  }

  // string targetAddress = 3;
  if (this->targetaddress().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_targetaddress());
  }

  // string transportServiceId = 4;
  if (this->transportserviceid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_transportserviceid());
  }

  // string uuid = 5;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddListenerRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.AddListenerRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const AddListenerRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddListenerRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.AddListenerRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.AddListenerRequest.Param)
    MergeFrom(*source);
  }
}

void AddListenerRequest_Param::MergeFrom(const AddListenerRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.AddListenerRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.subnqn().size() > 0) {
    _internal_set_subnqn(from._internal_subnqn());
  }
  if (from.transporttype().size() > 0) {
    _internal_set_transporttype(from._internal_transporttype());
  }
  if (from.targetaddress().size() > 0) {
    _internal_set_targetaddress(from._internal_targetaddress());
  }
  if (from.transportserviceid().size() > 0) {
    _internal_set_transportserviceid(from._internal_transportserviceid());
  }
  if (from.uuid().size() > 0) {
    _internal_set_uuid(from._internal_uuid());
  }
}

void AddListenerRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.AddListenerRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddListenerRequest_Param::CopyFrom(const AddListenerRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.AddListenerRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddListenerRequest_Param::IsInitialized() const {
  return true;
}

void AddListenerRequest_Param::InternalSwap(AddListenerRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  subnqn_.Swap(&other->subnqn_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  transporttype_.Swap(&other->transporttype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  targetaddress_.Swap(&other->targetaddress_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  transportserviceid_.Swap(&other->transportserviceid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  uuid_.Swap(&other->uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddListenerRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AddListenerRequest::_Internal {
 public:
  static const ::grpc_cli::AddListenerRequest_Param& param(const AddListenerRequest* msg);
};

const ::grpc_cli::AddListenerRequest_Param&
AddListenerRequest::_Internal::param(const AddListenerRequest* msg) {
  return *msg->param_;
}
AddListenerRequest::AddListenerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.AddListenerRequest)
}
AddListenerRequest::AddListenerRequest(const AddListenerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::AddListenerRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.AddListenerRequest)
}

void AddListenerRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

AddListenerRequest::~AddListenerRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.AddListenerRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddListenerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void AddListenerRequest::ArenaDtor(void* object) {
  AddListenerRequest* _this = reinterpret_cast< AddListenerRequest* >(object);
  (void)_this;
}
void AddListenerRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddListenerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddListenerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.AddListenerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddListenerRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AddListenerRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AddListenerRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AddListenerRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.AddListenerRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddListenerRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.AddListenerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AddListenerRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AddListenerRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AddListenerRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.AddListenerRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.AddListenerRequest)
  return target;
}

size_t AddListenerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.AddListenerRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.AddListenerRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddListenerRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.AddListenerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddListenerRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddListenerRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.AddListenerRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.AddListenerRequest)
    MergeFrom(*source);
  }
}

void AddListenerRequest::MergeFrom(const AddListenerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.AddListenerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::AddListenerRequest_Param::MergeFrom(from._internal_param());
  }
}

void AddListenerRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.AddListenerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddListenerRequest::CopyFrom(const AddListenerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.AddListenerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddListenerRequest::IsInitialized() const {
  return true;
}

void AddListenerRequest::InternalSwap(AddListenerRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddListenerRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AddListenerResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const AddListenerResponse_Result* msg);
};

const ::grpc_cli::Status&
AddListenerResponse_Result::_Internal::status(const AddListenerResponse_Result* msg) {
  return *msg->status_;
}
AddListenerResponse_Result::AddListenerResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.AddListenerResponse.Result)
}
AddListenerResponse_Result::AddListenerResponse_Result(const AddListenerResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.AddListenerResponse.Result)
}

void AddListenerResponse_Result::SharedCtor() {
status_ = nullptr;
}

AddListenerResponse_Result::~AddListenerResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.AddListenerResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddListenerResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void AddListenerResponse_Result::ArenaDtor(void* object) {
  AddListenerResponse_Result* _this = reinterpret_cast< AddListenerResponse_Result* >(object);
  (void)_this;
}
void AddListenerResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddListenerResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddListenerResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.AddListenerResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddListenerResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddListenerResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.AddListenerResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.AddListenerResponse.Result)
  return target;
}

size_t AddListenerResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.AddListenerResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddListenerResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.AddListenerResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const AddListenerResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddListenerResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.AddListenerResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.AddListenerResponse.Result)
    MergeFrom(*source);
  }
}

void AddListenerResponse_Result::MergeFrom(const AddListenerResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.AddListenerResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void AddListenerResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.AddListenerResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddListenerResponse_Result::CopyFrom(const AddListenerResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.AddListenerResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddListenerResponse_Result::IsInitialized() const {
  return true;
}

void AddListenerResponse_Result::InternalSwap(AddListenerResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddListenerResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AddListenerResponse::_Internal {
 public:
  static const ::grpc_cli::AddListenerResponse_Result& result(const AddListenerResponse* msg);
  static const ::grpc_cli::PosInfo& info(const AddListenerResponse* msg);
};

const ::grpc_cli::AddListenerResponse_Result&
AddListenerResponse::_Internal::result(const AddListenerResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
AddListenerResponse::_Internal::info(const AddListenerResponse* msg) {
  return *msg->info_;
}
AddListenerResponse::AddListenerResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.AddListenerResponse)
}
AddListenerResponse::AddListenerResponse(const AddListenerResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::AddListenerResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.AddListenerResponse)
}

void AddListenerResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

AddListenerResponse::~AddListenerResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.AddListenerResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddListenerResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void AddListenerResponse::ArenaDtor(void* object) {
  AddListenerResponse* _this = reinterpret_cast< AddListenerResponse* >(object);
  (void)_this;
}
void AddListenerResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddListenerResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddListenerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.AddListenerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddListenerResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AddListenerResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AddListenerResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.AddListenerResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddListenerResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.AddListenerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AddListenerResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AddListenerResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.AddListenerResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.AddListenerResponse)
  return target;
}

size_t AddListenerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.AddListenerResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.AddListenerResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddListenerResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.AddListenerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AddListenerResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddListenerResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.AddListenerResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.AddListenerResponse)
    MergeFrom(*source);
  }
}

void AddListenerResponse::MergeFrom(const AddListenerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.AddListenerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::AddListenerResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void AddListenerResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.AddListenerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddListenerResponse::CopyFrom(const AddListenerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.AddListenerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddListenerResponse::IsInitialized() const {
  return true;
}

void AddListenerResponse::InternalSwap(AddListenerResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AddListenerResponse, info_)
      + sizeof(AddListenerResponse::info_)
      - PROTOBUF_FIELD_OFFSET(AddListenerResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AddListenerResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RemoveListenerRequest_Param::_Internal {
 public:
};

RemoveListenerRequest_Param::RemoveListenerRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.RemoveListenerRequest.Param)
}
RemoveListenerRequest_Param::RemoveListenerRequest_Param(const RemoveListenerRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  subnqn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subnqn().empty()) {
    subnqn_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_subnqn(), 
      GetArena());
  }
  transporttype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_transporttype().empty()) {
    transporttype_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_transporttype(), 
      GetArena());
  }
  targetaddress_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_targetaddress().empty()) {
    targetaddress_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_targetaddress(), 
      GetArena());
  }
  transportserviceid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_transportserviceid().empty()) {
    transportserviceid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_transportserviceid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.RemoveListenerRequest.Param)
}

void RemoveListenerRequest_Param::SharedCtor() {
subnqn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
transporttype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
targetaddress_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
transportserviceid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveListenerRequest_Param::~RemoveListenerRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.RemoveListenerRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveListenerRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  subnqn_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  transporttype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  targetaddress_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  transportserviceid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveListenerRequest_Param::ArenaDtor(void* object) {
  RemoveListenerRequest_Param* _this = reinterpret_cast< RemoveListenerRequest_Param* >(object);
  (void)_this;
}
void RemoveListenerRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveListenerRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveListenerRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.RemoveListenerRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subnqn_.ClearToEmpty();
  transporttype_.ClearToEmpty();
  targetaddress_.ClearToEmpty();
  transportserviceid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveListenerRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string subnqn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_subnqn();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.RemoveListenerRequest.Param.subnqn"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string transportType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_transporttype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.RemoveListenerRequest.Param.transportType"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string targetAddress = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_targetaddress();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.RemoveListenerRequest.Param.targetAddress"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string transportServiceId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_transportserviceid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.RemoveListenerRequest.Param.transportServiceId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveListenerRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.RemoveListenerRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string subnqn = 1;
  if (this->subnqn().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subnqn().data(), static_cast<int>(this->_internal_subnqn().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.RemoveListenerRequest.Param.subnqn");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_subnqn(), target);
  }

  // string transportType = 2;
  if (this->transporttype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_transporttype().data(), static_cast<int>(this->_internal_transporttype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.RemoveListenerRequest.Param.transportType");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_transporttype(), target);
  }

  // string targetAddress = 3;
  if (this->targetaddress().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_targetaddress().data(), static_cast<int>(this->_internal_targetaddress().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.RemoveListenerRequest.Param.targetAddress");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_targetaddress(), target);
  }

  // string transportServiceId = 4;
  if (this->transportserviceid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_transportserviceid().data(), static_cast<int>(this->_internal_transportserviceid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.RemoveListenerRequest.Param.transportServiceId");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_transportserviceid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.RemoveListenerRequest.Param)
  return target;
}

size_t RemoveListenerRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.RemoveListenerRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string subnqn = 1;
  if (this->subnqn().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subnqn());
  }

  // string transportType = 2;
  if (this->transporttype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_transporttype());
  }

  // string targetAddress = 3;
  if (this->targetaddress().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_targetaddress());
  }

  // string transportServiceId = 4;
  if (this->transportserviceid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_transportserviceid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveListenerRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.RemoveListenerRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveListenerRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveListenerRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.RemoveListenerRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.RemoveListenerRequest.Param)
    MergeFrom(*source);
  }
}

void RemoveListenerRequest_Param::MergeFrom(const RemoveListenerRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.RemoveListenerRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.subnqn().size() > 0) {
    _internal_set_subnqn(from._internal_subnqn());
  }
  if (from.transporttype().size() > 0) {
    _internal_set_transporttype(from._internal_transporttype());
  }
  if (from.targetaddress().size() > 0) {
    _internal_set_targetaddress(from._internal_targetaddress());
  }
  if (from.transportserviceid().size() > 0) {
    _internal_set_transportserviceid(from._internal_transportserviceid());
  }
}

void RemoveListenerRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.RemoveListenerRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveListenerRequest_Param::CopyFrom(const RemoveListenerRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.RemoveListenerRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveListenerRequest_Param::IsInitialized() const {
  return true;
}

void RemoveListenerRequest_Param::InternalSwap(RemoveListenerRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  subnqn_.Swap(&other->subnqn_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  transporttype_.Swap(&other->transporttype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  targetaddress_.Swap(&other->targetaddress_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  transportserviceid_.Swap(&other->transportserviceid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveListenerRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RemoveListenerRequest::_Internal {
 public:
  static const ::grpc_cli::RemoveListenerRequest_Param& param(const RemoveListenerRequest* msg);
};

const ::grpc_cli::RemoveListenerRequest_Param&
RemoveListenerRequest::_Internal::param(const RemoveListenerRequest* msg) {
  return *msg->param_;
}
RemoveListenerRequest::RemoveListenerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.RemoveListenerRequest)
}
RemoveListenerRequest::RemoveListenerRequest(const RemoveListenerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::RemoveListenerRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.RemoveListenerRequest)
}

void RemoveListenerRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

RemoveListenerRequest::~RemoveListenerRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.RemoveListenerRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveListenerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void RemoveListenerRequest::ArenaDtor(void* object) {
  RemoveListenerRequest* _this = reinterpret_cast< RemoveListenerRequest* >(object);
  (void)_this;
}
void RemoveListenerRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveListenerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveListenerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.RemoveListenerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveListenerRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.RemoveListenerRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.RemoveListenerRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.RemoveListenerRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.RemoveListenerRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveListenerRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.RemoveListenerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.RemoveListenerRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.RemoveListenerRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.RemoveListenerRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.RemoveListenerRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.RemoveListenerRequest)
  return target;
}

size_t RemoveListenerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.RemoveListenerRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.RemoveListenerRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveListenerRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.RemoveListenerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveListenerRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveListenerRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.RemoveListenerRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.RemoveListenerRequest)
    MergeFrom(*source);
  }
}

void RemoveListenerRequest::MergeFrom(const RemoveListenerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.RemoveListenerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::RemoveListenerRequest_Param::MergeFrom(from._internal_param());
  }
}

void RemoveListenerRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.RemoveListenerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveListenerRequest::CopyFrom(const RemoveListenerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.RemoveListenerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveListenerRequest::IsInitialized() const {
  return true;
}

void RemoveListenerRequest::InternalSwap(RemoveListenerRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveListenerRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RemoveListenerResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const RemoveListenerResponse_Result* msg);
};

const ::grpc_cli::Status&
RemoveListenerResponse_Result::_Internal::status(const RemoveListenerResponse_Result* msg) {
  return *msg->status_;
}
RemoveListenerResponse_Result::RemoveListenerResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.RemoveListenerResponse.Result)
}
RemoveListenerResponse_Result::RemoveListenerResponse_Result(const RemoveListenerResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.RemoveListenerResponse.Result)
}

void RemoveListenerResponse_Result::SharedCtor() {
status_ = nullptr;
}

RemoveListenerResponse_Result::~RemoveListenerResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.RemoveListenerResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveListenerResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void RemoveListenerResponse_Result::ArenaDtor(void* object) {
  RemoveListenerResponse_Result* _this = reinterpret_cast< RemoveListenerResponse_Result* >(object);
  (void)_this;
}
void RemoveListenerResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveListenerResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveListenerResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.RemoveListenerResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveListenerResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveListenerResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.RemoveListenerResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.RemoveListenerResponse.Result)
  return target;
}

size_t RemoveListenerResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.RemoveListenerResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveListenerResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.RemoveListenerResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveListenerResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveListenerResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.RemoveListenerResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.RemoveListenerResponse.Result)
    MergeFrom(*source);
  }
}

void RemoveListenerResponse_Result::MergeFrom(const RemoveListenerResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.RemoveListenerResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void RemoveListenerResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.RemoveListenerResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveListenerResponse_Result::CopyFrom(const RemoveListenerResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.RemoveListenerResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveListenerResponse_Result::IsInitialized() const {
  return true;
}

void RemoveListenerResponse_Result::InternalSwap(RemoveListenerResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveListenerResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RemoveListenerResponse::_Internal {
 public:
  static const ::grpc_cli::RemoveListenerResponse_Result& result(const RemoveListenerResponse* msg);
  static const ::grpc_cli::PosInfo& info(const RemoveListenerResponse* msg);
};

const ::grpc_cli::RemoveListenerResponse_Result&
RemoveListenerResponse::_Internal::result(const RemoveListenerResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
RemoveListenerResponse::_Internal::info(const RemoveListenerResponse* msg) {
  return *msg->info_;
}
RemoveListenerResponse::RemoveListenerResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.RemoveListenerResponse)
}
RemoveListenerResponse::RemoveListenerResponse(const RemoveListenerResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::RemoveListenerResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.RemoveListenerResponse)
}

void RemoveListenerResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

RemoveListenerResponse::~RemoveListenerResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.RemoveListenerResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveListenerResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void RemoveListenerResponse::ArenaDtor(void* object) {
  RemoveListenerResponse* _this = reinterpret_cast< RemoveListenerResponse* >(object);
  (void)_this;
}
void RemoveListenerResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveListenerResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveListenerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.RemoveListenerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveListenerResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.RemoveListenerResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.RemoveListenerResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.RemoveListenerResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveListenerResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.RemoveListenerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.RemoveListenerResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.RemoveListenerResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.RemoveListenerResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.RemoveListenerResponse)
  return target;
}

size_t RemoveListenerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.RemoveListenerResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.RemoveListenerResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveListenerResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.RemoveListenerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveListenerResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveListenerResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.RemoveListenerResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.RemoveListenerResponse)
    MergeFrom(*source);
  }
}

void RemoveListenerResponse::MergeFrom(const RemoveListenerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.RemoveListenerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::RemoveListenerResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void RemoveListenerResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.RemoveListenerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveListenerResponse::CopyFrom(const RemoveListenerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.RemoveListenerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveListenerResponse::IsInitialized() const {
  return true;
}

void RemoveListenerResponse::InternalSwap(RemoveListenerResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RemoveListenerResponse, info_)
      + sizeof(RemoveListenerResponse::info_)
      - PROTOBUF_FIELD_OFFSET(RemoveListenerResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveListenerResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Listener_Address::_Internal {
 public:
};

Listener_Address::Listener_Address(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.Listener.Address)
}
Listener_Address::Listener_Address(const Listener_Address& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  trtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_trtype().empty()) {
    trtype_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_trtype(), 
      GetArena());
  }
  adrfam_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_adrfam().empty()) {
    adrfam_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_adrfam(), 
      GetArena());
  }
  traddr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_traddr().empty()) {
    traddr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_traddr(), 
      GetArena());
  }
  trsvcid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_trsvcid().empty()) {
    trsvcid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_trsvcid(), 
      GetArena());
  }
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uuid().empty()) {
    uuid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uuid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.Listener.Address)
}

void Listener_Address::SharedCtor() {
trtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
adrfam_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
traddr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
trsvcid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Listener_Address::~Listener_Address() {
  // @@protoc_insertion_point(destructor:grpc_cli.Listener.Address)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Listener_Address::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  trtype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  adrfam_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  traddr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  trsvcid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Listener_Address::ArenaDtor(void* object) {
  Listener_Address* _this = reinterpret_cast< Listener_Address* >(object);
  (void)_this;
}
void Listener_Address::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Listener_Address::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Listener_Address::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.Listener.Address)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  trtype_.ClearToEmpty();
  adrfam_.ClearToEmpty();
  traddr_.ClearToEmpty();
  trsvcid_.ClearToEmpty();
  uuid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Listener_Address::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string trtype = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_trtype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Listener.Address.trtype"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string adrfam = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_adrfam();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Listener.Address.adrfam"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string traddr = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_traddr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Listener.Address.traddr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string trsvcid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_trsvcid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Listener.Address.trsvcid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string uuid = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Listener.Address.uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Listener_Address::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.Listener.Address)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string trtype = 1;
  if (this->trtype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_trtype().data(), static_cast<int>(this->_internal_trtype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Listener.Address.trtype");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_trtype(), target);
  }

  // string adrfam = 2;
  if (this->adrfam().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_adrfam().data(), static_cast<int>(this->_internal_adrfam().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Listener.Address.adrfam");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_adrfam(), target);
  }

  // string traddr = 3;
  if (this->traddr().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_traddr().data(), static_cast<int>(this->_internal_traddr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Listener.Address.traddr");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_traddr(), target);
  }

  // string trsvcid = 4;
  if (this->trsvcid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_trsvcid().data(), static_cast<int>(this->_internal_trsvcid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Listener.Address.trsvcid");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_trsvcid(), target);
  }

  // string uuid = 5;
  if (this->uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Listener.Address.uuid");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_uuid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.Listener.Address)
  return target;
}

size_t Listener_Address::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.Listener.Address)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string trtype = 1;
  if (this->trtype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_trtype());
  }

  // string adrfam = 2;
  if (this->adrfam().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_adrfam());
  }

  // string traddr = 3;
  if (this->traddr().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_traddr());
  }

  // string trsvcid = 4;
  if (this->trsvcid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_trsvcid());
  }

  // string uuid = 5;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Listener_Address::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.Listener.Address)
  GOOGLE_DCHECK_NE(&from, this);
  const Listener_Address* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Listener_Address>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.Listener.Address)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.Listener.Address)
    MergeFrom(*source);
  }
}

void Listener_Address::MergeFrom(const Listener_Address& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.Listener.Address)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.trtype().size() > 0) {
    _internal_set_trtype(from._internal_trtype());
  }
  if (from.adrfam().size() > 0) {
    _internal_set_adrfam(from._internal_adrfam());
  }
  if (from.traddr().size() > 0) {
    _internal_set_traddr(from._internal_traddr());
  }
  if (from.trsvcid().size() > 0) {
    _internal_set_trsvcid(from._internal_trsvcid());
  }
  if (from.uuid().size() > 0) {
    _internal_set_uuid(from._internal_uuid());
  }
}

void Listener_Address::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.Listener.Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Listener_Address::CopyFrom(const Listener_Address& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.Listener.Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Listener_Address::IsInitialized() const {
  return true;
}

void Listener_Address::InternalSwap(Listener_Address* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  trtype_.Swap(&other->trtype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  adrfam_.Swap(&other->adrfam_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  traddr_.Swap(&other->traddr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  trsvcid_.Swap(&other->trsvcid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  uuid_.Swap(&other->uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Listener_Address::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Listener::_Internal {
 public:
  static const ::grpc_cli::Listener_Address& address(const Listener* msg);
};

const ::grpc_cli::Listener_Address&
Listener::_Internal::address(const Listener* msg) {
  return *msg->address_;
}
Listener::Listener(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.Listener)
}
Listener::Listener(const Listener& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  anastate_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_anastate().empty()) {
    anastate_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_anastate(), 
      GetArena());
  }
  if (from._internal_has_address()) {
    address_ = new ::grpc_cli::Listener_Address(*from.address_);
  } else {
    address_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.Listener)
}

void Listener::SharedCtor() {
anastate_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
address_ = nullptr;
}

Listener::~Listener() {
  // @@protoc_insertion_point(destructor:grpc_cli.Listener)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Listener::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  anastate_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete address_;
}

void Listener::ArenaDtor(void* object) {
  Listener* _this = reinterpret_cast< Listener* >(object);
  (void)_this;
}
void Listener::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Listener::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Listener::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.Listener)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  anastate_.ClearToEmpty();
  if (GetArena() == nullptr && address_ != nullptr) {
    delete address_;
  }
  address_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Listener::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Listener.Address address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_address(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string anaState = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_anastate();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Listener.anaState"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Listener::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.Listener)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Listener.Address address = 1;
  if (this->has_address()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::address(this), target, stream);
  }

  // string anaState = 2;
  if (this->anastate().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_anastate().data(), static_cast<int>(this->_internal_anastate().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Listener.anaState");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_anastate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.Listener)
  return target;
}

size_t Listener::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.Listener)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string anaState = 2;
  if (this->anastate().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_anastate());
  }

  // .grpc_cli.Listener.Address address = 1;
  if (this->has_address()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *address_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Listener::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.Listener)
  GOOGLE_DCHECK_NE(&from, this);
  const Listener* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Listener>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.Listener)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.Listener)
    MergeFrom(*source);
  }
}

void Listener::MergeFrom(const Listener& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.Listener)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.anastate().size() > 0) {
    _internal_set_anastate(from._internal_anastate());
  }
  if (from.has_address()) {
    _internal_mutable_address()->::grpc_cli::Listener_Address::MergeFrom(from._internal_address());
  }
}

void Listener::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.Listener)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Listener::CopyFrom(const Listener& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.Listener)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Listener::IsInitialized() const {
  return true;
}

void Listener::InternalSwap(Listener* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  anastate_.Swap(&other->anastate_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(address_, other->address_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Listener::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListListenerRequest_Param::_Internal {
 public:
};

ListListenerRequest_Param::ListListenerRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListListenerRequest.Param)
}
ListListenerRequest_Param::ListListenerRequest_Param(const ListListenerRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  subnqn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subnqn().empty()) {
    subnqn_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_subnqn(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListListenerRequest.Param)
}

void ListListenerRequest_Param::SharedCtor() {
subnqn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListListenerRequest_Param::~ListListenerRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListListenerRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListListenerRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  subnqn_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListListenerRequest_Param::ArenaDtor(void* object) {
  ListListenerRequest_Param* _this = reinterpret_cast< ListListenerRequest_Param* >(object);
  (void)_this;
}
void ListListenerRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListListenerRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListListenerRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListListenerRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subnqn_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListListenerRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string subnqn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_subnqn();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListListenerRequest.Param.subnqn"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListListenerRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListListenerRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string subnqn = 1;
  if (this->subnqn().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subnqn().data(), static_cast<int>(this->_internal_subnqn().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListListenerRequest.Param.subnqn");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_subnqn(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListListenerRequest.Param)
  return target;
}

size_t ListListenerRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListListenerRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string subnqn = 1;
  if (this->subnqn().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subnqn());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListListenerRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListListenerRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const ListListenerRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListListenerRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListListenerRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListListenerRequest.Param)
    MergeFrom(*source);
  }
}

void ListListenerRequest_Param::MergeFrom(const ListListenerRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListListenerRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.subnqn().size() > 0) {
    _internal_set_subnqn(from._internal_subnqn());
  }
}

void ListListenerRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListListenerRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListListenerRequest_Param::CopyFrom(const ListListenerRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListListenerRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListListenerRequest_Param::IsInitialized() const {
  return true;
}

void ListListenerRequest_Param::InternalSwap(ListListenerRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  subnqn_.Swap(&other->subnqn_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ListListenerRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListListenerRequest::_Internal {
 public:
  static const ::grpc_cli::ListListenerRequest_Param& param(const ListListenerRequest* msg);
};

const ::grpc_cli::ListListenerRequest_Param&
ListListenerRequest::_Internal::param(const ListListenerRequest* msg) {
  return *msg->param_;
}
ListListenerRequest::ListListenerRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListListenerRequest)
}
ListListenerRequest::ListListenerRequest(const ListListenerRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::ListListenerRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListListenerRequest)
}

void ListListenerRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

ListListenerRequest::~ListListenerRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListListenerRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListListenerRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void ListListenerRequest::ArenaDtor(void* object) {
  ListListenerRequest* _this = reinterpret_cast< ListListenerRequest* >(object);
  (void)_this;
}
void ListListenerRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListListenerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListListenerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListListenerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListListenerRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListListenerRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListListenerRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListListenerRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ListListenerRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListListenerRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListListenerRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListListenerRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListListenerRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListListenerRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.ListListenerRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListListenerRequest)
  return target;
}

size_t ListListenerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListListenerRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.ListListenerRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListListenerRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListListenerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListListenerRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListListenerRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListListenerRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListListenerRequest)
    MergeFrom(*source);
  }
}

void ListListenerRequest::MergeFrom(const ListListenerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListListenerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::ListListenerRequest_Param::MergeFrom(from._internal_param());
  }
}

void ListListenerRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListListenerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListListenerRequest::CopyFrom(const ListListenerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListListenerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListListenerRequest::IsInitialized() const {
  return true;
}

void ListListenerRequest::InternalSwap(ListListenerRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListListenerRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListListenerResponse_Result_ListenerList::_Internal {
 public:
};

ListListenerResponse_Result_ListenerList::ListListenerResponse_Result_ListenerList(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  listenerlist_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListListenerResponse.Result.ListenerList)
}
ListListenerResponse_Result_ListenerList::ListListenerResponse_Result_ListenerList(const ListListenerResponse_Result_ListenerList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      listenerlist_(from.listenerlist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListListenerResponse.Result.ListenerList)
}

void ListListenerResponse_Result_ListenerList::SharedCtor() {
}

ListListenerResponse_Result_ListenerList::~ListListenerResponse_Result_ListenerList() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListListenerResponse.Result.ListenerList)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListListenerResponse_Result_ListenerList::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ListListenerResponse_Result_ListenerList::ArenaDtor(void* object) {
  ListListenerResponse_Result_ListenerList* _this = reinterpret_cast< ListListenerResponse_Result_ListenerList* >(object);
  (void)_this;
}
void ListListenerResponse_Result_ListenerList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListListenerResponse_Result_ListenerList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListListenerResponse_Result_ListenerList::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListListenerResponse.Result.ListenerList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  listenerlist_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListListenerResponse_Result_ListenerList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .grpc_cli.Listener listenerlist = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_listenerlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListListenerResponse_Result_ListenerList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListListenerResponse.Result.ListenerList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grpc_cli.Listener listenerlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_listenerlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_listenerlist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListListenerResponse.Result.ListenerList)
  return target;
}

size_t ListListenerResponse_Result_ListenerList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListListenerResponse.Result.ListenerList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_cli.Listener listenerlist = 1;
  total_size += 1UL * this->_internal_listenerlist_size();
  for (const auto& msg : this->listenerlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListListenerResponse_Result_ListenerList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListListenerResponse.Result.ListenerList)
  GOOGLE_DCHECK_NE(&from, this);
  const ListListenerResponse_Result_ListenerList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListListenerResponse_Result_ListenerList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListListenerResponse.Result.ListenerList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListListenerResponse.Result.ListenerList)
    MergeFrom(*source);
  }
}

void ListListenerResponse_Result_ListenerList::MergeFrom(const ListListenerResponse_Result_ListenerList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListListenerResponse.Result.ListenerList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  listenerlist_.MergeFrom(from.listenerlist_);
}

void ListListenerResponse_Result_ListenerList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListListenerResponse.Result.ListenerList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListListenerResponse_Result_ListenerList::CopyFrom(const ListListenerResponse_Result_ListenerList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListListenerResponse.Result.ListenerList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListListenerResponse_Result_ListenerList::IsInitialized() const {
  return true;
}

void ListListenerResponse_Result_ListenerList::InternalSwap(ListListenerResponse_Result_ListenerList* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  listenerlist_.InternalSwap(&other->listenerlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListListenerResponse_Result_ListenerList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListListenerResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const ListListenerResponse_Result* msg);
  static const ::grpc_cli::ListListenerResponse_Result_ListenerList& data(const ListListenerResponse_Result* msg);
};

const ::grpc_cli::Status&
ListListenerResponse_Result::_Internal::status(const ListListenerResponse_Result* msg) {
  return *msg->status_;
}
const ::grpc_cli::ListListenerResponse_Result_ListenerList&
ListListenerResponse_Result::_Internal::data(const ListListenerResponse_Result* msg) {
  return *msg->data_;
}
ListListenerResponse_Result::ListListenerResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListListenerResponse.Result)
}
ListListenerResponse_Result::ListListenerResponse_Result(const ListListenerResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_data()) {
    data_ = new ::grpc_cli::ListListenerResponse_Result_ListenerList(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListListenerResponse.Result)
}

void ListListenerResponse_Result::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&data_) -
    reinterpret_cast<char*>(&status_)) + sizeof(data_));
}

ListListenerResponse_Result::~ListListenerResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListListenerResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListListenerResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete data_;
}

void ListListenerResponse_Result::ArenaDtor(void* object) {
  ListListenerResponse_Result* _this = reinterpret_cast< ListListenerResponse_Result* >(object);
  (void)_this;
}
void ListListenerResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListListenerResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListListenerResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListListenerResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListListenerResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ListListenerResponse.Result.ListenerList data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListListenerResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListListenerResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .grpc_cli.ListListenerResponse.Result.ListenerList data = 2;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListListenerResponse.Result)
  return target;
}

size_t ListListenerResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListListenerResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .grpc_cli.ListListenerResponse.Result.ListenerList data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListListenerResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListListenerResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const ListListenerResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListListenerResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListListenerResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListListenerResponse.Result)
    MergeFrom(*source);
  }
}

void ListListenerResponse_Result::MergeFrom(const ListListenerResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListListenerResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
  if (from.has_data()) {
    _internal_mutable_data()->::grpc_cli::ListListenerResponse_Result_ListenerList::MergeFrom(from._internal_data());
  }
}

void ListListenerResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListListenerResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListListenerResponse_Result::CopyFrom(const ListListenerResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListListenerResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListListenerResponse_Result::IsInitialized() const {
  return true;
}

void ListListenerResponse_Result::InternalSwap(ListListenerResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListListenerResponse_Result, data_)
      + sizeof(ListListenerResponse_Result::data_)
      - PROTOBUF_FIELD_OFFSET(ListListenerResponse_Result, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListListenerResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListListenerResponse::_Internal {
 public:
  static const ::grpc_cli::ListListenerResponse_Result& result(const ListListenerResponse* msg);
  static const ::grpc_cli::PosInfo& info(const ListListenerResponse* msg);
};

const ::grpc_cli::ListListenerResponse_Result&
ListListenerResponse::_Internal::result(const ListListenerResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
ListListenerResponse::_Internal::info(const ListListenerResponse* msg) {
  return *msg->info_;
}
ListListenerResponse::ListListenerResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListListenerResponse)
}
ListListenerResponse::ListListenerResponse(const ListListenerResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::ListListenerResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListListenerResponse)
}

void ListListenerResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

ListListenerResponse::~ListListenerResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListListenerResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListListenerResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void ListListenerResponse::ArenaDtor(void* object) {
  ListListenerResponse* _this = reinterpret_cast< ListListenerResponse* >(object);
  (void)_this;
}
void ListListenerResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListListenerResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListListenerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListListenerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListListenerResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListListenerResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListListenerResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ListListenerResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListListenerResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListListenerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListListenerResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListListenerResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.ListListenerResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListListenerResponse)
  return target;
}

size_t ListListenerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListListenerResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.ListListenerResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListListenerResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListListenerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListListenerResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListListenerResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListListenerResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListListenerResponse)
    MergeFrom(*source);
  }
}

void ListListenerResponse::MergeFrom(const ListListenerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListListenerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::ListListenerResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void ListListenerResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListListenerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListListenerResponse::CopyFrom(const ListListenerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListListenerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListListenerResponse::IsInitialized() const {
  return true;
}

void ListListenerResponse::InternalSwap(ListListenerResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListListenerResponse, info_)
      + sizeof(ListListenerResponse::info_)
      - PROTOBUF_FIELD_OFFSET(ListListenerResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListListenerResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Subsystem_AddressInfo::_Internal {
 public:
};

Subsystem_AddressInfo::Subsystem_AddressInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.Subsystem.AddressInfo)
}
Subsystem_AddressInfo::Subsystem_AddressInfo(const Subsystem_AddressInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  transporttype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_transporttype().empty()) {
    transporttype_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_transporttype(), 
      GetArena());
  }
  addressfamily_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_addressfamily().empty()) {
    addressfamily_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_addressfamily(), 
      GetArena());
  }
  targetaddress_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_targetaddress().empty()) {
    targetaddress_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_targetaddress(), 
      GetArena());
  }
  transportserviceid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_transportserviceid().empty()) {
    transportserviceid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_transportserviceid(), 
      GetArena());
  }
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uuid().empty()) {
    uuid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uuid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.Subsystem.AddressInfo)
}

void Subsystem_AddressInfo::SharedCtor() {
transporttype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
addressfamily_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
targetaddress_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
transportserviceid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Subsystem_AddressInfo::~Subsystem_AddressInfo() {
  // @@protoc_insertion_point(destructor:grpc_cli.Subsystem.AddressInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Subsystem_AddressInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  transporttype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  addressfamily_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  targetaddress_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  transportserviceid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Subsystem_AddressInfo::ArenaDtor(void* object) {
  Subsystem_AddressInfo* _this = reinterpret_cast< Subsystem_AddressInfo* >(object);
  (void)_this;
}
void Subsystem_AddressInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Subsystem_AddressInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Subsystem_AddressInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.Subsystem.AddressInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transporttype_.ClearToEmpty();
  addressfamily_.ClearToEmpty();
  targetaddress_.ClearToEmpty();
  transportserviceid_.ClearToEmpty();
  uuid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Subsystem_AddressInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string transportType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_transporttype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Subsystem.AddressInfo.transportType"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string addressFamily = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_addressfamily();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Subsystem.AddressInfo.addressFamily"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string targetAddress = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_targetaddress();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Subsystem.AddressInfo.targetAddress"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string transportServiceId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_transportserviceid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Subsystem.AddressInfo.transportServiceId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string uuid = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Subsystem.AddressInfo.uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Subsystem_AddressInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.Subsystem.AddressInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string transportType = 1;
  if (this->transporttype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_transporttype().data(), static_cast<int>(this->_internal_transporttype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Subsystem.AddressInfo.transportType");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_transporttype(), target);
  }

  // string addressFamily = 2;
  if (this->addressfamily().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_addressfamily().data(), static_cast<int>(this->_internal_addressfamily().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Subsystem.AddressInfo.addressFamily");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_addressfamily(), target);
  }

  // string targetAddress = 3;
  if (this->targetaddress().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_targetaddress().data(), static_cast<int>(this->_internal_targetaddress().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Subsystem.AddressInfo.targetAddress");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_targetaddress(), target);
  }

  // string transportServiceId = 4;
  if (this->transportserviceid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_transportserviceid().data(), static_cast<int>(this->_internal_transportserviceid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Subsystem.AddressInfo.transportServiceId");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_transportserviceid(), target);
  }

  // string uuid = 5;
  if (this->uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Subsystem.AddressInfo.uuid");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_uuid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.Subsystem.AddressInfo)
  return target;
}

size_t Subsystem_AddressInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.Subsystem.AddressInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string transportType = 1;
  if (this->transporttype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_transporttype());
  }

  // string addressFamily = 2;
  if (this->addressfamily().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_addressfamily());
  }

  // string targetAddress = 3;
  if (this->targetaddress().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_targetaddress());
  }

  // string transportServiceId = 4;
  if (this->transportserviceid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_transportserviceid());
  }

  // string uuid = 5;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Subsystem_AddressInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.Subsystem.AddressInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Subsystem_AddressInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Subsystem_AddressInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.Subsystem.AddressInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.Subsystem.AddressInfo)
    MergeFrom(*source);
  }
}

void Subsystem_AddressInfo::MergeFrom(const Subsystem_AddressInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.Subsystem.AddressInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.transporttype().size() > 0) {
    _internal_set_transporttype(from._internal_transporttype());
  }
  if (from.addressfamily().size() > 0) {
    _internal_set_addressfamily(from._internal_addressfamily());
  }
  if (from.targetaddress().size() > 0) {
    _internal_set_targetaddress(from._internal_targetaddress());
  }
  if (from.transportserviceid().size() > 0) {
    _internal_set_transportserviceid(from._internal_transportserviceid());
  }
  if (from.uuid().size() > 0) {
    _internal_set_uuid(from._internal_uuid());
  }
}

void Subsystem_AddressInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.Subsystem.AddressInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Subsystem_AddressInfo::CopyFrom(const Subsystem_AddressInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.Subsystem.AddressInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Subsystem_AddressInfo::IsInitialized() const {
  return true;
}

void Subsystem_AddressInfo::InternalSwap(Subsystem_AddressInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  transporttype_.Swap(&other->transporttype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  addressfamily_.Swap(&other->addressfamily_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  targetaddress_.Swap(&other->targetaddress_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  transportserviceid_.Swap(&other->transportserviceid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  uuid_.Swap(&other->uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Subsystem_AddressInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Subsystem_Host::_Internal {
 public:
};

Subsystem_Host::Subsystem_Host(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.Subsystem.Host)
}
Subsystem_Host::Subsystem_Host(const Subsystem_Host& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  nqn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_nqn().empty()) {
    nqn_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_nqn(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.Subsystem.Host)
}

void Subsystem_Host::SharedCtor() {
nqn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Subsystem_Host::~Subsystem_Host() {
  // @@protoc_insertion_point(destructor:grpc_cli.Subsystem.Host)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Subsystem_Host::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  nqn_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Subsystem_Host::ArenaDtor(void* object) {
  Subsystem_Host* _this = reinterpret_cast< Subsystem_Host* >(object);
  (void)_this;
}
void Subsystem_Host::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Subsystem_Host::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Subsystem_Host::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.Subsystem.Host)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nqn_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Subsystem_Host::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string nqn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_nqn();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Subsystem.Host.nqn"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Subsystem_Host::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.Subsystem.Host)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nqn = 1;
  if (this->nqn().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nqn().data(), static_cast<int>(this->_internal_nqn().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Subsystem.Host.nqn");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_nqn(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.Subsystem.Host)
  return target;
}

size_t Subsystem_Host::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.Subsystem.Host)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string nqn = 1;
  if (this->nqn().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nqn());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Subsystem_Host::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.Subsystem.Host)
  GOOGLE_DCHECK_NE(&from, this);
  const Subsystem_Host* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Subsystem_Host>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.Subsystem.Host)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.Subsystem.Host)
    MergeFrom(*source);
  }
}

void Subsystem_Host::MergeFrom(const Subsystem_Host& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.Subsystem.Host)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nqn().size() > 0) {
    _internal_set_nqn(from._internal_nqn());
  }
}

void Subsystem_Host::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.Subsystem.Host)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Subsystem_Host::CopyFrom(const Subsystem_Host& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.Subsystem.Host)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Subsystem_Host::IsInitialized() const {
  return true;
}

void Subsystem_Host::InternalSwap(Subsystem_Host* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  nqn_.Swap(&other->nqn_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Subsystem_Host::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Subsystem_Namespace::_Internal {
 public:
};

Subsystem_Namespace::Subsystem_Namespace(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.Subsystem.Namespace)
}
Subsystem_Namespace::Subsystem_Namespace(const Subsystem_Namespace& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  bdevname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_bdevname().empty()) {
    bdevname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_bdevname(), 
      GetArena());
  }
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uuid().empty()) {
    uuid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uuid(), 
      GetArena());
  }
  nsid_ = from.nsid_;
  // @@protoc_insertion_point(copy_constructor:grpc_cli.Subsystem.Namespace)
}

void Subsystem_Namespace::SharedCtor() {
bdevname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
nsid_ = 0;
}

Subsystem_Namespace::~Subsystem_Namespace() {
  // @@protoc_insertion_point(destructor:grpc_cli.Subsystem.Namespace)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Subsystem_Namespace::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  bdevname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Subsystem_Namespace::ArenaDtor(void* object) {
  Subsystem_Namespace* _this = reinterpret_cast< Subsystem_Namespace* >(object);
  (void)_this;
}
void Subsystem_Namespace::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Subsystem_Namespace::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Subsystem_Namespace::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.Subsystem.Namespace)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bdevname_.ClearToEmpty();
  uuid_.ClearToEmpty();
  nsid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Subsystem_Namespace::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 nsid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          nsid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string bdevName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_bdevname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Subsystem.Namespace.bdevName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string uuid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Subsystem.Namespace.uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Subsystem_Namespace::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.Subsystem.Namespace)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 nsid = 1;
  if (this->nsid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_nsid(), target);
  }

  // string bdevName = 2;
  if (this->bdevname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bdevname().data(), static_cast<int>(this->_internal_bdevname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Subsystem.Namespace.bdevName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_bdevname(), target);
  }

  // string uuid = 3;
  if (this->uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Subsystem.Namespace.uuid");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_uuid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.Subsystem.Namespace)
  return target;
}

size_t Subsystem_Namespace::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.Subsystem.Namespace)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string bdevName = 2;
  if (this->bdevname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bdevname());
  }

  // string uuid = 3;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  // int32 nsid = 1;
  if (this->nsid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_nsid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Subsystem_Namespace::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.Subsystem.Namespace)
  GOOGLE_DCHECK_NE(&from, this);
  const Subsystem_Namespace* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Subsystem_Namespace>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.Subsystem.Namespace)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.Subsystem.Namespace)
    MergeFrom(*source);
  }
}

void Subsystem_Namespace::MergeFrom(const Subsystem_Namespace& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.Subsystem.Namespace)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bdevname().size() > 0) {
    _internal_set_bdevname(from._internal_bdevname());
  }
  if (from.uuid().size() > 0) {
    _internal_set_uuid(from._internal_uuid());
  }
  if (from.nsid() != 0) {
    _internal_set_nsid(from._internal_nsid());
  }
}

void Subsystem_Namespace::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.Subsystem.Namespace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Subsystem_Namespace::CopyFrom(const Subsystem_Namespace& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.Subsystem.Namespace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Subsystem_Namespace::IsInitialized() const {
  return true;
}

void Subsystem_Namespace::InternalSwap(Subsystem_Namespace* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  bdevname_.Swap(&other->bdevname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  uuid_.Swap(&other->uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(nsid_, other->nsid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Subsystem_Namespace::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Subsystem::_Internal {
 public:
};

Subsystem::Subsystem(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  listenaddresses_(arena),
  hosts_(arena),
  namespaces_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.Subsystem)
}
Subsystem::Subsystem(const Subsystem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      listenaddresses_(from.listenaddresses_),
      hosts_(from.hosts_),
      namespaces_(from.namespaces_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  nqn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_nqn().empty()) {
    nqn_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_nqn(), 
      GetArena());
  }
  subtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subtype().empty()) {
    subtype_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_subtype(), 
      GetArena());
  }
  serialnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_serialnumber().empty()) {
    serialnumber_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_serialnumber(), 
      GetArena());
  }
  modelnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_modelnumber().empty()) {
    modelnumber_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_modelnumber(), 
      GetArena());
  }
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uuid().empty()) {
    uuid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uuid(), 
      GetArena());
  }
  ::memcpy(&allowanyhost_, &from.allowanyhost_,
    static_cast<size_t>(reinterpret_cast<char*>(&maxnamespaces_) -
    reinterpret_cast<char*>(&allowanyhost_)) + sizeof(maxnamespaces_));
  // @@protoc_insertion_point(copy_constructor:grpc_cli.Subsystem)
}

void Subsystem::SharedCtor() {
nqn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
subtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
serialnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
modelnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&allowanyhost_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&maxnamespaces_) -
    reinterpret_cast<char*>(&allowanyhost_)) + sizeof(maxnamespaces_));
}

Subsystem::~Subsystem() {
  // @@protoc_insertion_point(destructor:grpc_cli.Subsystem)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Subsystem::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  nqn_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subtype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  serialnumber_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  modelnumber_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Subsystem::ArenaDtor(void* object) {
  Subsystem* _this = reinterpret_cast< Subsystem* >(object);
  (void)_this;
}
void Subsystem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Subsystem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Subsystem::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.Subsystem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  listenaddresses_.Clear();
  hosts_.Clear();
  namespaces_.Clear();
  nqn_.ClearToEmpty();
  subtype_.ClearToEmpty();
  serialnumber_.ClearToEmpty();
  modelnumber_.ClearToEmpty();
  uuid_.ClearToEmpty();
  ::memset(&allowanyhost_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxnamespaces_) -
      reinterpret_cast<char*>(&allowanyhost_)) + sizeof(maxnamespaces_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Subsystem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string nqn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_nqn();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Subsystem.nqn"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subtype = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subtype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Subsystem.subtype"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .grpc_cli.Subsystem.AddressInfo listenAddresses = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_listenaddresses(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 allowAnyHost = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          allowanyhost_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .grpc_cli.Subsystem.Host hosts = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_hosts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // string serialNumber = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_serialnumber();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Subsystem.serialNumber"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string modelNumber = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_modelnumber();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Subsystem.modelNumber"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 maxNamespaces = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          maxnamespaces_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .grpc_cli.Subsystem.Namespace namespaces = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_namespaces(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else goto handle_unusual;
        continue;
      // string uuid = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Subsystem.uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Subsystem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.Subsystem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nqn = 1;
  if (this->nqn().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nqn().data(), static_cast<int>(this->_internal_nqn().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Subsystem.nqn");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_nqn(), target);
  }

  // string subtype = 2;
  if (this->subtype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subtype().data(), static_cast<int>(this->_internal_subtype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Subsystem.subtype");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subtype(), target);
  }

  // repeated .grpc_cli.Subsystem.AddressInfo listenAddresses = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_listenaddresses_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_listenaddresses(i), target, stream);
  }

  // int32 allowAnyHost = 4;
  if (this->allowanyhost() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_allowanyhost(), target);
  }

  // repeated .grpc_cli.Subsystem.Host hosts = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_hosts_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_hosts(i), target, stream);
  }

  // string serialNumber = 6;
  if (this->serialnumber().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_serialnumber().data(), static_cast<int>(this->_internal_serialnumber().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Subsystem.serialNumber");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_serialnumber(), target);
  }

  // string modelNumber = 7;
  if (this->modelnumber().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_modelnumber().data(), static_cast<int>(this->_internal_modelnumber().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Subsystem.modelNumber");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_modelnumber(), target);
  }

  // int32 maxNamespaces = 8;
  if (this->maxnamespaces() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_maxnamespaces(), target);
  }

  // repeated .grpc_cli.Subsystem.Namespace namespaces = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_namespaces_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, this->_internal_namespaces(i), target, stream);
  }

  // string uuid = 10;
  if (this->uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Subsystem.uuid");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_uuid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.Subsystem)
  return target;
}

size_t Subsystem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.Subsystem)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_cli.Subsystem.AddressInfo listenAddresses = 3;
  total_size += 1UL * this->_internal_listenaddresses_size();
  for (const auto& msg : this->listenaddresses_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .grpc_cli.Subsystem.Host hosts = 5;
  total_size += 1UL * this->_internal_hosts_size();
  for (const auto& msg : this->hosts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .grpc_cli.Subsystem.Namespace namespaces = 9;
  total_size += 1UL * this->_internal_namespaces_size();
  for (const auto& msg : this->namespaces_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string nqn = 1;
  if (this->nqn().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nqn());
  }

  // string subtype = 2;
  if (this->subtype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subtype());
  }

  // string serialNumber = 6;
  if (this->serialnumber().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_serialnumber());
  }

  // string modelNumber = 7;
  if (this->modelnumber().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_modelnumber());
  }

  // string uuid = 10;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  // int32 allowAnyHost = 4;
  if (this->allowanyhost() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_allowanyhost());
  }

  // int32 maxNamespaces = 8;
  if (this->maxnamespaces() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_maxnamespaces());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Subsystem::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.Subsystem)
  GOOGLE_DCHECK_NE(&from, this);
  const Subsystem* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Subsystem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.Subsystem)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.Subsystem)
    MergeFrom(*source);
  }
}

void Subsystem::MergeFrom(const Subsystem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.Subsystem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  listenaddresses_.MergeFrom(from.listenaddresses_);
  hosts_.MergeFrom(from.hosts_);
  namespaces_.MergeFrom(from.namespaces_);
  if (from.nqn().size() > 0) {
    _internal_set_nqn(from._internal_nqn());
  }
  if (from.subtype().size() > 0) {
    _internal_set_subtype(from._internal_subtype());
  }
  if (from.serialnumber().size() > 0) {
    _internal_set_serialnumber(from._internal_serialnumber());
  }
  if (from.modelnumber().size() > 0) {
    _internal_set_modelnumber(from._internal_modelnumber());
  }
  if (from.uuid().size() > 0) {
    _internal_set_uuid(from._internal_uuid());
  }
  if (from.allowanyhost() != 0) {
    _internal_set_allowanyhost(from._internal_allowanyhost());
  }
  if (from.maxnamespaces() != 0) {
    _internal_set_maxnamespaces(from._internal_maxnamespaces());
  }
}

void Subsystem::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.Subsystem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Subsystem::CopyFrom(const Subsystem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.Subsystem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Subsystem::IsInitialized() const {
  return true;
}

void Subsystem::InternalSwap(Subsystem* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  listenaddresses_.InternalSwap(&other->listenaddresses_);
  hosts_.InternalSwap(&other->hosts_);
  namespaces_.InternalSwap(&other->namespaces_);
  nqn_.Swap(&other->nqn_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subtype_.Swap(&other->subtype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  serialnumber_.Swap(&other->serialnumber_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  modelnumber_.Swap(&other->modelnumber_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  uuid_.Swap(&other->uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Subsystem, maxnamespaces_)
      + sizeof(Subsystem::maxnamespaces_)
      - PROTOBUF_FIELD_OFFSET(Subsystem, allowanyhost_)>(
          reinterpret_cast<char*>(&allowanyhost_),
          reinterpret_cast<char*>(&other->allowanyhost_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Subsystem::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListSubsystemRequest::_Internal {
 public:
};

ListSubsystemRequest::ListSubsystemRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListSubsystemRequest)
}
ListSubsystemRequest::ListSubsystemRequest(const ListSubsystemRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListSubsystemRequest)
}

void ListSubsystemRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListSubsystemRequest::~ListSubsystemRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListSubsystemRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListSubsystemRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListSubsystemRequest::ArenaDtor(void* object) {
  ListSubsystemRequest* _this = reinterpret_cast< ListSubsystemRequest* >(object);
  (void)_this;
}
void ListSubsystemRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListSubsystemRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListSubsystemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListSubsystemRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListSubsystemRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListSubsystemRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListSubsystemRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListSubsystemRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListSubsystemRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListSubsystemRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListSubsystemRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListSubsystemRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListSubsystemRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListSubsystemRequest)
  return target;
}

size_t ListSubsystemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListSubsystemRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSubsystemRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListSubsystemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSubsystemRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListSubsystemRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListSubsystemRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListSubsystemRequest)
    MergeFrom(*source);
  }
}

void ListSubsystemRequest::MergeFrom(const ListSubsystemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListSubsystemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
}

void ListSubsystemRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListSubsystemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSubsystemRequest::CopyFrom(const ListSubsystemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListSubsystemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSubsystemRequest::IsInitialized() const {
  return true;
}

void ListSubsystemRequest::InternalSwap(ListSubsystemRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ListSubsystemRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListSubsystemResponse_Result_SubsystemList::_Internal {
 public:
};

ListSubsystemResponse_Result_SubsystemList::ListSubsystemResponse_Result_SubsystemList(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  subsystemlist_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListSubsystemResponse.Result.SubsystemList)
}
ListSubsystemResponse_Result_SubsystemList::ListSubsystemResponse_Result_SubsystemList(const ListSubsystemResponse_Result_SubsystemList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      subsystemlist_(from.subsystemlist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListSubsystemResponse.Result.SubsystemList)
}

void ListSubsystemResponse_Result_SubsystemList::SharedCtor() {
}

ListSubsystemResponse_Result_SubsystemList::~ListSubsystemResponse_Result_SubsystemList() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListSubsystemResponse.Result.SubsystemList)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListSubsystemResponse_Result_SubsystemList::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ListSubsystemResponse_Result_SubsystemList::ArenaDtor(void* object) {
  ListSubsystemResponse_Result_SubsystemList* _this = reinterpret_cast< ListSubsystemResponse_Result_SubsystemList* >(object);
  (void)_this;
}
void ListSubsystemResponse_Result_SubsystemList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListSubsystemResponse_Result_SubsystemList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListSubsystemResponse_Result_SubsystemList::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListSubsystemResponse.Result.SubsystemList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subsystemlist_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListSubsystemResponse_Result_SubsystemList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .grpc_cli.Subsystem subsystemlist = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_subsystemlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListSubsystemResponse_Result_SubsystemList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListSubsystemResponse.Result.SubsystemList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grpc_cli.Subsystem subsystemlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_subsystemlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_subsystemlist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListSubsystemResponse.Result.SubsystemList)
  return target;
}

size_t ListSubsystemResponse_Result_SubsystemList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListSubsystemResponse.Result.SubsystemList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_cli.Subsystem subsystemlist = 1;
  total_size += 1UL * this->_internal_subsystemlist_size();
  for (const auto& msg : this->subsystemlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSubsystemResponse_Result_SubsystemList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListSubsystemResponse.Result.SubsystemList)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSubsystemResponse_Result_SubsystemList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListSubsystemResponse_Result_SubsystemList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListSubsystemResponse.Result.SubsystemList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListSubsystemResponse.Result.SubsystemList)
    MergeFrom(*source);
  }
}

void ListSubsystemResponse_Result_SubsystemList::MergeFrom(const ListSubsystemResponse_Result_SubsystemList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListSubsystemResponse.Result.SubsystemList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  subsystemlist_.MergeFrom(from.subsystemlist_);
}

void ListSubsystemResponse_Result_SubsystemList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListSubsystemResponse.Result.SubsystemList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSubsystemResponse_Result_SubsystemList::CopyFrom(const ListSubsystemResponse_Result_SubsystemList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListSubsystemResponse.Result.SubsystemList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSubsystemResponse_Result_SubsystemList::IsInitialized() const {
  return true;
}

void ListSubsystemResponse_Result_SubsystemList::InternalSwap(ListSubsystemResponse_Result_SubsystemList* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  subsystemlist_.InternalSwap(&other->subsystemlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListSubsystemResponse_Result_SubsystemList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListSubsystemResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const ListSubsystemResponse_Result* msg);
  static const ::grpc_cli::ListSubsystemResponse_Result_SubsystemList& data(const ListSubsystemResponse_Result* msg);
};

const ::grpc_cli::Status&
ListSubsystemResponse_Result::_Internal::status(const ListSubsystemResponse_Result* msg) {
  return *msg->status_;
}
const ::grpc_cli::ListSubsystemResponse_Result_SubsystemList&
ListSubsystemResponse_Result::_Internal::data(const ListSubsystemResponse_Result* msg) {
  return *msg->data_;
}
ListSubsystemResponse_Result::ListSubsystemResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListSubsystemResponse.Result)
}
ListSubsystemResponse_Result::ListSubsystemResponse_Result(const ListSubsystemResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_data()) {
    data_ = new ::grpc_cli::ListSubsystemResponse_Result_SubsystemList(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListSubsystemResponse.Result)
}

void ListSubsystemResponse_Result::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&data_) -
    reinterpret_cast<char*>(&status_)) + sizeof(data_));
}

ListSubsystemResponse_Result::~ListSubsystemResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListSubsystemResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListSubsystemResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete data_;
}

void ListSubsystemResponse_Result::ArenaDtor(void* object) {
  ListSubsystemResponse_Result* _this = reinterpret_cast< ListSubsystemResponse_Result* >(object);
  (void)_this;
}
void ListSubsystemResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListSubsystemResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListSubsystemResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListSubsystemResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListSubsystemResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ListSubsystemResponse.Result.SubsystemList data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListSubsystemResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListSubsystemResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .grpc_cli.ListSubsystemResponse.Result.SubsystemList data = 2;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListSubsystemResponse.Result)
  return target;
}

size_t ListSubsystemResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListSubsystemResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .grpc_cli.ListSubsystemResponse.Result.SubsystemList data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSubsystemResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListSubsystemResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSubsystemResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListSubsystemResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListSubsystemResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListSubsystemResponse.Result)
    MergeFrom(*source);
  }
}

void ListSubsystemResponse_Result::MergeFrom(const ListSubsystemResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListSubsystemResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
  if (from.has_data()) {
    _internal_mutable_data()->::grpc_cli::ListSubsystemResponse_Result_SubsystemList::MergeFrom(from._internal_data());
  }
}

void ListSubsystemResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListSubsystemResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSubsystemResponse_Result::CopyFrom(const ListSubsystemResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListSubsystemResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSubsystemResponse_Result::IsInitialized() const {
  return true;
}

void ListSubsystemResponse_Result::InternalSwap(ListSubsystemResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListSubsystemResponse_Result, data_)
      + sizeof(ListSubsystemResponse_Result::data_)
      - PROTOBUF_FIELD_OFFSET(ListSubsystemResponse_Result, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListSubsystemResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListSubsystemResponse::_Internal {
 public:
  static const ::grpc_cli::ListSubsystemResponse_Result& result(const ListSubsystemResponse* msg);
  static const ::grpc_cli::PosInfo& info(const ListSubsystemResponse* msg);
};

const ::grpc_cli::ListSubsystemResponse_Result&
ListSubsystemResponse::_Internal::result(const ListSubsystemResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
ListSubsystemResponse::_Internal::info(const ListSubsystemResponse* msg) {
  return *msg->info_;
}
ListSubsystemResponse::ListSubsystemResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListSubsystemResponse)
}
ListSubsystemResponse::ListSubsystemResponse(const ListSubsystemResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::ListSubsystemResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListSubsystemResponse)
}

void ListSubsystemResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

ListSubsystemResponse::~ListSubsystemResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListSubsystemResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListSubsystemResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void ListSubsystemResponse::ArenaDtor(void* object) {
  ListSubsystemResponse* _this = reinterpret_cast< ListSubsystemResponse* >(object);
  (void)_this;
}
void ListSubsystemResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListSubsystemResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListSubsystemResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListSubsystemResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListSubsystemResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListSubsystemResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListSubsystemResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ListSubsystemResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListSubsystemResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListSubsystemResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListSubsystemResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListSubsystemResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.ListSubsystemResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListSubsystemResponse)
  return target;
}

size_t ListSubsystemResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListSubsystemResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.ListSubsystemResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSubsystemResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListSubsystemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSubsystemResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListSubsystemResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListSubsystemResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListSubsystemResponse)
    MergeFrom(*source);
  }
}

void ListSubsystemResponse::MergeFrom(const ListSubsystemResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListSubsystemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::ListSubsystemResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void ListSubsystemResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListSubsystemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSubsystemResponse::CopyFrom(const ListSubsystemResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListSubsystemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSubsystemResponse::IsInitialized() const {
  return true;
}

void ListSubsystemResponse::InternalSwap(ListSubsystemResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListSubsystemResponse, info_)
      + sizeof(ListSubsystemResponse::info_)
      - PROTOBUF_FIELD_OFFSET(ListSubsystemResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListSubsystemResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SubsystemInfoRequest_Param::_Internal {
 public:
};

SubsystemInfoRequest_Param::SubsystemInfoRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SubsystemInfoRequest.Param)
}
SubsystemInfoRequest_Param::SubsystemInfoRequest_Param(const SubsystemInfoRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  subnqn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subnqn().empty()) {
    subnqn_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_subnqn(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SubsystemInfoRequest.Param)
}

void SubsystemInfoRequest_Param::SharedCtor() {
subnqn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SubsystemInfoRequest_Param::~SubsystemInfoRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.SubsystemInfoRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SubsystemInfoRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  subnqn_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SubsystemInfoRequest_Param::ArenaDtor(void* object) {
  SubsystemInfoRequest_Param* _this = reinterpret_cast< SubsystemInfoRequest_Param* >(object);
  (void)_this;
}
void SubsystemInfoRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubsystemInfoRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SubsystemInfoRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SubsystemInfoRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subnqn_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubsystemInfoRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string subnqn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_subnqn();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SubsystemInfoRequest.Param.subnqn"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubsystemInfoRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SubsystemInfoRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string subnqn = 1;
  if (this->subnqn().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subnqn().data(), static_cast<int>(this->_internal_subnqn().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SubsystemInfoRequest.Param.subnqn");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_subnqn(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SubsystemInfoRequest.Param)
  return target;
}

size_t SubsystemInfoRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SubsystemInfoRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string subnqn = 1;
  if (this->subnqn().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subnqn());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubsystemInfoRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SubsystemInfoRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const SubsystemInfoRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubsystemInfoRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SubsystemInfoRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SubsystemInfoRequest.Param)
    MergeFrom(*source);
  }
}

void SubsystemInfoRequest_Param::MergeFrom(const SubsystemInfoRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SubsystemInfoRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.subnqn().size() > 0) {
    _internal_set_subnqn(from._internal_subnqn());
  }
}

void SubsystemInfoRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SubsystemInfoRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubsystemInfoRequest_Param::CopyFrom(const SubsystemInfoRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SubsystemInfoRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubsystemInfoRequest_Param::IsInitialized() const {
  return true;
}

void SubsystemInfoRequest_Param::InternalSwap(SubsystemInfoRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  subnqn_.Swap(&other->subnqn_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SubsystemInfoRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SubsystemInfoRequest::_Internal {
 public:
  static const ::grpc_cli::SubsystemInfoRequest_Param& param(const SubsystemInfoRequest* msg);
};

const ::grpc_cli::SubsystemInfoRequest_Param&
SubsystemInfoRequest::_Internal::param(const SubsystemInfoRequest* msg) {
  return *msg->param_;
}
SubsystemInfoRequest::SubsystemInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SubsystemInfoRequest)
}
SubsystemInfoRequest::SubsystemInfoRequest(const SubsystemInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::SubsystemInfoRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SubsystemInfoRequest)
}

void SubsystemInfoRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

SubsystemInfoRequest::~SubsystemInfoRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.SubsystemInfoRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SubsystemInfoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void SubsystemInfoRequest::ArenaDtor(void* object) {
  SubsystemInfoRequest* _this = reinterpret_cast< SubsystemInfoRequest* >(object);
  (void)_this;
}
void SubsystemInfoRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubsystemInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SubsystemInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SubsystemInfoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubsystemInfoRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SubsystemInfoRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SubsystemInfoRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SubsystemInfoRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.SubsystemInfoRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubsystemInfoRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SubsystemInfoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SubsystemInfoRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SubsystemInfoRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SubsystemInfoRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.SubsystemInfoRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SubsystemInfoRequest)
  return target;
}

size_t SubsystemInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SubsystemInfoRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.SubsystemInfoRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubsystemInfoRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SubsystemInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SubsystemInfoRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubsystemInfoRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SubsystemInfoRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SubsystemInfoRequest)
    MergeFrom(*source);
  }
}

void SubsystemInfoRequest::MergeFrom(const SubsystemInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SubsystemInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::SubsystemInfoRequest_Param::MergeFrom(from._internal_param());
  }
}

void SubsystemInfoRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SubsystemInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubsystemInfoRequest::CopyFrom(const SubsystemInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SubsystemInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubsystemInfoRequest::IsInitialized() const {
  return true;
}

void SubsystemInfoRequest::InternalSwap(SubsystemInfoRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SubsystemInfoRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SubsystemInfoResponse_Result_SubsystemList::_Internal {
 public:
};

SubsystemInfoResponse_Result_SubsystemList::SubsystemInfoResponse_Result_SubsystemList(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  subsystemlist_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SubsystemInfoResponse.Result.SubsystemList)
}
SubsystemInfoResponse_Result_SubsystemList::SubsystemInfoResponse_Result_SubsystemList(const SubsystemInfoResponse_Result_SubsystemList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      subsystemlist_(from.subsystemlist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SubsystemInfoResponse.Result.SubsystemList)
}

void SubsystemInfoResponse_Result_SubsystemList::SharedCtor() {
}

SubsystemInfoResponse_Result_SubsystemList::~SubsystemInfoResponse_Result_SubsystemList() {
  // @@protoc_insertion_point(destructor:grpc_cli.SubsystemInfoResponse.Result.SubsystemList)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SubsystemInfoResponse_Result_SubsystemList::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SubsystemInfoResponse_Result_SubsystemList::ArenaDtor(void* object) {
  SubsystemInfoResponse_Result_SubsystemList* _this = reinterpret_cast< SubsystemInfoResponse_Result_SubsystemList* >(object);
  (void)_this;
}
void SubsystemInfoResponse_Result_SubsystemList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubsystemInfoResponse_Result_SubsystemList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SubsystemInfoResponse_Result_SubsystemList::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SubsystemInfoResponse.Result.SubsystemList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subsystemlist_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubsystemInfoResponse_Result_SubsystemList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .grpc_cli.Subsystem subsystemlist = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_subsystemlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubsystemInfoResponse_Result_SubsystemList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SubsystemInfoResponse.Result.SubsystemList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grpc_cli.Subsystem subsystemlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_subsystemlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_subsystemlist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SubsystemInfoResponse.Result.SubsystemList)
  return target;
}

size_t SubsystemInfoResponse_Result_SubsystemList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SubsystemInfoResponse.Result.SubsystemList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_cli.Subsystem subsystemlist = 1;
  total_size += 1UL * this->_internal_subsystemlist_size();
  for (const auto& msg : this->subsystemlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubsystemInfoResponse_Result_SubsystemList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SubsystemInfoResponse.Result.SubsystemList)
  GOOGLE_DCHECK_NE(&from, this);
  const SubsystemInfoResponse_Result_SubsystemList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubsystemInfoResponse_Result_SubsystemList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SubsystemInfoResponse.Result.SubsystemList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SubsystemInfoResponse.Result.SubsystemList)
    MergeFrom(*source);
  }
}

void SubsystemInfoResponse_Result_SubsystemList::MergeFrom(const SubsystemInfoResponse_Result_SubsystemList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SubsystemInfoResponse.Result.SubsystemList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  subsystemlist_.MergeFrom(from.subsystemlist_);
}

void SubsystemInfoResponse_Result_SubsystemList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SubsystemInfoResponse.Result.SubsystemList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubsystemInfoResponse_Result_SubsystemList::CopyFrom(const SubsystemInfoResponse_Result_SubsystemList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SubsystemInfoResponse.Result.SubsystemList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubsystemInfoResponse_Result_SubsystemList::IsInitialized() const {
  return true;
}

void SubsystemInfoResponse_Result_SubsystemList::InternalSwap(SubsystemInfoResponse_Result_SubsystemList* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  subsystemlist_.InternalSwap(&other->subsystemlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SubsystemInfoResponse_Result_SubsystemList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SubsystemInfoResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const SubsystemInfoResponse_Result* msg);
  static const ::grpc_cli::SubsystemInfoResponse_Result_SubsystemList& data(const SubsystemInfoResponse_Result* msg);
};

const ::grpc_cli::Status&
SubsystemInfoResponse_Result::_Internal::status(const SubsystemInfoResponse_Result* msg) {
  return *msg->status_;
}
const ::grpc_cli::SubsystemInfoResponse_Result_SubsystemList&
SubsystemInfoResponse_Result::_Internal::data(const SubsystemInfoResponse_Result* msg) {
  return *msg->data_;
}
SubsystemInfoResponse_Result::SubsystemInfoResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SubsystemInfoResponse.Result)
}
SubsystemInfoResponse_Result::SubsystemInfoResponse_Result(const SubsystemInfoResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_data()) {
    data_ = new ::grpc_cli::SubsystemInfoResponse_Result_SubsystemList(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SubsystemInfoResponse.Result)
}

void SubsystemInfoResponse_Result::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&data_) -
    reinterpret_cast<char*>(&status_)) + sizeof(data_));
}

SubsystemInfoResponse_Result::~SubsystemInfoResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.SubsystemInfoResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SubsystemInfoResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete data_;
}

void SubsystemInfoResponse_Result::ArenaDtor(void* object) {
  SubsystemInfoResponse_Result* _this = reinterpret_cast< SubsystemInfoResponse_Result* >(object);
  (void)_this;
}
void SubsystemInfoResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubsystemInfoResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SubsystemInfoResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SubsystemInfoResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubsystemInfoResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.SubsystemInfoResponse.Result.SubsystemList data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubsystemInfoResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SubsystemInfoResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .grpc_cli.SubsystemInfoResponse.Result.SubsystemList data = 2;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SubsystemInfoResponse.Result)
  return target;
}

size_t SubsystemInfoResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SubsystemInfoResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .grpc_cli.SubsystemInfoResponse.Result.SubsystemList data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubsystemInfoResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SubsystemInfoResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const SubsystemInfoResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubsystemInfoResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SubsystemInfoResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SubsystemInfoResponse.Result)
    MergeFrom(*source);
  }
}

void SubsystemInfoResponse_Result::MergeFrom(const SubsystemInfoResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SubsystemInfoResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
  if (from.has_data()) {
    _internal_mutable_data()->::grpc_cli::SubsystemInfoResponse_Result_SubsystemList::MergeFrom(from._internal_data());
  }
}

void SubsystemInfoResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SubsystemInfoResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubsystemInfoResponse_Result::CopyFrom(const SubsystemInfoResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SubsystemInfoResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubsystemInfoResponse_Result::IsInitialized() const {
  return true;
}

void SubsystemInfoResponse_Result::InternalSwap(SubsystemInfoResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubsystemInfoResponse_Result, data_)
      + sizeof(SubsystemInfoResponse_Result::data_)
      - PROTOBUF_FIELD_OFFSET(SubsystemInfoResponse_Result, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SubsystemInfoResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SubsystemInfoResponse::_Internal {
 public:
  static const ::grpc_cli::SubsystemInfoResponse_Result& result(const SubsystemInfoResponse* msg);
  static const ::grpc_cli::PosInfo& info(const SubsystemInfoResponse* msg);
};

const ::grpc_cli::SubsystemInfoResponse_Result&
SubsystemInfoResponse::_Internal::result(const SubsystemInfoResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
SubsystemInfoResponse::_Internal::info(const SubsystemInfoResponse* msg) {
  return *msg->info_;
}
SubsystemInfoResponse::SubsystemInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SubsystemInfoResponse)
}
SubsystemInfoResponse::SubsystemInfoResponse(const SubsystemInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::SubsystemInfoResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SubsystemInfoResponse)
}

void SubsystemInfoResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

SubsystemInfoResponse::~SubsystemInfoResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.SubsystemInfoResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SubsystemInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void SubsystemInfoResponse::ArenaDtor(void* object) {
  SubsystemInfoResponse* _this = reinterpret_cast< SubsystemInfoResponse* >(object);
  (void)_this;
}
void SubsystemInfoResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SubsystemInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SubsystemInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SubsystemInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SubsystemInfoResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SubsystemInfoResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SubsystemInfoResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.SubsystemInfoResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubsystemInfoResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SubsystemInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SubsystemInfoResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SubsystemInfoResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.SubsystemInfoResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SubsystemInfoResponse)
  return target;
}

size_t SubsystemInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SubsystemInfoResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.SubsystemInfoResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubsystemInfoResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SubsystemInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SubsystemInfoResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubsystemInfoResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SubsystemInfoResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SubsystemInfoResponse)
    MergeFrom(*source);
  }
}

void SubsystemInfoResponse::MergeFrom(const SubsystemInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SubsystemInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::SubsystemInfoResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void SubsystemInfoResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SubsystemInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubsystemInfoResponse::CopyFrom(const SubsystemInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SubsystemInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubsystemInfoResponse::IsInitialized() const {
  return true;
}

void SubsystemInfoResponse::InternalSwap(SubsystemInfoResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubsystemInfoResponse, info_)
      + sizeof(SubsystemInfoResponse::info_)
      - PROTOBUF_FIELD_OFFSET(SubsystemInfoResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SubsystemInfoResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateTransportRequest_Param::_Internal {
 public:
};

CreateTransportRequest_Param::CreateTransportRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.CreateTransportRequest.Param)
}
CreateTransportRequest_Param::CreateTransportRequest_Param(const CreateTransportRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  transporttype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_transporttype().empty()) {
    transporttype_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_transporttype(), 
      GetArena());
  }
  ::memcpy(&bufcachesize_, &from.bufcachesize_,
    static_cast<size_t>(reinterpret_cast<char*>(&numsharedbuf_) -
    reinterpret_cast<char*>(&bufcachesize_)) + sizeof(numsharedbuf_));
  // @@protoc_insertion_point(copy_constructor:grpc_cli.CreateTransportRequest.Param)
}

void CreateTransportRequest_Param::SharedCtor() {
transporttype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&bufcachesize_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&numsharedbuf_) -
    reinterpret_cast<char*>(&bufcachesize_)) + sizeof(numsharedbuf_));
}

CreateTransportRequest_Param::~CreateTransportRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.CreateTransportRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateTransportRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  transporttype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateTransportRequest_Param::ArenaDtor(void* object) {
  CreateTransportRequest_Param* _this = reinterpret_cast< CreateTransportRequest_Param* >(object);
  (void)_this;
}
void CreateTransportRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateTransportRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateTransportRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.CreateTransportRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transporttype_.ClearToEmpty();
  ::memset(&bufcachesize_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&numsharedbuf_) -
      reinterpret_cast<char*>(&bufcachesize_)) + sizeof(numsharedbuf_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateTransportRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string transportType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_transporttype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateTransportRequest.Param.transportType"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 bufCacheSize = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          bufcachesize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 numSharedBuf = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          numsharedbuf_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateTransportRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.CreateTransportRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string transportType = 1;
  if (this->transporttype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_transporttype().data(), static_cast<int>(this->_internal_transporttype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateTransportRequest.Param.transportType");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_transporttype(), target);
  }

  // int32 bufCacheSize = 2;
  if (this->bufcachesize() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_bufcachesize(), target);
  }

  // int32 numSharedBuf = 3;
  if (this->numsharedbuf() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_numsharedbuf(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.CreateTransportRequest.Param)
  return target;
}

size_t CreateTransportRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.CreateTransportRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string transportType = 1;
  if (this->transporttype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_transporttype());
  }

  // int32 bufCacheSize = 2;
  if (this->bufcachesize() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_bufcachesize());
  }

  // int32 numSharedBuf = 3;
  if (this->numsharedbuf() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_numsharedbuf());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateTransportRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.CreateTransportRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateTransportRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateTransportRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.CreateTransportRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.CreateTransportRequest.Param)
    MergeFrom(*source);
  }
}

void CreateTransportRequest_Param::MergeFrom(const CreateTransportRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.CreateTransportRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.transporttype().size() > 0) {
    _internal_set_transporttype(from._internal_transporttype());
  }
  if (from.bufcachesize() != 0) {
    _internal_set_bufcachesize(from._internal_bufcachesize());
  }
  if (from.numsharedbuf() != 0) {
    _internal_set_numsharedbuf(from._internal_numsharedbuf());
  }
}

void CreateTransportRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.CreateTransportRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTransportRequest_Param::CopyFrom(const CreateTransportRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.CreateTransportRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTransportRequest_Param::IsInitialized() const {
  return true;
}

void CreateTransportRequest_Param::InternalSwap(CreateTransportRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  transporttype_.Swap(&other->transporttype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateTransportRequest_Param, numsharedbuf_)
      + sizeof(CreateTransportRequest_Param::numsharedbuf_)
      - PROTOBUF_FIELD_OFFSET(CreateTransportRequest_Param, bufcachesize_)>(
          reinterpret_cast<char*>(&bufcachesize_),
          reinterpret_cast<char*>(&other->bufcachesize_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateTransportRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateTransportRequest::_Internal {
 public:
  static const ::grpc_cli::CreateTransportRequest_Param& param(const CreateTransportRequest* msg);
};

const ::grpc_cli::CreateTransportRequest_Param&
CreateTransportRequest::_Internal::param(const CreateTransportRequest* msg) {
  return *msg->param_;
}
CreateTransportRequest::CreateTransportRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.CreateTransportRequest)
}
CreateTransportRequest::CreateTransportRequest(const CreateTransportRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::CreateTransportRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.CreateTransportRequest)
}

void CreateTransportRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

CreateTransportRequest::~CreateTransportRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.CreateTransportRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateTransportRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void CreateTransportRequest::ArenaDtor(void* object) {
  CreateTransportRequest* _this = reinterpret_cast< CreateTransportRequest* >(object);
  (void)_this;
}
void CreateTransportRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateTransportRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateTransportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.CreateTransportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateTransportRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateTransportRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateTransportRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateTransportRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.CreateTransportRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateTransportRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.CreateTransportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateTransportRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateTransportRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateTransportRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.CreateTransportRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.CreateTransportRequest)
  return target;
}

size_t CreateTransportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.CreateTransportRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.CreateTransportRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateTransportRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.CreateTransportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateTransportRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateTransportRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.CreateTransportRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.CreateTransportRequest)
    MergeFrom(*source);
  }
}

void CreateTransportRequest::MergeFrom(const CreateTransportRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.CreateTransportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::CreateTransportRequest_Param::MergeFrom(from._internal_param());
  }
}

void CreateTransportRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.CreateTransportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTransportRequest::CopyFrom(const CreateTransportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.CreateTransportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTransportRequest::IsInitialized() const {
  return true;
}

void CreateTransportRequest::InternalSwap(CreateTransportRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateTransportRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateTransportResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const CreateTransportResponse_Result* msg);
};

const ::grpc_cli::Status&
CreateTransportResponse_Result::_Internal::status(const CreateTransportResponse_Result* msg) {
  return *msg->status_;
}
CreateTransportResponse_Result::CreateTransportResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.CreateTransportResponse.Result)
}
CreateTransportResponse_Result::CreateTransportResponse_Result(const CreateTransportResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.CreateTransportResponse.Result)
}

void CreateTransportResponse_Result::SharedCtor() {
status_ = nullptr;
}

CreateTransportResponse_Result::~CreateTransportResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.CreateTransportResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateTransportResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void CreateTransportResponse_Result::ArenaDtor(void* object) {
  CreateTransportResponse_Result* _this = reinterpret_cast< CreateTransportResponse_Result* >(object);
  (void)_this;
}
void CreateTransportResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateTransportResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateTransportResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.CreateTransportResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateTransportResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateTransportResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.CreateTransportResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.CreateTransportResponse.Result)
  return target;
}

size_t CreateTransportResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.CreateTransportResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateTransportResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.CreateTransportResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateTransportResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateTransportResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.CreateTransportResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.CreateTransportResponse.Result)
    MergeFrom(*source);
  }
}

void CreateTransportResponse_Result::MergeFrom(const CreateTransportResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.CreateTransportResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void CreateTransportResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.CreateTransportResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTransportResponse_Result::CopyFrom(const CreateTransportResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.CreateTransportResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTransportResponse_Result::IsInitialized() const {
  return true;
}

void CreateTransportResponse_Result::InternalSwap(CreateTransportResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateTransportResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateTransportResponse::_Internal {
 public:
  static const ::grpc_cli::CreateTransportResponse_Result& result(const CreateTransportResponse* msg);
  static const ::grpc_cli::PosInfo& info(const CreateTransportResponse* msg);
};

const ::grpc_cli::CreateTransportResponse_Result&
CreateTransportResponse::_Internal::result(const CreateTransportResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
CreateTransportResponse::_Internal::info(const CreateTransportResponse* msg) {
  return *msg->info_;
}
CreateTransportResponse::CreateTransportResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.CreateTransportResponse)
}
CreateTransportResponse::CreateTransportResponse(const CreateTransportResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::CreateTransportResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.CreateTransportResponse)
}

void CreateTransportResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

CreateTransportResponse::~CreateTransportResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.CreateTransportResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateTransportResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void CreateTransportResponse::ArenaDtor(void* object) {
  CreateTransportResponse* _this = reinterpret_cast< CreateTransportResponse* >(object);
  (void)_this;
}
void CreateTransportResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateTransportResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateTransportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.CreateTransportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateTransportResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateTransportResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateTransportResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.CreateTransportResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateTransportResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.CreateTransportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateTransportResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateTransportResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.CreateTransportResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.CreateTransportResponse)
  return target;
}

size_t CreateTransportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.CreateTransportResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.CreateTransportResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateTransportResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.CreateTransportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateTransportResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateTransportResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.CreateTransportResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.CreateTransportResponse)
    MergeFrom(*source);
  }
}

void CreateTransportResponse::MergeFrom(const CreateTransportResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.CreateTransportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::CreateTransportResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void CreateTransportResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.CreateTransportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTransportResponse::CopyFrom(const CreateTransportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.CreateTransportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTransportResponse::IsInitialized() const {
  return true;
}

void CreateTransportResponse::InternalSwap(CreateTransportResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateTransportResponse, info_)
      + sizeof(CreateTransportResponse::info_)
      - PROTOBUF_FIELD_OFFSET(CreateTransportResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateTransportResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListTransportRequest::_Internal {
 public:
};

ListTransportRequest::ListTransportRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListTransportRequest)
}
ListTransportRequest::ListTransportRequest(const ListTransportRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListTransportRequest)
}

void ListTransportRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListTransportRequest::~ListTransportRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListTransportRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListTransportRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListTransportRequest::ArenaDtor(void* object) {
  ListTransportRequest* _this = reinterpret_cast< ListTransportRequest* >(object);
  (void)_this;
}
void ListTransportRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListTransportRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListTransportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListTransportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListTransportRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListTransportRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListTransportRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListTransportRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListTransportRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListTransportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListTransportRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListTransportRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListTransportRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListTransportRequest)
  return target;
}

size_t ListTransportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListTransportRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListTransportRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListTransportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListTransportRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListTransportRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListTransportRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListTransportRequest)
    MergeFrom(*source);
  }
}

void ListTransportRequest::MergeFrom(const ListTransportRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListTransportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
}

void ListTransportRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListTransportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTransportRequest::CopyFrom(const ListTransportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListTransportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTransportRequest::IsInitialized() const {
  return true;
}

void ListTransportRequest::InternalSwap(ListTransportRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ListTransportRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Transport::_Internal {
 public:
};

Transport::Transport(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.Transport)
}
Transport::Transport(const Transport& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_type().empty()) {
    type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_type(), 
      GetArena());
  }
  ::memcpy(&maxqueuedepth_, &from.maxqueuedepth_,
    static_cast<size_t>(reinterpret_cast<char*>(&numsharedbuf_) -
    reinterpret_cast<char*>(&maxqueuedepth_)) + sizeof(numsharedbuf_));
  // @@protoc_insertion_point(copy_constructor:grpc_cli.Transport)
}

void Transport::SharedCtor() {
type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&maxqueuedepth_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&numsharedbuf_) -
    reinterpret_cast<char*>(&maxqueuedepth_)) + sizeof(numsharedbuf_));
}

Transport::~Transport() {
  // @@protoc_insertion_point(destructor:grpc_cli.Transport)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Transport::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Transport::ArenaDtor(void* object) {
  Transport* _this = reinterpret_cast< Transport* >(object);
  (void)_this;
}
void Transport::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Transport::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Transport::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.Transport)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_.ClearToEmpty();
  ::memset(&maxqueuedepth_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&numsharedbuf_) -
      reinterpret_cast<char*>(&maxqueuedepth_)) + sizeof(numsharedbuf_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Transport::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Transport.type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 maxQueueDepth = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          maxqueuedepth_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 maxIoQpairsPerCtrlr = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          maxioqpairsperctrlr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 inCapsuleDataSize = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          incapsuledatasize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 maxIoSize = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          maxiosize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 ioUnitSize = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          iounitsize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 abortTimeoutSec = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          aborttimeoutsec_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 bufCacheSize = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          bufcachesize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 numSharedBuf = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          numsharedbuf_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Transport::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.Transport)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Transport.type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_type(), target);
  }

  // int32 maxQueueDepth = 2;
  if (this->maxqueuedepth() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_maxqueuedepth(), target);
  }

  // int32 maxIoQpairsPerCtrlr = 3;
  if (this->maxioqpairsperctrlr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_maxioqpairsperctrlr(), target);
  }

  // int32 inCapsuleDataSize = 4;
  if (this->incapsuledatasize() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_incapsuledatasize(), target);
  }

  // int32 maxIoSize = 5;
  if (this->maxiosize() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_maxiosize(), target);
  }

  // int32 ioUnitSize = 6;
  if (this->iounitsize() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_iounitsize(), target);
  }

  // int32 abortTimeoutSec = 7;
  if (this->aborttimeoutsec() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_aborttimeoutsec(), target);
  }

  // int32 bufCacheSize = 8;
  if (this->bufcachesize() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_bufcachesize(), target);
  }

  // int32 numSharedBuf = 9;
  if (this->numsharedbuf() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(9, this->_internal_numsharedbuf(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.Transport)
  return target;
}

size_t Transport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.Transport)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // int32 maxQueueDepth = 2;
  if (this->maxqueuedepth() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_maxqueuedepth());
  }

  // int32 maxIoQpairsPerCtrlr = 3;
  if (this->maxioqpairsperctrlr() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_maxioqpairsperctrlr());
  }

  // int32 inCapsuleDataSize = 4;
  if (this->incapsuledatasize() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_incapsuledatasize());
  }

  // int32 maxIoSize = 5;
  if (this->maxiosize() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_maxiosize());
  }

  // int32 ioUnitSize = 6;
  if (this->iounitsize() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_iounitsize());
  }

  // int32 abortTimeoutSec = 7;
  if (this->aborttimeoutsec() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_aborttimeoutsec());
  }

  // int32 bufCacheSize = 8;
  if (this->bufcachesize() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_bufcachesize());
  }

  // int32 numSharedBuf = 9;
  if (this->numsharedbuf() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_numsharedbuf());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Transport::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.Transport)
  GOOGLE_DCHECK_NE(&from, this);
  const Transport* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Transport>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.Transport)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.Transport)
    MergeFrom(*source);
  }
}

void Transport::MergeFrom(const Transport& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.Transport)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type().size() > 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.maxqueuedepth() != 0) {
    _internal_set_maxqueuedepth(from._internal_maxqueuedepth());
  }
  if (from.maxioqpairsperctrlr() != 0) {
    _internal_set_maxioqpairsperctrlr(from._internal_maxioqpairsperctrlr());
  }
  if (from.incapsuledatasize() != 0) {
    _internal_set_incapsuledatasize(from._internal_incapsuledatasize());
  }
  if (from.maxiosize() != 0) {
    _internal_set_maxiosize(from._internal_maxiosize());
  }
  if (from.iounitsize() != 0) {
    _internal_set_iounitsize(from._internal_iounitsize());
  }
  if (from.aborttimeoutsec() != 0) {
    _internal_set_aborttimeoutsec(from._internal_aborttimeoutsec());
  }
  if (from.bufcachesize() != 0) {
    _internal_set_bufcachesize(from._internal_bufcachesize());
  }
  if (from.numsharedbuf() != 0) {
    _internal_set_numsharedbuf(from._internal_numsharedbuf());
  }
}

void Transport::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.Transport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Transport::CopyFrom(const Transport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.Transport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Transport::IsInitialized() const {
  return true;
}

void Transport::InternalSwap(Transport* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  type_.Swap(&other->type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Transport, numsharedbuf_)
      + sizeof(Transport::numsharedbuf_)
      - PROTOBUF_FIELD_OFFSET(Transport, maxqueuedepth_)>(
          reinterpret_cast<char*>(&maxqueuedepth_),
          reinterpret_cast<char*>(&other->maxqueuedepth_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Transport::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListTransportResponse_Result_TransportList::_Internal {
 public:
};

ListTransportResponse_Result_TransportList::ListTransportResponse_Result_TransportList(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  transportlist_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListTransportResponse.Result.TransportList)
}
ListTransportResponse_Result_TransportList::ListTransportResponse_Result_TransportList(const ListTransportResponse_Result_TransportList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      transportlist_(from.transportlist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListTransportResponse.Result.TransportList)
}

void ListTransportResponse_Result_TransportList::SharedCtor() {
}

ListTransportResponse_Result_TransportList::~ListTransportResponse_Result_TransportList() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListTransportResponse.Result.TransportList)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListTransportResponse_Result_TransportList::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ListTransportResponse_Result_TransportList::ArenaDtor(void* object) {
  ListTransportResponse_Result_TransportList* _this = reinterpret_cast< ListTransportResponse_Result_TransportList* >(object);
  (void)_this;
}
void ListTransportResponse_Result_TransportList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListTransportResponse_Result_TransportList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListTransportResponse_Result_TransportList::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListTransportResponse.Result.TransportList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transportlist_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListTransportResponse_Result_TransportList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .grpc_cli.Transport transportlist = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_transportlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListTransportResponse_Result_TransportList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListTransportResponse.Result.TransportList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grpc_cli.Transport transportlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_transportlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_transportlist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListTransportResponse.Result.TransportList)
  return target;
}

size_t ListTransportResponse_Result_TransportList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListTransportResponse.Result.TransportList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_cli.Transport transportlist = 1;
  total_size += 1UL * this->_internal_transportlist_size();
  for (const auto& msg : this->transportlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListTransportResponse_Result_TransportList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListTransportResponse.Result.TransportList)
  GOOGLE_DCHECK_NE(&from, this);
  const ListTransportResponse_Result_TransportList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListTransportResponse_Result_TransportList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListTransportResponse.Result.TransportList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListTransportResponse.Result.TransportList)
    MergeFrom(*source);
  }
}

void ListTransportResponse_Result_TransportList::MergeFrom(const ListTransportResponse_Result_TransportList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListTransportResponse.Result.TransportList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  transportlist_.MergeFrom(from.transportlist_);
}

void ListTransportResponse_Result_TransportList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListTransportResponse.Result.TransportList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTransportResponse_Result_TransportList::CopyFrom(const ListTransportResponse_Result_TransportList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListTransportResponse.Result.TransportList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTransportResponse_Result_TransportList::IsInitialized() const {
  return true;
}

void ListTransportResponse_Result_TransportList::InternalSwap(ListTransportResponse_Result_TransportList* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  transportlist_.InternalSwap(&other->transportlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListTransportResponse_Result_TransportList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListTransportResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const ListTransportResponse_Result* msg);
  static const ::grpc_cli::ListTransportResponse_Result_TransportList& data(const ListTransportResponse_Result* msg);
};

const ::grpc_cli::Status&
ListTransportResponse_Result::_Internal::status(const ListTransportResponse_Result* msg) {
  return *msg->status_;
}
const ::grpc_cli::ListTransportResponse_Result_TransportList&
ListTransportResponse_Result::_Internal::data(const ListTransportResponse_Result* msg) {
  return *msg->data_;
}
ListTransportResponse_Result::ListTransportResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListTransportResponse.Result)
}
ListTransportResponse_Result::ListTransportResponse_Result(const ListTransportResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_data()) {
    data_ = new ::grpc_cli::ListTransportResponse_Result_TransportList(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListTransportResponse.Result)
}

void ListTransportResponse_Result::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&data_) -
    reinterpret_cast<char*>(&status_)) + sizeof(data_));
}

ListTransportResponse_Result::~ListTransportResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListTransportResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListTransportResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete data_;
}

void ListTransportResponse_Result::ArenaDtor(void* object) {
  ListTransportResponse_Result* _this = reinterpret_cast< ListTransportResponse_Result* >(object);
  (void)_this;
}
void ListTransportResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListTransportResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListTransportResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListTransportResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListTransportResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ListTransportResponse.Result.TransportList data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListTransportResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListTransportResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .grpc_cli.ListTransportResponse.Result.TransportList data = 2;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListTransportResponse.Result)
  return target;
}

size_t ListTransportResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListTransportResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .grpc_cli.ListTransportResponse.Result.TransportList data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListTransportResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListTransportResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const ListTransportResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListTransportResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListTransportResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListTransportResponse.Result)
    MergeFrom(*source);
  }
}

void ListTransportResponse_Result::MergeFrom(const ListTransportResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListTransportResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
  if (from.has_data()) {
    _internal_mutable_data()->::grpc_cli::ListTransportResponse_Result_TransportList::MergeFrom(from._internal_data());
  }
}

void ListTransportResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListTransportResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTransportResponse_Result::CopyFrom(const ListTransportResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListTransportResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTransportResponse_Result::IsInitialized() const {
  return true;
}

void ListTransportResponse_Result::InternalSwap(ListTransportResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListTransportResponse_Result, data_)
      + sizeof(ListTransportResponse_Result::data_)
      - PROTOBUF_FIELD_OFFSET(ListTransportResponse_Result, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListTransportResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListTransportResponse::_Internal {
 public:
  static const ::grpc_cli::ListTransportResponse_Result& result(const ListTransportResponse* msg);
  static const ::grpc_cli::PosInfo& info(const ListTransportResponse* msg);
};

const ::grpc_cli::ListTransportResponse_Result&
ListTransportResponse::_Internal::result(const ListTransportResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
ListTransportResponse::_Internal::info(const ListTransportResponse* msg) {
  return *msg->info_;
}
ListTransportResponse::ListTransportResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListTransportResponse)
}
ListTransportResponse::ListTransportResponse(const ListTransportResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::ListTransportResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListTransportResponse)
}

void ListTransportResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

ListTransportResponse::~ListTransportResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListTransportResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListTransportResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void ListTransportResponse::ArenaDtor(void* object) {
  ListTransportResponse* _this = reinterpret_cast< ListTransportResponse* >(object);
  (void)_this;
}
void ListTransportResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListTransportResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListTransportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListTransportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListTransportResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListTransportResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListTransportResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ListTransportResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListTransportResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListTransportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListTransportResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListTransportResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.ListTransportResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListTransportResponse)
  return target;
}

size_t ListTransportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListTransportResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.ListTransportResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListTransportResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListTransportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListTransportResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListTransportResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListTransportResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListTransportResponse)
    MergeFrom(*source);
  }
}

void ListTransportResponse::MergeFrom(const ListTransportResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListTransportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::ListTransportResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void ListTransportResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListTransportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListTransportResponse::CopyFrom(const ListTransportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListTransportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTransportResponse::IsInitialized() const {
  return true;
}

void ListTransportResponse::InternalSwap(ListTransportResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListTransportResponse, info_)
      + sizeof(ListTransportResponse::info_)
      - PROTOBUF_FIELD_OFFSET(ListTransportResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListTransportResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateVolumeRequest_Param::_Internal {
 public:
};

CreateVolumeRequest_Param::CreateVolumeRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.CreateVolumeRequest.Param)
}
CreateVolumeRequest_Param::CreateVolumeRequest_Param(const CreateVolumeRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  array_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_array().empty()) {
    array_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_array(), 
      GetArena());
  }
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uuid().empty()) {
    uuid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uuid(), 
      GetArena());
  }
  ::memcpy(&size_, &from.size_,
    static_cast<size_t>(reinterpret_cast<char*>(&isananonoptimized_) -
    reinterpret_cast<char*>(&size_)) + sizeof(isananonoptimized_));
  // @@protoc_insertion_point(copy_constructor:grpc_cli.CreateVolumeRequest.Param)
}

void CreateVolumeRequest_Param::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
array_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&size_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&isananonoptimized_) -
    reinterpret_cast<char*>(&size_)) + sizeof(isananonoptimized_));
}

CreateVolumeRequest_Param::~CreateVolumeRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.CreateVolumeRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateVolumeRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  array_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateVolumeRequest_Param::ArenaDtor(void* object) {
  CreateVolumeRequest_Param* _this = reinterpret_cast< CreateVolumeRequest_Param* >(object);
  (void)_this;
}
void CreateVolumeRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateVolumeRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateVolumeRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.CreateVolumeRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  array_.ClearToEmpty();
  uuid_.ClearToEmpty();
  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isananonoptimized_) -
      reinterpret_cast<char*>(&size_)) + sizeof(isananonoptimized_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateVolumeRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateVolumeRequest.Param.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string array = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_array();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateVolumeRequest.Param.array"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 maxiops = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          maxiops_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 maxbw = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          maxbw_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool isWalVol = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          iswalvol_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string uuid = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateVolumeRequest.Param.uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 nsid = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          nsid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool isPrimary = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          isprimary_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool isAnaNonoptimized = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          isananonoptimized_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateVolumeRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.CreateVolumeRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateVolumeRequest.Param.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string array = 2;
  if (this->array().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_array().data(), static_cast<int>(this->_internal_array().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateVolumeRequest.Param.array");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_array(), target);
  }

  // uint64 size = 3;
  if (this->size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_size(), target);
  }

  // uint64 maxiops = 4;
  if (this->maxiops() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_maxiops(), target);
  }

  // uint64 maxbw = 5;
  if (this->maxbw() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_maxbw(), target);
  }

  // bool isWalVol = 6;
  if (this->iswalvol() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_iswalvol(), target);
  }

  // string uuid = 7;
  if (this->uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateVolumeRequest.Param.uuid");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_uuid(), target);
  }

  // int32 nsid = 8;
  if (this->nsid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_nsid(), target);
  }

  // bool isPrimary = 9;
  if (this->isprimary() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(9, this->_internal_isprimary(), target);
  }

  // bool isAnaNonoptimized = 10;
  if (this->isananonoptimized() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(10, this->_internal_isananonoptimized(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.CreateVolumeRequest.Param)
  return target;
}

size_t CreateVolumeRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.CreateVolumeRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string array = 2;
  if (this->array().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_array());
  }

  // string uuid = 7;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  // uint64 size = 3;
  if (this->size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_size());
  }

  // uint64 maxiops = 4;
  if (this->maxiops() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_maxiops());
  }

  // uint64 maxbw = 5;
  if (this->maxbw() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_maxbw());
  }

  // int32 nsid = 8;
  if (this->nsid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_nsid());
  }

  // bool isWalVol = 6;
  if (this->iswalvol() != 0) {
    total_size += 1 + 1;
  }

  // bool isPrimary = 9;
  if (this->isprimary() != 0) {
    total_size += 1 + 1;
  }

  // bool isAnaNonoptimized = 10;
  if (this->isananonoptimized() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateVolumeRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.CreateVolumeRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateVolumeRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateVolumeRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.CreateVolumeRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.CreateVolumeRequest.Param)
    MergeFrom(*source);
  }
}

void CreateVolumeRequest_Param::MergeFrom(const CreateVolumeRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.CreateVolumeRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.array().size() > 0) {
    _internal_set_array(from._internal_array());
  }
  if (from.uuid().size() > 0) {
    _internal_set_uuid(from._internal_uuid());
  }
  if (from.size() != 0) {
    _internal_set_size(from._internal_size());
  }
  if (from.maxiops() != 0) {
    _internal_set_maxiops(from._internal_maxiops());
  }
  if (from.maxbw() != 0) {
    _internal_set_maxbw(from._internal_maxbw());
  }
  if (from.nsid() != 0) {
    _internal_set_nsid(from._internal_nsid());
  }
  if (from.iswalvol() != 0) {
    _internal_set_iswalvol(from._internal_iswalvol());
  }
  if (from.isprimary() != 0) {
    _internal_set_isprimary(from._internal_isprimary());
  }
  if (from.isananonoptimized() != 0) {
    _internal_set_isananonoptimized(from._internal_isananonoptimized());
  }
}

void CreateVolumeRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.CreateVolumeRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateVolumeRequest_Param::CopyFrom(const CreateVolumeRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.CreateVolumeRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateVolumeRequest_Param::IsInitialized() const {
  return true;
}

void CreateVolumeRequest_Param::InternalSwap(CreateVolumeRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  array_.Swap(&other->array_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  uuid_.Swap(&other->uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateVolumeRequest_Param, isananonoptimized_)
      + sizeof(CreateVolumeRequest_Param::isananonoptimized_)
      - PROTOBUF_FIELD_OFFSET(CreateVolumeRequest_Param, size_)>(
          reinterpret_cast<char*>(&size_),
          reinterpret_cast<char*>(&other->size_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateVolumeRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateVolumeRequest::_Internal {
 public:
  static const ::grpc_cli::CreateVolumeRequest_Param& param(const CreateVolumeRequest* msg);
};

const ::grpc_cli::CreateVolumeRequest_Param&
CreateVolumeRequest::_Internal::param(const CreateVolumeRequest* msg) {
  return *msg->param_;
}
CreateVolumeRequest::CreateVolumeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.CreateVolumeRequest)
}
CreateVolumeRequest::CreateVolumeRequest(const CreateVolumeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::CreateVolumeRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.CreateVolumeRequest)
}

void CreateVolumeRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

CreateVolumeRequest::~CreateVolumeRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.CreateVolumeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateVolumeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void CreateVolumeRequest::ArenaDtor(void* object) {
  CreateVolumeRequest* _this = reinterpret_cast< CreateVolumeRequest* >(object);
  (void)_this;
}
void CreateVolumeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateVolumeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateVolumeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.CreateVolumeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateVolumeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateVolumeRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateVolumeRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateVolumeRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.CreateVolumeRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateVolumeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.CreateVolumeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateVolumeRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateVolumeRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateVolumeRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.CreateVolumeRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.CreateVolumeRequest)
  return target;
}

size_t CreateVolumeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.CreateVolumeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.CreateVolumeRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateVolumeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.CreateVolumeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateVolumeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateVolumeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.CreateVolumeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.CreateVolumeRequest)
    MergeFrom(*source);
  }
}

void CreateVolumeRequest::MergeFrom(const CreateVolumeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.CreateVolumeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::CreateVolumeRequest_Param::MergeFrom(from._internal_param());
  }
}

void CreateVolumeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.CreateVolumeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateVolumeRequest::CopyFrom(const CreateVolumeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.CreateVolumeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateVolumeRequest::IsInitialized() const {
  return true;
}

void CreateVolumeRequest::InternalSwap(CreateVolumeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateVolumeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateVolumeResponse_Result_CreateVolumeData::_Internal {
 public:
};

CreateVolumeResponse_Result_CreateVolumeData::CreateVolumeResponse_Result_CreateVolumeData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.CreateVolumeResponse.Result.CreateVolumeData)
}
CreateVolumeResponse_Result_CreateVolumeData::CreateVolumeResponse_Result_CreateVolumeData(const CreateVolumeResponse_Result_CreateVolumeData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  targetaddress_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_targetaddress().empty()) {
    targetaddress_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_targetaddress(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.CreateVolumeResponse.Result.CreateVolumeData)
}

void CreateVolumeResponse_Result_CreateVolumeData::SharedCtor() {
targetaddress_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CreateVolumeResponse_Result_CreateVolumeData::~CreateVolumeResponse_Result_CreateVolumeData() {
  // @@protoc_insertion_point(destructor:grpc_cli.CreateVolumeResponse.Result.CreateVolumeData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateVolumeResponse_Result_CreateVolumeData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  targetaddress_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateVolumeResponse_Result_CreateVolumeData::ArenaDtor(void* object) {
  CreateVolumeResponse_Result_CreateVolumeData* _this = reinterpret_cast< CreateVolumeResponse_Result_CreateVolumeData* >(object);
  (void)_this;
}
void CreateVolumeResponse_Result_CreateVolumeData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateVolumeResponse_Result_CreateVolumeData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateVolumeResponse_Result_CreateVolumeData::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.CreateVolumeResponse.Result.CreateVolumeData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  targetaddress_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateVolumeResponse_Result_CreateVolumeData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string targetAddress = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_targetaddress();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateVolumeResponse.Result.CreateVolumeData.targetAddress"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateVolumeResponse_Result_CreateVolumeData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.CreateVolumeResponse.Result.CreateVolumeData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string targetAddress = 1;
  if (this->targetaddress().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_targetaddress().data(), static_cast<int>(this->_internal_targetaddress().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateVolumeResponse.Result.CreateVolumeData.targetAddress");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_targetaddress(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.CreateVolumeResponse.Result.CreateVolumeData)
  return target;
}

size_t CreateVolumeResponse_Result_CreateVolumeData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.CreateVolumeResponse.Result.CreateVolumeData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string targetAddress = 1;
  if (this->targetaddress().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_targetaddress());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateVolumeResponse_Result_CreateVolumeData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.CreateVolumeResponse.Result.CreateVolumeData)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateVolumeResponse_Result_CreateVolumeData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateVolumeResponse_Result_CreateVolumeData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.CreateVolumeResponse.Result.CreateVolumeData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.CreateVolumeResponse.Result.CreateVolumeData)
    MergeFrom(*source);
  }
}

void CreateVolumeResponse_Result_CreateVolumeData::MergeFrom(const CreateVolumeResponse_Result_CreateVolumeData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.CreateVolumeResponse.Result.CreateVolumeData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.targetaddress().size() > 0) {
    _internal_set_targetaddress(from._internal_targetaddress());
  }
}

void CreateVolumeResponse_Result_CreateVolumeData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.CreateVolumeResponse.Result.CreateVolumeData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateVolumeResponse_Result_CreateVolumeData::CopyFrom(const CreateVolumeResponse_Result_CreateVolumeData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.CreateVolumeResponse.Result.CreateVolumeData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateVolumeResponse_Result_CreateVolumeData::IsInitialized() const {
  return true;
}

void CreateVolumeResponse_Result_CreateVolumeData::InternalSwap(CreateVolumeResponse_Result_CreateVolumeData* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  targetaddress_.Swap(&other->targetaddress_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateVolumeResponse_Result_CreateVolumeData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateVolumeResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const CreateVolumeResponse_Result* msg);
  static const ::grpc_cli::CreateVolumeResponse_Result_CreateVolumeData& data(const CreateVolumeResponse_Result* msg);
};

const ::grpc_cli::Status&
CreateVolumeResponse_Result::_Internal::status(const CreateVolumeResponse_Result* msg) {
  return *msg->status_;
}
const ::grpc_cli::CreateVolumeResponse_Result_CreateVolumeData&
CreateVolumeResponse_Result::_Internal::data(const CreateVolumeResponse_Result* msg) {
  return *msg->data_;
}
CreateVolumeResponse_Result::CreateVolumeResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.CreateVolumeResponse.Result)
}
CreateVolumeResponse_Result::CreateVolumeResponse_Result(const CreateVolumeResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_data()) {
    data_ = new ::grpc_cli::CreateVolumeResponse_Result_CreateVolumeData(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.CreateVolumeResponse.Result)
}

void CreateVolumeResponse_Result::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&data_) -
    reinterpret_cast<char*>(&status_)) + sizeof(data_));
}

CreateVolumeResponse_Result::~CreateVolumeResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.CreateVolumeResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateVolumeResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete data_;
}

void CreateVolumeResponse_Result::ArenaDtor(void* object) {
  CreateVolumeResponse_Result* _this = reinterpret_cast< CreateVolumeResponse_Result* >(object);
  (void)_this;
}
void CreateVolumeResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateVolumeResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateVolumeResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.CreateVolumeResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateVolumeResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.CreateVolumeResponse.Result.CreateVolumeData data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateVolumeResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.CreateVolumeResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .grpc_cli.CreateVolumeResponse.Result.CreateVolumeData data = 2;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.CreateVolumeResponse.Result)
  return target;
}

size_t CreateVolumeResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.CreateVolumeResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .grpc_cli.CreateVolumeResponse.Result.CreateVolumeData data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateVolumeResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.CreateVolumeResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateVolumeResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateVolumeResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.CreateVolumeResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.CreateVolumeResponse.Result)
    MergeFrom(*source);
  }
}

void CreateVolumeResponse_Result::MergeFrom(const CreateVolumeResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.CreateVolumeResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
  if (from.has_data()) {
    _internal_mutable_data()->::grpc_cli::CreateVolumeResponse_Result_CreateVolumeData::MergeFrom(from._internal_data());
  }
}

void CreateVolumeResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.CreateVolumeResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateVolumeResponse_Result::CopyFrom(const CreateVolumeResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.CreateVolumeResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateVolumeResponse_Result::IsInitialized() const {
  return true;
}

void CreateVolumeResponse_Result::InternalSwap(CreateVolumeResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateVolumeResponse_Result, data_)
      + sizeof(CreateVolumeResponse_Result::data_)
      - PROTOBUF_FIELD_OFFSET(CreateVolumeResponse_Result, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateVolumeResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateVolumeResponse::_Internal {
 public:
  static const ::grpc_cli::CreateVolumeResponse_Result& result(const CreateVolumeResponse* msg);
  static const ::grpc_cli::PosInfo& info(const CreateVolumeResponse* msg);
};

const ::grpc_cli::CreateVolumeResponse_Result&
CreateVolumeResponse::_Internal::result(const CreateVolumeResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
CreateVolumeResponse::_Internal::info(const CreateVolumeResponse* msg) {
  return *msg->info_;
}
CreateVolumeResponse::CreateVolumeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.CreateVolumeResponse)
}
CreateVolumeResponse::CreateVolumeResponse(const CreateVolumeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::CreateVolumeResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.CreateVolumeResponse)
}

void CreateVolumeResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

CreateVolumeResponse::~CreateVolumeResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.CreateVolumeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateVolumeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void CreateVolumeResponse::ArenaDtor(void* object) {
  CreateVolumeResponse* _this = reinterpret_cast< CreateVolumeResponse* >(object);
  (void)_this;
}
void CreateVolumeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateVolumeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateVolumeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.CreateVolumeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateVolumeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateVolumeResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateVolumeResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.CreateVolumeResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateVolumeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.CreateVolumeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateVolumeResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateVolumeResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.CreateVolumeResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.CreateVolumeResponse)
  return target;
}

size_t CreateVolumeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.CreateVolumeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.CreateVolumeResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateVolumeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.CreateVolumeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateVolumeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateVolumeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.CreateVolumeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.CreateVolumeResponse)
    MergeFrom(*source);
  }
}

void CreateVolumeResponse::MergeFrom(const CreateVolumeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.CreateVolumeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::CreateVolumeResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void CreateVolumeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.CreateVolumeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateVolumeResponse::CopyFrom(const CreateVolumeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.CreateVolumeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateVolumeResponse::IsInitialized() const {
  return true;
}

void CreateVolumeResponse::InternalSwap(CreateVolumeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateVolumeResponse, info_)
      + sizeof(CreateVolumeResponse::info_)
      - PROTOBUF_FIELD_OFFSET(CreateVolumeResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateVolumeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DeleteVolumeRequest_Param::_Internal {
 public:
};

DeleteVolumeRequest_Param::DeleteVolumeRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.DeleteVolumeRequest.Param)
}
DeleteVolumeRequest_Param::DeleteVolumeRequest_Param(const DeleteVolumeRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  array_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_array().empty()) {
    array_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_array(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.DeleteVolumeRequest.Param)
}

void DeleteVolumeRequest_Param::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
array_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteVolumeRequest_Param::~DeleteVolumeRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.DeleteVolumeRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteVolumeRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  array_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteVolumeRequest_Param::ArenaDtor(void* object) {
  DeleteVolumeRequest_Param* _this = reinterpret_cast< DeleteVolumeRequest_Param* >(object);
  (void)_this;
}
void DeleteVolumeRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteVolumeRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteVolumeRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.DeleteVolumeRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  array_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteVolumeRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.DeleteVolumeRequest.Param.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string array = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_array();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.DeleteVolumeRequest.Param.array"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteVolumeRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.DeleteVolumeRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.DeleteVolumeRequest.Param.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string array = 2;
  if (this->array().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_array().data(), static_cast<int>(this->_internal_array().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.DeleteVolumeRequest.Param.array");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_array(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.DeleteVolumeRequest.Param)
  return target;
}

size_t DeleteVolumeRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.DeleteVolumeRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string array = 2;
  if (this->array().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_array());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteVolumeRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.DeleteVolumeRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteVolumeRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteVolumeRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.DeleteVolumeRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.DeleteVolumeRequest.Param)
    MergeFrom(*source);
  }
}

void DeleteVolumeRequest_Param::MergeFrom(const DeleteVolumeRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.DeleteVolumeRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.array().size() > 0) {
    _internal_set_array(from._internal_array());
  }
}

void DeleteVolumeRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.DeleteVolumeRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteVolumeRequest_Param::CopyFrom(const DeleteVolumeRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.DeleteVolumeRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteVolumeRequest_Param::IsInitialized() const {
  return true;
}

void DeleteVolumeRequest_Param::InternalSwap(DeleteVolumeRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  array_.Swap(&other->array_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteVolumeRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DeleteVolumeRequest::_Internal {
 public:
  static const ::grpc_cli::DeleteVolumeRequest_Param& param(const DeleteVolumeRequest* msg);
};

const ::grpc_cli::DeleteVolumeRequest_Param&
DeleteVolumeRequest::_Internal::param(const DeleteVolumeRequest* msg) {
  return *msg->param_;
}
DeleteVolumeRequest::DeleteVolumeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.DeleteVolumeRequest)
}
DeleteVolumeRequest::DeleteVolumeRequest(const DeleteVolumeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::DeleteVolumeRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.DeleteVolumeRequest)
}

void DeleteVolumeRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

DeleteVolumeRequest::~DeleteVolumeRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.DeleteVolumeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteVolumeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void DeleteVolumeRequest::ArenaDtor(void* object) {
  DeleteVolumeRequest* _this = reinterpret_cast< DeleteVolumeRequest* >(object);
  (void)_this;
}
void DeleteVolumeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteVolumeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteVolumeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.DeleteVolumeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteVolumeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.DeleteVolumeRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.DeleteVolumeRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.DeleteVolumeRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.DeleteVolumeRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteVolumeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.DeleteVolumeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.DeleteVolumeRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.DeleteVolumeRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.DeleteVolumeRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.DeleteVolumeRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.DeleteVolumeRequest)
  return target;
}

size_t DeleteVolumeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.DeleteVolumeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.DeleteVolumeRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteVolumeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.DeleteVolumeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteVolumeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteVolumeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.DeleteVolumeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.DeleteVolumeRequest)
    MergeFrom(*source);
  }
}

void DeleteVolumeRequest::MergeFrom(const DeleteVolumeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.DeleteVolumeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::DeleteVolumeRequest_Param::MergeFrom(from._internal_param());
  }
}

void DeleteVolumeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.DeleteVolumeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteVolumeRequest::CopyFrom(const DeleteVolumeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.DeleteVolumeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteVolumeRequest::IsInitialized() const {
  return true;
}

void DeleteVolumeRequest::InternalSwap(DeleteVolumeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteVolumeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DeleteVolumeResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const DeleteVolumeResponse_Result* msg);
};

const ::grpc_cli::Status&
DeleteVolumeResponse_Result::_Internal::status(const DeleteVolumeResponse_Result* msg) {
  return *msg->status_;
}
DeleteVolumeResponse_Result::DeleteVolumeResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.DeleteVolumeResponse.Result)
}
DeleteVolumeResponse_Result::DeleteVolumeResponse_Result(const DeleteVolumeResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.DeleteVolumeResponse.Result)
}

void DeleteVolumeResponse_Result::SharedCtor() {
status_ = nullptr;
}

DeleteVolumeResponse_Result::~DeleteVolumeResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.DeleteVolumeResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteVolumeResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void DeleteVolumeResponse_Result::ArenaDtor(void* object) {
  DeleteVolumeResponse_Result* _this = reinterpret_cast< DeleteVolumeResponse_Result* >(object);
  (void)_this;
}
void DeleteVolumeResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteVolumeResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteVolumeResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.DeleteVolumeResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteVolumeResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteVolumeResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.DeleteVolumeResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.DeleteVolumeResponse.Result)
  return target;
}

size_t DeleteVolumeResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.DeleteVolumeResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteVolumeResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.DeleteVolumeResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteVolumeResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteVolumeResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.DeleteVolumeResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.DeleteVolumeResponse.Result)
    MergeFrom(*source);
  }
}

void DeleteVolumeResponse_Result::MergeFrom(const DeleteVolumeResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.DeleteVolumeResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void DeleteVolumeResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.DeleteVolumeResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteVolumeResponse_Result::CopyFrom(const DeleteVolumeResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.DeleteVolumeResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteVolumeResponse_Result::IsInitialized() const {
  return true;
}

void DeleteVolumeResponse_Result::InternalSwap(DeleteVolumeResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteVolumeResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DeleteVolumeResponse::_Internal {
 public:
  static const ::grpc_cli::DeleteVolumeResponse_Result& result(const DeleteVolumeResponse* msg);
  static const ::grpc_cli::PosInfo& info(const DeleteVolumeResponse* msg);
};

const ::grpc_cli::DeleteVolumeResponse_Result&
DeleteVolumeResponse::_Internal::result(const DeleteVolumeResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
DeleteVolumeResponse::_Internal::info(const DeleteVolumeResponse* msg) {
  return *msg->info_;
}
DeleteVolumeResponse::DeleteVolumeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.DeleteVolumeResponse)
}
DeleteVolumeResponse::DeleteVolumeResponse(const DeleteVolumeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::DeleteVolumeResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.DeleteVolumeResponse)
}

void DeleteVolumeResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

DeleteVolumeResponse::~DeleteVolumeResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.DeleteVolumeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteVolumeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void DeleteVolumeResponse::ArenaDtor(void* object) {
  DeleteVolumeResponse* _this = reinterpret_cast< DeleteVolumeResponse* >(object);
  (void)_this;
}
void DeleteVolumeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteVolumeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteVolumeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.DeleteVolumeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteVolumeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.DeleteVolumeResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.DeleteVolumeResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.DeleteVolumeResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteVolumeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.DeleteVolumeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.DeleteVolumeResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.DeleteVolumeResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.DeleteVolumeResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.DeleteVolumeResponse)
  return target;
}

size_t DeleteVolumeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.DeleteVolumeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.DeleteVolumeResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteVolumeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.DeleteVolumeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteVolumeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteVolumeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.DeleteVolumeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.DeleteVolumeResponse)
    MergeFrom(*source);
  }
}

void DeleteVolumeResponse::MergeFrom(const DeleteVolumeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.DeleteVolumeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::DeleteVolumeResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void DeleteVolumeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.DeleteVolumeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteVolumeResponse::CopyFrom(const DeleteVolumeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.DeleteVolumeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteVolumeResponse::IsInitialized() const {
  return true;
}

void DeleteVolumeResponse::InternalSwap(DeleteVolumeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeleteVolumeResponse, info_)
      + sizeof(DeleteVolumeResponse::info_)
      - PROTOBUF_FIELD_OFFSET(DeleteVolumeResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteVolumeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UnmountVolumeRequest_Param::_Internal {
 public:
};

UnmountVolumeRequest_Param::UnmountVolumeRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.UnmountVolumeRequest.Param)
}
UnmountVolumeRequest_Param::UnmountVolumeRequest_Param(const UnmountVolumeRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  array_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_array().empty()) {
    array_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_array(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.UnmountVolumeRequest.Param)
}

void UnmountVolumeRequest_Param::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
array_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UnmountVolumeRequest_Param::~UnmountVolumeRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.UnmountVolumeRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UnmountVolumeRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  array_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UnmountVolumeRequest_Param::ArenaDtor(void* object) {
  UnmountVolumeRequest_Param* _this = reinterpret_cast< UnmountVolumeRequest_Param* >(object);
  (void)_this;
}
void UnmountVolumeRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnmountVolumeRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UnmountVolumeRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.UnmountVolumeRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  array_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnmountVolumeRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.UnmountVolumeRequest.Param.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string array = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_array();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.UnmountVolumeRequest.Param.array"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnmountVolumeRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.UnmountVolumeRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.UnmountVolumeRequest.Param.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string array = 2;
  if (this->array().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_array().data(), static_cast<int>(this->_internal_array().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.UnmountVolumeRequest.Param.array");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_array(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.UnmountVolumeRequest.Param)
  return target;
}

size_t UnmountVolumeRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.UnmountVolumeRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string array = 2;
  if (this->array().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_array());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnmountVolumeRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.UnmountVolumeRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const UnmountVolumeRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnmountVolumeRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.UnmountVolumeRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.UnmountVolumeRequest.Param)
    MergeFrom(*source);
  }
}

void UnmountVolumeRequest_Param::MergeFrom(const UnmountVolumeRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.UnmountVolumeRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.array().size() > 0) {
    _internal_set_array(from._internal_array());
  }
}

void UnmountVolumeRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.UnmountVolumeRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnmountVolumeRequest_Param::CopyFrom(const UnmountVolumeRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.UnmountVolumeRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnmountVolumeRequest_Param::IsInitialized() const {
  return true;
}

void UnmountVolumeRequest_Param::InternalSwap(UnmountVolumeRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  array_.Swap(&other->array_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata UnmountVolumeRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UnmountVolumeRequest::_Internal {
 public:
  static const ::grpc_cli::UnmountVolumeRequest_Param& param(const UnmountVolumeRequest* msg);
};

const ::grpc_cli::UnmountVolumeRequest_Param&
UnmountVolumeRequest::_Internal::param(const UnmountVolumeRequest* msg) {
  return *msg->param_;
}
UnmountVolumeRequest::UnmountVolumeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.UnmountVolumeRequest)
}
UnmountVolumeRequest::UnmountVolumeRequest(const UnmountVolumeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::UnmountVolumeRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.UnmountVolumeRequest)
}

void UnmountVolumeRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

UnmountVolumeRequest::~UnmountVolumeRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.UnmountVolumeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UnmountVolumeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void UnmountVolumeRequest::ArenaDtor(void* object) {
  UnmountVolumeRequest* _this = reinterpret_cast< UnmountVolumeRequest* >(object);
  (void)_this;
}
void UnmountVolumeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnmountVolumeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UnmountVolumeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.UnmountVolumeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnmountVolumeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.UnmountVolumeRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.UnmountVolumeRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.UnmountVolumeRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.UnmountVolumeRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnmountVolumeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.UnmountVolumeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.UnmountVolumeRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.UnmountVolumeRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.UnmountVolumeRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.UnmountVolumeRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.UnmountVolumeRequest)
  return target;
}

size_t UnmountVolumeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.UnmountVolumeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.UnmountVolumeRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnmountVolumeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.UnmountVolumeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UnmountVolumeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnmountVolumeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.UnmountVolumeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.UnmountVolumeRequest)
    MergeFrom(*source);
  }
}

void UnmountVolumeRequest::MergeFrom(const UnmountVolumeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.UnmountVolumeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::UnmountVolumeRequest_Param::MergeFrom(from._internal_param());
  }
}

void UnmountVolumeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.UnmountVolumeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnmountVolumeRequest::CopyFrom(const UnmountVolumeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.UnmountVolumeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnmountVolumeRequest::IsInitialized() const {
  return true;
}

void UnmountVolumeRequest::InternalSwap(UnmountVolumeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnmountVolumeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UnmountVolumeResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const UnmountVolumeResponse_Result* msg);
};

const ::grpc_cli::Status&
UnmountVolumeResponse_Result::_Internal::status(const UnmountVolumeResponse_Result* msg) {
  return *msg->status_;
}
UnmountVolumeResponse_Result::UnmountVolumeResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.UnmountVolumeResponse.Result)
}
UnmountVolumeResponse_Result::UnmountVolumeResponse_Result(const UnmountVolumeResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.UnmountVolumeResponse.Result)
}

void UnmountVolumeResponse_Result::SharedCtor() {
status_ = nullptr;
}

UnmountVolumeResponse_Result::~UnmountVolumeResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.UnmountVolumeResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UnmountVolumeResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void UnmountVolumeResponse_Result::ArenaDtor(void* object) {
  UnmountVolumeResponse_Result* _this = reinterpret_cast< UnmountVolumeResponse_Result* >(object);
  (void)_this;
}
void UnmountVolumeResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnmountVolumeResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UnmountVolumeResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.UnmountVolumeResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnmountVolumeResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnmountVolumeResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.UnmountVolumeResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.UnmountVolumeResponse.Result)
  return target;
}

size_t UnmountVolumeResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.UnmountVolumeResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnmountVolumeResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.UnmountVolumeResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const UnmountVolumeResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnmountVolumeResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.UnmountVolumeResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.UnmountVolumeResponse.Result)
    MergeFrom(*source);
  }
}

void UnmountVolumeResponse_Result::MergeFrom(const UnmountVolumeResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.UnmountVolumeResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void UnmountVolumeResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.UnmountVolumeResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnmountVolumeResponse_Result::CopyFrom(const UnmountVolumeResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.UnmountVolumeResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnmountVolumeResponse_Result::IsInitialized() const {
  return true;
}

void UnmountVolumeResponse_Result::InternalSwap(UnmountVolumeResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnmountVolumeResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UnmountVolumeResponse::_Internal {
 public:
  static const ::grpc_cli::UnmountVolumeResponse_Result& result(const UnmountVolumeResponse* msg);
  static const ::grpc_cli::PosInfo& info(const UnmountVolumeResponse* msg);
};

const ::grpc_cli::UnmountVolumeResponse_Result&
UnmountVolumeResponse::_Internal::result(const UnmountVolumeResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
UnmountVolumeResponse::_Internal::info(const UnmountVolumeResponse* msg) {
  return *msg->info_;
}
UnmountVolumeResponse::UnmountVolumeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.UnmountVolumeResponse)
}
UnmountVolumeResponse::UnmountVolumeResponse(const UnmountVolumeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::UnmountVolumeResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.UnmountVolumeResponse)
}

void UnmountVolumeResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

UnmountVolumeResponse::~UnmountVolumeResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.UnmountVolumeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UnmountVolumeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void UnmountVolumeResponse::ArenaDtor(void* object) {
  UnmountVolumeResponse* _this = reinterpret_cast< UnmountVolumeResponse* >(object);
  (void)_this;
}
void UnmountVolumeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnmountVolumeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UnmountVolumeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.UnmountVolumeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnmountVolumeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.UnmountVolumeResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.UnmountVolumeResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.UnmountVolumeResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnmountVolumeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.UnmountVolumeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.UnmountVolumeResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.UnmountVolumeResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.UnmountVolumeResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.UnmountVolumeResponse)
  return target;
}

size_t UnmountVolumeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.UnmountVolumeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.UnmountVolumeResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnmountVolumeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.UnmountVolumeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UnmountVolumeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnmountVolumeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.UnmountVolumeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.UnmountVolumeResponse)
    MergeFrom(*source);
  }
}

void UnmountVolumeResponse::MergeFrom(const UnmountVolumeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.UnmountVolumeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::UnmountVolumeResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void UnmountVolumeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.UnmountVolumeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnmountVolumeResponse::CopyFrom(const UnmountVolumeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.UnmountVolumeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnmountVolumeResponse::IsInitialized() const {
  return true;
}

void UnmountVolumeResponse::InternalSwap(UnmountVolumeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UnmountVolumeResponse, info_)
      + sizeof(UnmountVolumeResponse::info_)
      - PROTOBUF_FIELD_OFFSET(UnmountVolumeResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UnmountVolumeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MountVolumeRequest_Param::_Internal {
 public:
};

MountVolumeRequest_Param::MountVolumeRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.MountVolumeRequest.Param)
}
MountVolumeRequest_Param::MountVolumeRequest_Param(const MountVolumeRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  subnqn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subnqn().empty()) {
    subnqn_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_subnqn(), 
      GetArena());
  }
  array_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_array().empty()) {
    array_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_array(), 
      GetArena());
  }
  nsid_ = from.nsid_;
  // @@protoc_insertion_point(copy_constructor:grpc_cli.MountVolumeRequest.Param)
}

void MountVolumeRequest_Param::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
subnqn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
array_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
nsid_ = 0u;
}

MountVolumeRequest_Param::~MountVolumeRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.MountVolumeRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MountVolumeRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subnqn_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  array_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MountVolumeRequest_Param::ArenaDtor(void* object) {
  MountVolumeRequest_Param* _this = reinterpret_cast< MountVolumeRequest_Param* >(object);
  (void)_this;
}
void MountVolumeRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MountVolumeRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MountVolumeRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.MountVolumeRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  subnqn_.ClearToEmpty();
  array_.ClearToEmpty();
  nsid_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MountVolumeRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.MountVolumeRequest.Param.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subnqn = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subnqn();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.MountVolumeRequest.Param.subnqn"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string array = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_array();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.MountVolumeRequest.Param.array"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 nsid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          nsid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MountVolumeRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.MountVolumeRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.MountVolumeRequest.Param.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string subnqn = 2;
  if (this->subnqn().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subnqn().data(), static_cast<int>(this->_internal_subnqn().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.MountVolumeRequest.Param.subnqn");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subnqn(), target);
  }

  // string array = 3;
  if (this->array().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_array().data(), static_cast<int>(this->_internal_array().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.MountVolumeRequest.Param.array");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_array(), target);
  }

  // uint32 nsid = 4;
  if (this->nsid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_nsid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.MountVolumeRequest.Param)
  return target;
}

size_t MountVolumeRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.MountVolumeRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string subnqn = 2;
  if (this->subnqn().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subnqn());
  }

  // string array = 3;
  if (this->array().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_array());
  }

  // uint32 nsid = 4;
  if (this->nsid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_nsid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MountVolumeRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.MountVolumeRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const MountVolumeRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MountVolumeRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.MountVolumeRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.MountVolumeRequest.Param)
    MergeFrom(*source);
  }
}

void MountVolumeRequest_Param::MergeFrom(const MountVolumeRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.MountVolumeRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.subnqn().size() > 0) {
    _internal_set_subnqn(from._internal_subnqn());
  }
  if (from.array().size() > 0) {
    _internal_set_array(from._internal_array());
  }
  if (from.nsid() != 0) {
    _internal_set_nsid(from._internal_nsid());
  }
}

void MountVolumeRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.MountVolumeRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MountVolumeRequest_Param::CopyFrom(const MountVolumeRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.MountVolumeRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MountVolumeRequest_Param::IsInitialized() const {
  return true;
}

void MountVolumeRequest_Param::InternalSwap(MountVolumeRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subnqn_.Swap(&other->subnqn_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  array_.Swap(&other->array_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(nsid_, other->nsid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MountVolumeRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MountVolumeRequest::_Internal {
 public:
  static const ::grpc_cli::MountVolumeRequest_Param& param(const MountVolumeRequest* msg);
};

const ::grpc_cli::MountVolumeRequest_Param&
MountVolumeRequest::_Internal::param(const MountVolumeRequest* msg) {
  return *msg->param_;
}
MountVolumeRequest::MountVolumeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.MountVolumeRequest)
}
MountVolumeRequest::MountVolumeRequest(const MountVolumeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::MountVolumeRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.MountVolumeRequest)
}

void MountVolumeRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

MountVolumeRequest::~MountVolumeRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.MountVolumeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MountVolumeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void MountVolumeRequest::ArenaDtor(void* object) {
  MountVolumeRequest* _this = reinterpret_cast< MountVolumeRequest* >(object);
  (void)_this;
}
void MountVolumeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MountVolumeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MountVolumeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.MountVolumeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MountVolumeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.MountVolumeRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.MountVolumeRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.MountVolumeRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.MountVolumeRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MountVolumeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.MountVolumeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.MountVolumeRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.MountVolumeRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.MountVolumeRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.MountVolumeRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.MountVolumeRequest)
  return target;
}

size_t MountVolumeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.MountVolumeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.MountVolumeRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MountVolumeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.MountVolumeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MountVolumeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MountVolumeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.MountVolumeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.MountVolumeRequest)
    MergeFrom(*source);
  }
}

void MountVolumeRequest::MergeFrom(const MountVolumeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.MountVolumeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::MountVolumeRequest_Param::MergeFrom(from._internal_param());
  }
}

void MountVolumeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.MountVolumeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MountVolumeRequest::CopyFrom(const MountVolumeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.MountVolumeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MountVolumeRequest::IsInitialized() const {
  return true;
}

void MountVolumeRequest::InternalSwap(MountVolumeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MountVolumeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MountVolumeResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const MountVolumeResponse_Result* msg);
};

const ::grpc_cli::Status&
MountVolumeResponse_Result::_Internal::status(const MountVolumeResponse_Result* msg) {
  return *msg->status_;
}
MountVolumeResponse_Result::MountVolumeResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.MountVolumeResponse.Result)
}
MountVolumeResponse_Result::MountVolumeResponse_Result(const MountVolumeResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.MountVolumeResponse.Result)
}

void MountVolumeResponse_Result::SharedCtor() {
status_ = nullptr;
}

MountVolumeResponse_Result::~MountVolumeResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.MountVolumeResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MountVolumeResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void MountVolumeResponse_Result::ArenaDtor(void* object) {
  MountVolumeResponse_Result* _this = reinterpret_cast< MountVolumeResponse_Result* >(object);
  (void)_this;
}
void MountVolumeResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MountVolumeResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MountVolumeResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.MountVolumeResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MountVolumeResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MountVolumeResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.MountVolumeResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.MountVolumeResponse.Result)
  return target;
}

size_t MountVolumeResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.MountVolumeResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MountVolumeResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.MountVolumeResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const MountVolumeResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MountVolumeResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.MountVolumeResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.MountVolumeResponse.Result)
    MergeFrom(*source);
  }
}

void MountVolumeResponse_Result::MergeFrom(const MountVolumeResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.MountVolumeResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void MountVolumeResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.MountVolumeResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MountVolumeResponse_Result::CopyFrom(const MountVolumeResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.MountVolumeResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MountVolumeResponse_Result::IsInitialized() const {
  return true;
}

void MountVolumeResponse_Result::InternalSwap(MountVolumeResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MountVolumeResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MountVolumeResponse::_Internal {
 public:
  static const ::grpc_cli::MountVolumeResponse_Result& result(const MountVolumeResponse* msg);
  static const ::grpc_cli::PosInfo& info(const MountVolumeResponse* msg);
};

const ::grpc_cli::MountVolumeResponse_Result&
MountVolumeResponse::_Internal::result(const MountVolumeResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
MountVolumeResponse::_Internal::info(const MountVolumeResponse* msg) {
  return *msg->info_;
}
MountVolumeResponse::MountVolumeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.MountVolumeResponse)
}
MountVolumeResponse::MountVolumeResponse(const MountVolumeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::MountVolumeResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.MountVolumeResponse)
}

void MountVolumeResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

MountVolumeResponse::~MountVolumeResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.MountVolumeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MountVolumeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void MountVolumeResponse::ArenaDtor(void* object) {
  MountVolumeResponse* _this = reinterpret_cast< MountVolumeResponse* >(object);
  (void)_this;
}
void MountVolumeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MountVolumeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MountVolumeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.MountVolumeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MountVolumeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.MountVolumeResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.MountVolumeResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.MountVolumeResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MountVolumeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.MountVolumeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.MountVolumeResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.MountVolumeResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.MountVolumeResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.MountVolumeResponse)
  return target;
}

size_t MountVolumeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.MountVolumeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.MountVolumeResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MountVolumeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.MountVolumeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MountVolumeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MountVolumeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.MountVolumeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.MountVolumeResponse)
    MergeFrom(*source);
  }
}

void MountVolumeResponse::MergeFrom(const MountVolumeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.MountVolumeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::MountVolumeResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void MountVolumeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.MountVolumeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MountVolumeResponse::CopyFrom(const MountVolumeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.MountVolumeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MountVolumeResponse::IsInitialized() const {
  return true;
}

void MountVolumeResponse::InternalSwap(MountVolumeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MountVolumeResponse, info_)
      + sizeof(MountVolumeResponse::info_)
      - PROTOBUF_FIELD_OFFSET(MountVolumeResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MountVolumeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetVolumePropertyRequest_Param::_Internal {
 public:
};

SetVolumePropertyRequest_Param::SetVolumePropertyRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SetVolumePropertyRequest.Param)
}
SetVolumePropertyRequest_Param::SetVolumePropertyRequest_Param(const SetVolumePropertyRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  array_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_array().empty()) {
    array_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_array(), 
      GetArena());
  }
  newvolumename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_newvolumename().empty()) {
    newvolumename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_newvolumename(), 
      GetArena());
  }
  ::memcpy(&size_, &from.size_,
    static_cast<size_t>(reinterpret_cast<char*>(&isprimaryvol_) -
    reinterpret_cast<char*>(&size_)) + sizeof(isprimaryvol_));
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SetVolumePropertyRequest.Param)
}

void SetVolumePropertyRequest_Param::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
array_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
newvolumename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&size_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&isprimaryvol_) -
    reinterpret_cast<char*>(&size_)) + sizeof(isprimaryvol_));
}

SetVolumePropertyRequest_Param::~SetVolumePropertyRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.SetVolumePropertyRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetVolumePropertyRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  array_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  newvolumename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SetVolumePropertyRequest_Param::ArenaDtor(void* object) {
  SetVolumePropertyRequest_Param* _this = reinterpret_cast< SetVolumePropertyRequest_Param* >(object);
  (void)_this;
}
void SetVolumePropertyRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetVolumePropertyRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetVolumePropertyRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SetVolumePropertyRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  array_.ClearToEmpty();
  newvolumename_.ClearToEmpty();
  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isprimaryvol_) -
      reinterpret_cast<char*>(&size_)) + sizeof(isprimaryvol_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetVolumePropertyRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetVolumePropertyRequest.Param.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string array = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_array();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetVolumePropertyRequest.Param.array"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string newVolumeName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_newvolumename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetVolumePropertyRequest.Param.newVolumeName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 size = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 maxiops = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          maxiops_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 maxbw = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          maxbw_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool updateprimaryvol = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          updateprimaryvol_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool isprimaryvol = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          isprimaryvol_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetVolumePropertyRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SetVolumePropertyRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetVolumePropertyRequest.Param.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string array = 2;
  if (this->array().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_array().data(), static_cast<int>(this->_internal_array().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetVolumePropertyRequest.Param.array");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_array(), target);
  }

  // string newVolumeName = 3;
  if (this->newvolumename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_newvolumename().data(), static_cast<int>(this->_internal_newvolumename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetVolumePropertyRequest.Param.newVolumeName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_newvolumename(), target);
  }

  // uint64 size = 4;
  if (this->size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_size(), target);
  }

  // uint64 maxiops = 5;
  if (this->maxiops() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_maxiops(), target);
  }

  // uint64 maxbw = 6;
  if (this->maxbw() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(6, this->_internal_maxbw(), target);
  }

  // bool updateprimaryvol = 7;
  if (this->updateprimaryvol() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_updateprimaryvol(), target);
  }

  // bool isprimaryvol = 8;
  if (this->isprimaryvol() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->_internal_isprimaryvol(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SetVolumePropertyRequest.Param)
  return target;
}

size_t SetVolumePropertyRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SetVolumePropertyRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string array = 2;
  if (this->array().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_array());
  }

  // string newVolumeName = 3;
  if (this->newvolumename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_newvolumename());
  }

  // uint64 size = 4;
  if (this->size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_size());
  }

  // uint64 maxiops = 5;
  if (this->maxiops() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_maxiops());
  }

  // uint64 maxbw = 6;
  if (this->maxbw() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_maxbw());
  }

  // bool updateprimaryvol = 7;
  if (this->updateprimaryvol() != 0) {
    total_size += 1 + 1;
  }

  // bool isprimaryvol = 8;
  if (this->isprimaryvol() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetVolumePropertyRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SetVolumePropertyRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const SetVolumePropertyRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetVolumePropertyRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SetVolumePropertyRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SetVolumePropertyRequest.Param)
    MergeFrom(*source);
  }
}

void SetVolumePropertyRequest_Param::MergeFrom(const SetVolumePropertyRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SetVolumePropertyRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.array().size() > 0) {
    _internal_set_array(from._internal_array());
  }
  if (from.newvolumename().size() > 0) {
    _internal_set_newvolumename(from._internal_newvolumename());
  }
  if (from.size() != 0) {
    _internal_set_size(from._internal_size());
  }
  if (from.maxiops() != 0) {
    _internal_set_maxiops(from._internal_maxiops());
  }
  if (from.maxbw() != 0) {
    _internal_set_maxbw(from._internal_maxbw());
  }
  if (from.updateprimaryvol() != 0) {
    _internal_set_updateprimaryvol(from._internal_updateprimaryvol());
  }
  if (from.isprimaryvol() != 0) {
    _internal_set_isprimaryvol(from._internal_isprimaryvol());
  }
}

void SetVolumePropertyRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SetVolumePropertyRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetVolumePropertyRequest_Param::CopyFrom(const SetVolumePropertyRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SetVolumePropertyRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetVolumePropertyRequest_Param::IsInitialized() const {
  return true;
}

void SetVolumePropertyRequest_Param::InternalSwap(SetVolumePropertyRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  array_.Swap(&other->array_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  newvolumename_.Swap(&other->newvolumename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetVolumePropertyRequest_Param, isprimaryvol_)
      + sizeof(SetVolumePropertyRequest_Param::isprimaryvol_)
      - PROTOBUF_FIELD_OFFSET(SetVolumePropertyRequest_Param, size_)>(
          reinterpret_cast<char*>(&size_),
          reinterpret_cast<char*>(&other->size_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetVolumePropertyRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetVolumePropertyRequest::_Internal {
 public:
  static const ::grpc_cli::SetVolumePropertyRequest_Param& param(const SetVolumePropertyRequest* msg);
};

const ::grpc_cli::SetVolumePropertyRequest_Param&
SetVolumePropertyRequest::_Internal::param(const SetVolumePropertyRequest* msg) {
  return *msg->param_;
}
SetVolumePropertyRequest::SetVolumePropertyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SetVolumePropertyRequest)
}
SetVolumePropertyRequest::SetVolumePropertyRequest(const SetVolumePropertyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::SetVolumePropertyRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SetVolumePropertyRequest)
}

void SetVolumePropertyRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

SetVolumePropertyRequest::~SetVolumePropertyRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.SetVolumePropertyRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetVolumePropertyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void SetVolumePropertyRequest::ArenaDtor(void* object) {
  SetVolumePropertyRequest* _this = reinterpret_cast< SetVolumePropertyRequest* >(object);
  (void)_this;
}
void SetVolumePropertyRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetVolumePropertyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetVolumePropertyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SetVolumePropertyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetVolumePropertyRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetVolumePropertyRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetVolumePropertyRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetVolumePropertyRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.SetVolumePropertyRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetVolumePropertyRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SetVolumePropertyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetVolumePropertyRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetVolumePropertyRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetVolumePropertyRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.SetVolumePropertyRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SetVolumePropertyRequest)
  return target;
}

size_t SetVolumePropertyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SetVolumePropertyRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.SetVolumePropertyRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetVolumePropertyRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SetVolumePropertyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetVolumePropertyRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetVolumePropertyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SetVolumePropertyRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SetVolumePropertyRequest)
    MergeFrom(*source);
  }
}

void SetVolumePropertyRequest::MergeFrom(const SetVolumePropertyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SetVolumePropertyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::SetVolumePropertyRequest_Param::MergeFrom(from._internal_param());
  }
}

void SetVolumePropertyRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SetVolumePropertyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetVolumePropertyRequest::CopyFrom(const SetVolumePropertyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SetVolumePropertyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetVolumePropertyRequest::IsInitialized() const {
  return true;
}

void SetVolumePropertyRequest::InternalSwap(SetVolumePropertyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetVolumePropertyRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetVolumePropertyResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const SetVolumePropertyResponse_Result* msg);
};

const ::grpc_cli::Status&
SetVolumePropertyResponse_Result::_Internal::status(const SetVolumePropertyResponse_Result* msg) {
  return *msg->status_;
}
SetVolumePropertyResponse_Result::SetVolumePropertyResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SetVolumePropertyResponse.Result)
}
SetVolumePropertyResponse_Result::SetVolumePropertyResponse_Result(const SetVolumePropertyResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SetVolumePropertyResponse.Result)
}

void SetVolumePropertyResponse_Result::SharedCtor() {
status_ = nullptr;
}

SetVolumePropertyResponse_Result::~SetVolumePropertyResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.SetVolumePropertyResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetVolumePropertyResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void SetVolumePropertyResponse_Result::ArenaDtor(void* object) {
  SetVolumePropertyResponse_Result* _this = reinterpret_cast< SetVolumePropertyResponse_Result* >(object);
  (void)_this;
}
void SetVolumePropertyResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetVolumePropertyResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetVolumePropertyResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SetVolumePropertyResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetVolumePropertyResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetVolumePropertyResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SetVolumePropertyResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SetVolumePropertyResponse.Result)
  return target;
}

size_t SetVolumePropertyResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SetVolumePropertyResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetVolumePropertyResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SetVolumePropertyResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const SetVolumePropertyResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetVolumePropertyResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SetVolumePropertyResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SetVolumePropertyResponse.Result)
    MergeFrom(*source);
  }
}

void SetVolumePropertyResponse_Result::MergeFrom(const SetVolumePropertyResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SetVolumePropertyResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void SetVolumePropertyResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SetVolumePropertyResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetVolumePropertyResponse_Result::CopyFrom(const SetVolumePropertyResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SetVolumePropertyResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetVolumePropertyResponse_Result::IsInitialized() const {
  return true;
}

void SetVolumePropertyResponse_Result::InternalSwap(SetVolumePropertyResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetVolumePropertyResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetVolumePropertyResponse::_Internal {
 public:
  static const ::grpc_cli::SetVolumePropertyResponse_Result& result(const SetVolumePropertyResponse* msg);
  static const ::grpc_cli::PosInfo& info(const SetVolumePropertyResponse* msg);
};

const ::grpc_cli::SetVolumePropertyResponse_Result&
SetVolumePropertyResponse::_Internal::result(const SetVolumePropertyResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
SetVolumePropertyResponse::_Internal::info(const SetVolumePropertyResponse* msg) {
  return *msg->info_;
}
SetVolumePropertyResponse::SetVolumePropertyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SetVolumePropertyResponse)
}
SetVolumePropertyResponse::SetVolumePropertyResponse(const SetVolumePropertyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::SetVolumePropertyResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SetVolumePropertyResponse)
}

void SetVolumePropertyResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

SetVolumePropertyResponse::~SetVolumePropertyResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.SetVolumePropertyResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetVolumePropertyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void SetVolumePropertyResponse::ArenaDtor(void* object) {
  SetVolumePropertyResponse* _this = reinterpret_cast< SetVolumePropertyResponse* >(object);
  (void)_this;
}
void SetVolumePropertyResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetVolumePropertyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetVolumePropertyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SetVolumePropertyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetVolumePropertyResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetVolumePropertyResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetVolumePropertyResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.SetVolumePropertyResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetVolumePropertyResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SetVolumePropertyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetVolumePropertyResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetVolumePropertyResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.SetVolumePropertyResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SetVolumePropertyResponse)
  return target;
}

size_t SetVolumePropertyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SetVolumePropertyResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.SetVolumePropertyResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetVolumePropertyResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SetVolumePropertyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetVolumePropertyResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetVolumePropertyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SetVolumePropertyResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SetVolumePropertyResponse)
    MergeFrom(*source);
  }
}

void SetVolumePropertyResponse::MergeFrom(const SetVolumePropertyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SetVolumePropertyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::SetVolumePropertyResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void SetVolumePropertyResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SetVolumePropertyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetVolumePropertyResponse::CopyFrom(const SetVolumePropertyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SetVolumePropertyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetVolumePropertyResponse::IsInitialized() const {
  return true;
}

void SetVolumePropertyResponse::InternalSwap(SetVolumePropertyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetVolumePropertyResponse, info_)
      + sizeof(SetVolumePropertyResponse::info_)
      - PROTOBUF_FIELD_OFFSET(SetVolumePropertyResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetVolumePropertyResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Volume::_Internal {
 public:
};

Volume::Volume(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.Volume)
}
Volume::Volume(const Volume& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArena());
  }
  subnqn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subnqn().empty()) {
    subnqn_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_subnqn(), 
      GetArena());
  }
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uuid().empty()) {
    uuid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uuid(), 
      GetArena());
  }
  arrayname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_arrayname().empty()) {
    arrayname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_arrayname(), 
      GetArena());
  }
  ::memcpy(&total_, &from.total_,
    static_cast<size_t>(reinterpret_cast<char*>(&index_) -
    reinterpret_cast<char*>(&total_)) + sizeof(index_));
  // @@protoc_insertion_point(copy_constructor:grpc_cli.Volume)
}

void Volume::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
subnqn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
arrayname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&total_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&index_) -
    reinterpret_cast<char*>(&total_)) + sizeof(index_));
}

Volume::~Volume() {
  // @@protoc_insertion_point(destructor:grpc_cli.Volume)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Volume::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subnqn_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  arrayname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Volume::ArenaDtor(void* object) {
  Volume* _this = reinterpret_cast< Volume* >(object);
  (void)_this;
}
void Volume::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Volume::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Volume::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.Volume)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  status_.ClearToEmpty();
  subnqn_.ClearToEmpty();
  uuid_.ClearToEmpty();
  arrayname_.ClearToEmpty();
  ::memset(&total_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&total_)) + sizeof(index_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Volume::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Volume.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 total = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          total_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 remain = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          remain_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Volume.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 maxiops = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          maxiops_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 maxbw = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          maxbw_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 miniops = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          miniops_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 minbw = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          minbw_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subnqn = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_subnqn();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Volume.subnqn"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string uuid = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Volume.uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string arrayname = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_arrayname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Volume.arrayname"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Volume::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.Volume)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Volume.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // int32 index = 2;
  if (this->index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_index(), target);
  }

  // uint64 total = 3;
  if (this->total() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_total(), target);
  }

  // uint64 remain = 4;
  if (this->remain() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_remain(), target);
  }

  // string status = 5;
  if (this->status().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Volume.status");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_status(), target);
  }

  // uint64 maxiops = 6;
  if (this->maxiops() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(6, this->_internal_maxiops(), target);
  }

  // uint64 maxbw = 7;
  if (this->maxbw() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(7, this->_internal_maxbw(), target);
  }

  // uint64 miniops = 8;
  if (this->miniops() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(8, this->_internal_miniops(), target);
  }

  // uint64 minbw = 9;
  if (this->minbw() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(9, this->_internal_minbw(), target);
  }

  // string subnqn = 10;
  if (this->subnqn().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subnqn().data(), static_cast<int>(this->_internal_subnqn().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Volume.subnqn");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_subnqn(), target);
  }

  // string uuid = 11;
  if (this->uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Volume.uuid");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_uuid(), target);
  }

  // string arrayname = 12;
  if (this->arrayname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_arrayname().data(), static_cast<int>(this->_internal_arrayname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Volume.arrayname");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_arrayname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.Volume)
  return target;
}

size_t Volume::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.Volume)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string status = 5;
  if (this->status().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // string subnqn = 10;
  if (this->subnqn().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subnqn());
  }

  // string uuid = 11;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  // string arrayname = 12;
  if (this->arrayname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_arrayname());
  }

  // uint64 total = 3;
  if (this->total() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_total());
  }

  // uint64 remain = 4;
  if (this->remain() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_remain());
  }

  // uint64 maxiops = 6;
  if (this->maxiops() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_maxiops());
  }

  // uint64 maxbw = 7;
  if (this->maxbw() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_maxbw());
  }

  // uint64 miniops = 8;
  if (this->miniops() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_miniops());
  }

  // uint64 minbw = 9;
  if (this->minbw() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_minbw());
  }

  // int32 index = 2;
  if (this->index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_index());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Volume::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.Volume)
  GOOGLE_DCHECK_NE(&from, this);
  const Volume* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Volume>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.Volume)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.Volume)
    MergeFrom(*source);
  }
}

void Volume::MergeFrom(const Volume& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.Volume)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.status().size() > 0) {
    _internal_set_status(from._internal_status());
  }
  if (from.subnqn().size() > 0) {
    _internal_set_subnqn(from._internal_subnqn());
  }
  if (from.uuid().size() > 0) {
    _internal_set_uuid(from._internal_uuid());
  }
  if (from.arrayname().size() > 0) {
    _internal_set_arrayname(from._internal_arrayname());
  }
  if (from.total() != 0) {
    _internal_set_total(from._internal_total());
  }
  if (from.remain() != 0) {
    _internal_set_remain(from._internal_remain());
  }
  if (from.maxiops() != 0) {
    _internal_set_maxiops(from._internal_maxiops());
  }
  if (from.maxbw() != 0) {
    _internal_set_maxbw(from._internal_maxbw());
  }
  if (from.miniops() != 0) {
    _internal_set_miniops(from._internal_miniops());
  }
  if (from.minbw() != 0) {
    _internal_set_minbw(from._internal_minbw());
  }
  if (from.index() != 0) {
    _internal_set_index(from._internal_index());
  }
}

void Volume::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.Volume)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Volume::CopyFrom(const Volume& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.Volume)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Volume::IsInitialized() const {
  return true;
}

void Volume::InternalSwap(Volume* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  status_.Swap(&other->status_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subnqn_.Swap(&other->subnqn_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  uuid_.Swap(&other->uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  arrayname_.Swap(&other->arrayname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Volume, index_)
      + sizeof(Volume::index_)
      - PROTOBUF_FIELD_OFFSET(Volume, total_)>(
          reinterpret_cast<char*>(&total_),
          reinterpret_cast<char*>(&other->total_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Volume::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListVolumeRequest_Param::_Internal {
 public:
};

ListVolumeRequest_Param::ListVolumeRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListVolumeRequest.Param)
}
ListVolumeRequest_Param::ListVolumeRequest_Param(const ListVolumeRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  array_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_array().empty()) {
    array_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_array(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListVolumeRequest.Param)
}

void ListVolumeRequest_Param::SharedCtor() {
array_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListVolumeRequest_Param::~ListVolumeRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListVolumeRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListVolumeRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  array_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListVolumeRequest_Param::ArenaDtor(void* object) {
  ListVolumeRequest_Param* _this = reinterpret_cast< ListVolumeRequest_Param* >(object);
  (void)_this;
}
void ListVolumeRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListVolumeRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListVolumeRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListVolumeRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  array_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListVolumeRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string array = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_array();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListVolumeRequest.Param.array"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListVolumeRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListVolumeRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string array = 1;
  if (this->array().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_array().data(), static_cast<int>(this->_internal_array().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListVolumeRequest.Param.array");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_array(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListVolumeRequest.Param)
  return target;
}

size_t ListVolumeRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListVolumeRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string array = 1;
  if (this->array().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_array());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListVolumeRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListVolumeRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const ListVolumeRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListVolumeRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListVolumeRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListVolumeRequest.Param)
    MergeFrom(*source);
  }
}

void ListVolumeRequest_Param::MergeFrom(const ListVolumeRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListVolumeRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.array().size() > 0) {
    _internal_set_array(from._internal_array());
  }
}

void ListVolumeRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListVolumeRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListVolumeRequest_Param::CopyFrom(const ListVolumeRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListVolumeRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListVolumeRequest_Param::IsInitialized() const {
  return true;
}

void ListVolumeRequest_Param::InternalSwap(ListVolumeRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  array_.Swap(&other->array_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ListVolumeRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListVolumeRequest::_Internal {
 public:
  static const ::grpc_cli::ListVolumeRequest_Param& param(const ListVolumeRequest* msg);
};

const ::grpc_cli::ListVolumeRequest_Param&
ListVolumeRequest::_Internal::param(const ListVolumeRequest* msg) {
  return *msg->param_;
}
ListVolumeRequest::ListVolumeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListVolumeRequest)
}
ListVolumeRequest::ListVolumeRequest(const ListVolumeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::ListVolumeRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListVolumeRequest)
}

void ListVolumeRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

ListVolumeRequest::~ListVolumeRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListVolumeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListVolumeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void ListVolumeRequest::ArenaDtor(void* object) {
  ListVolumeRequest* _this = reinterpret_cast< ListVolumeRequest* >(object);
  (void)_this;
}
void ListVolumeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListVolumeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListVolumeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListVolumeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListVolumeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListVolumeRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListVolumeRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListVolumeRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ListVolumeRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListVolumeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListVolumeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListVolumeRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListVolumeRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListVolumeRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.ListVolumeRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListVolumeRequest)
  return target;
}

size_t ListVolumeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListVolumeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.ListVolumeRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListVolumeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListVolumeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListVolumeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListVolumeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListVolumeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListVolumeRequest)
    MergeFrom(*source);
  }
}

void ListVolumeRequest::MergeFrom(const ListVolumeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListVolumeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::ListVolumeRequest_Param::MergeFrom(from._internal_param());
  }
}

void ListVolumeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListVolumeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListVolumeRequest::CopyFrom(const ListVolumeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListVolumeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListVolumeRequest::IsInitialized() const {
  return true;
}

void ListVolumeRequest::InternalSwap(ListVolumeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListVolumeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListVolumeResponse_Result_VolumeList::_Internal {
 public:
};

ListVolumeResponse_Result_VolumeList::ListVolumeResponse_Result_VolumeList(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  volumes_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListVolumeResponse.Result.VolumeList)
}
ListVolumeResponse_Result_VolumeList::ListVolumeResponse_Result_VolumeList(const ListVolumeResponse_Result_VolumeList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      volumes_(from.volumes_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListVolumeResponse.Result.VolumeList)
}

void ListVolumeResponse_Result_VolumeList::SharedCtor() {
}

ListVolumeResponse_Result_VolumeList::~ListVolumeResponse_Result_VolumeList() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListVolumeResponse.Result.VolumeList)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListVolumeResponse_Result_VolumeList::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ListVolumeResponse_Result_VolumeList::ArenaDtor(void* object) {
  ListVolumeResponse_Result_VolumeList* _this = reinterpret_cast< ListVolumeResponse_Result_VolumeList* >(object);
  (void)_this;
}
void ListVolumeResponse_Result_VolumeList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListVolumeResponse_Result_VolumeList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListVolumeResponse_Result_VolumeList::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListVolumeResponse.Result.VolumeList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  volumes_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListVolumeResponse_Result_VolumeList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .grpc_cli.Volume volumes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_volumes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListVolumeResponse_Result_VolumeList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListVolumeResponse.Result.VolumeList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grpc_cli.Volume volumes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_volumes_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_volumes(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListVolumeResponse.Result.VolumeList)
  return target;
}

size_t ListVolumeResponse_Result_VolumeList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListVolumeResponse.Result.VolumeList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_cli.Volume volumes = 1;
  total_size += 1UL * this->_internal_volumes_size();
  for (const auto& msg : this->volumes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListVolumeResponse_Result_VolumeList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListVolumeResponse.Result.VolumeList)
  GOOGLE_DCHECK_NE(&from, this);
  const ListVolumeResponse_Result_VolumeList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListVolumeResponse_Result_VolumeList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListVolumeResponse.Result.VolumeList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListVolumeResponse.Result.VolumeList)
    MergeFrom(*source);
  }
}

void ListVolumeResponse_Result_VolumeList::MergeFrom(const ListVolumeResponse_Result_VolumeList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListVolumeResponse.Result.VolumeList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  volumes_.MergeFrom(from.volumes_);
}

void ListVolumeResponse_Result_VolumeList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListVolumeResponse.Result.VolumeList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListVolumeResponse_Result_VolumeList::CopyFrom(const ListVolumeResponse_Result_VolumeList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListVolumeResponse.Result.VolumeList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListVolumeResponse_Result_VolumeList::IsInitialized() const {
  return true;
}

void ListVolumeResponse_Result_VolumeList::InternalSwap(ListVolumeResponse_Result_VolumeList* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  volumes_.InternalSwap(&other->volumes_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListVolumeResponse_Result_VolumeList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListVolumeResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const ListVolumeResponse_Result* msg);
  static const ::grpc_cli::ListVolumeResponse_Result_VolumeList& data(const ListVolumeResponse_Result* msg);
};

const ::grpc_cli::Status&
ListVolumeResponse_Result::_Internal::status(const ListVolumeResponse_Result* msg) {
  return *msg->status_;
}
const ::grpc_cli::ListVolumeResponse_Result_VolumeList&
ListVolumeResponse_Result::_Internal::data(const ListVolumeResponse_Result* msg) {
  return *msg->data_;
}
ListVolumeResponse_Result::ListVolumeResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListVolumeResponse.Result)
}
ListVolumeResponse_Result::ListVolumeResponse_Result(const ListVolumeResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_data()) {
    data_ = new ::grpc_cli::ListVolumeResponse_Result_VolumeList(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListVolumeResponse.Result)
}

void ListVolumeResponse_Result::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&data_) -
    reinterpret_cast<char*>(&status_)) + sizeof(data_));
}

ListVolumeResponse_Result::~ListVolumeResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListVolumeResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListVolumeResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete data_;
}

void ListVolumeResponse_Result::ArenaDtor(void* object) {
  ListVolumeResponse_Result* _this = reinterpret_cast< ListVolumeResponse_Result* >(object);
  (void)_this;
}
void ListVolumeResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListVolumeResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListVolumeResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListVolumeResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListVolumeResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ListVolumeResponse.Result.VolumeList data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListVolumeResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListVolumeResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .grpc_cli.ListVolumeResponse.Result.VolumeList data = 2;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListVolumeResponse.Result)
  return target;
}

size_t ListVolumeResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListVolumeResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .grpc_cli.ListVolumeResponse.Result.VolumeList data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListVolumeResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListVolumeResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const ListVolumeResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListVolumeResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListVolumeResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListVolumeResponse.Result)
    MergeFrom(*source);
  }
}

void ListVolumeResponse_Result::MergeFrom(const ListVolumeResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListVolumeResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
  if (from.has_data()) {
    _internal_mutable_data()->::grpc_cli::ListVolumeResponse_Result_VolumeList::MergeFrom(from._internal_data());
  }
}

void ListVolumeResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListVolumeResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListVolumeResponse_Result::CopyFrom(const ListVolumeResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListVolumeResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListVolumeResponse_Result::IsInitialized() const {
  return true;
}

void ListVolumeResponse_Result::InternalSwap(ListVolumeResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListVolumeResponse_Result, data_)
      + sizeof(ListVolumeResponse_Result::data_)
      - PROTOBUF_FIELD_OFFSET(ListVolumeResponse_Result, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListVolumeResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListVolumeResponse::_Internal {
 public:
  static const ::grpc_cli::ListVolumeResponse_Result& result(const ListVolumeResponse* msg);
  static const ::grpc_cli::PosInfo& info(const ListVolumeResponse* msg);
};

const ::grpc_cli::ListVolumeResponse_Result&
ListVolumeResponse::_Internal::result(const ListVolumeResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
ListVolumeResponse::_Internal::info(const ListVolumeResponse* msg) {
  return *msg->info_;
}
ListVolumeResponse::ListVolumeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListVolumeResponse)
}
ListVolumeResponse::ListVolumeResponse(const ListVolumeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::ListVolumeResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListVolumeResponse)
}

void ListVolumeResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

ListVolumeResponse::~ListVolumeResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListVolumeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListVolumeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void ListVolumeResponse::ArenaDtor(void* object) {
  ListVolumeResponse* _this = reinterpret_cast< ListVolumeResponse* >(object);
  (void)_this;
}
void ListVolumeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListVolumeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListVolumeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListVolumeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListVolumeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListVolumeResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListVolumeResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ListVolumeResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListVolumeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListVolumeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListVolumeResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListVolumeResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.ListVolumeResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListVolumeResponse)
  return target;
}

size_t ListVolumeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListVolumeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.ListVolumeResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListVolumeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListVolumeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListVolumeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListVolumeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListVolumeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListVolumeResponse)
    MergeFrom(*source);
  }
}

void ListVolumeResponse::MergeFrom(const ListVolumeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListVolumeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::ListVolumeResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void ListVolumeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListVolumeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListVolumeResponse::CopyFrom(const ListVolumeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListVolumeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListVolumeResponse::IsInitialized() const {
  return true;
}

void ListVolumeResponse::InternalSwap(ListVolumeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListVolumeResponse, info_)
      + sizeof(ListVolumeResponse::info_)
      - PROTOBUF_FIELD_OFFSET(ListVolumeResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListVolumeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class QosVolumeNameParam::_Internal {
 public:
};

QosVolumeNameParam::QosVolumeNameParam(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.QosVolumeNameParam)
}
QosVolumeNameParam::QosVolumeNameParam(const QosVolumeNameParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  volumename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_volumename().empty()) {
    volumename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_volumename(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.QosVolumeNameParam)
}

void QosVolumeNameParam::SharedCtor() {
volumename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

QosVolumeNameParam::~QosVolumeNameParam() {
  // @@protoc_insertion_point(destructor:grpc_cli.QosVolumeNameParam)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void QosVolumeNameParam::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  volumename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void QosVolumeNameParam::ArenaDtor(void* object) {
  QosVolumeNameParam* _this = reinterpret_cast< QosVolumeNameParam* >(object);
  (void)_this;
}
void QosVolumeNameParam::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void QosVolumeNameParam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void QosVolumeNameParam::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.QosVolumeNameParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  volumename_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QosVolumeNameParam::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string volumeName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_volumename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.QosVolumeNameParam.volumeName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* QosVolumeNameParam::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.QosVolumeNameParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string volumeName = 1;
  if (this->volumename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_volumename().data(), static_cast<int>(this->_internal_volumename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.QosVolumeNameParam.volumeName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_volumename(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.QosVolumeNameParam)
  return target;
}

size_t QosVolumeNameParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.QosVolumeNameParam)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string volumeName = 1;
  if (this->volumename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_volumename());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QosVolumeNameParam::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.QosVolumeNameParam)
  GOOGLE_DCHECK_NE(&from, this);
  const QosVolumeNameParam* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<QosVolumeNameParam>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.QosVolumeNameParam)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.QosVolumeNameParam)
    MergeFrom(*source);
  }
}

void QosVolumeNameParam::MergeFrom(const QosVolumeNameParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.QosVolumeNameParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.volumename().size() > 0) {
    _internal_set_volumename(from._internal_volumename());
  }
}

void QosVolumeNameParam::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.QosVolumeNameParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QosVolumeNameParam::CopyFrom(const QosVolumeNameParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.QosVolumeNameParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QosVolumeNameParam::IsInitialized() const {
  return true;
}

void QosVolumeNameParam::InternalSwap(QosVolumeNameParam* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  volumename_.Swap(&other->volumename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata QosVolumeNameParam::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class QosCreateVolumePolicyRequest_Param::_Internal {
 public:
};

QosCreateVolumePolicyRequest_Param::QosCreateVolumePolicyRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  vol_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.QosCreateVolumePolicyRequest.Param)
}
QosCreateVolumePolicyRequest_Param::QosCreateVolumePolicyRequest_Param(const QosCreateVolumePolicyRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      vol_(from.vol_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  array_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_array().empty()) {
    array_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_array(), 
      GetArena());
  }
  ::memcpy(&minbw_, &from.minbw_,
    static_cast<size_t>(reinterpret_cast<char*>(&maxiops_) -
    reinterpret_cast<char*>(&minbw_)) + sizeof(maxiops_));
  // @@protoc_insertion_point(copy_constructor:grpc_cli.QosCreateVolumePolicyRequest.Param)
}

void QosCreateVolumePolicyRequest_Param::SharedCtor() {
array_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&minbw_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&maxiops_) -
    reinterpret_cast<char*>(&minbw_)) + sizeof(maxiops_));
}

QosCreateVolumePolicyRequest_Param::~QosCreateVolumePolicyRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.QosCreateVolumePolicyRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void QosCreateVolumePolicyRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  array_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void QosCreateVolumePolicyRequest_Param::ArenaDtor(void* object) {
  QosCreateVolumePolicyRequest_Param* _this = reinterpret_cast< QosCreateVolumePolicyRequest_Param* >(object);
  (void)_this;
}
void QosCreateVolumePolicyRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void QosCreateVolumePolicyRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void QosCreateVolumePolicyRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.QosCreateVolumePolicyRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vol_.Clear();
  array_.ClearToEmpty();
  ::memset(&minbw_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxiops_) -
      reinterpret_cast<char*>(&minbw_)) + sizeof(maxiops_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QosCreateVolumePolicyRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string array = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_array();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.QosCreateVolumePolicyRequest.Param.array"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .grpc_cli.QosVolumeNameParam vol = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_vol(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // int64 minbw = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          minbw_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 miniops = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          miniops_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 maxbw = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          maxbw_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 maxiops = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          maxiops_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* QosCreateVolumePolicyRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.QosCreateVolumePolicyRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string array = 1;
  if (this->array().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_array().data(), static_cast<int>(this->_internal_array().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.QosCreateVolumePolicyRequest.Param.array");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_array(), target);
  }

  // repeated .grpc_cli.QosVolumeNameParam vol = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_vol_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_vol(i), target, stream);
  }

  // int64 minbw = 3;
  if (this->minbw() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_minbw(), target);
  }

  // int64 miniops = 4;
  if (this->miniops() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_miniops(), target);
  }

  // int64 maxbw = 5;
  if (this->maxbw() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_maxbw(), target);
  }

  // int64 maxiops = 6;
  if (this->maxiops() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_maxiops(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.QosCreateVolumePolicyRequest.Param)
  return target;
}

size_t QosCreateVolumePolicyRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.QosCreateVolumePolicyRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_cli.QosVolumeNameParam vol = 2;
  total_size += 1UL * this->_internal_vol_size();
  for (const auto& msg : this->vol_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string array = 1;
  if (this->array().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_array());
  }

  // int64 minbw = 3;
  if (this->minbw() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_minbw());
  }

  // int64 miniops = 4;
  if (this->miniops() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_miniops());
  }

  // int64 maxbw = 5;
  if (this->maxbw() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_maxbw());
  }

  // int64 maxiops = 6;
  if (this->maxiops() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_maxiops());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QosCreateVolumePolicyRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.QosCreateVolumePolicyRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const QosCreateVolumePolicyRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<QosCreateVolumePolicyRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.QosCreateVolumePolicyRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.QosCreateVolumePolicyRequest.Param)
    MergeFrom(*source);
  }
}

void QosCreateVolumePolicyRequest_Param::MergeFrom(const QosCreateVolumePolicyRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.QosCreateVolumePolicyRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vol_.MergeFrom(from.vol_);
  if (from.array().size() > 0) {
    _internal_set_array(from._internal_array());
  }
  if (from.minbw() != 0) {
    _internal_set_minbw(from._internal_minbw());
  }
  if (from.miniops() != 0) {
    _internal_set_miniops(from._internal_miniops());
  }
  if (from.maxbw() != 0) {
    _internal_set_maxbw(from._internal_maxbw());
  }
  if (from.maxiops() != 0) {
    _internal_set_maxiops(from._internal_maxiops());
  }
}

void QosCreateVolumePolicyRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.QosCreateVolumePolicyRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QosCreateVolumePolicyRequest_Param::CopyFrom(const QosCreateVolumePolicyRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.QosCreateVolumePolicyRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QosCreateVolumePolicyRequest_Param::IsInitialized() const {
  return true;
}

void QosCreateVolumePolicyRequest_Param::InternalSwap(QosCreateVolumePolicyRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  vol_.InternalSwap(&other->vol_);
  array_.Swap(&other->array_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QosCreateVolumePolicyRequest_Param, maxiops_)
      + sizeof(QosCreateVolumePolicyRequest_Param::maxiops_)
      - PROTOBUF_FIELD_OFFSET(QosCreateVolumePolicyRequest_Param, minbw_)>(
          reinterpret_cast<char*>(&minbw_),
          reinterpret_cast<char*>(&other->minbw_));
}

::PROTOBUF_NAMESPACE_ID::Metadata QosCreateVolumePolicyRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class QosCreateVolumePolicyRequest::_Internal {
 public:
  static const ::grpc_cli::QosCreateVolumePolicyRequest_Param& param(const QosCreateVolumePolicyRequest* msg);
};

const ::grpc_cli::QosCreateVolumePolicyRequest_Param&
QosCreateVolumePolicyRequest::_Internal::param(const QosCreateVolumePolicyRequest* msg) {
  return *msg->param_;
}
QosCreateVolumePolicyRequest::QosCreateVolumePolicyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.QosCreateVolumePolicyRequest)
}
QosCreateVolumePolicyRequest::QosCreateVolumePolicyRequest(const QosCreateVolumePolicyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::QosCreateVolumePolicyRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.QosCreateVolumePolicyRequest)
}

void QosCreateVolumePolicyRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

QosCreateVolumePolicyRequest::~QosCreateVolumePolicyRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.QosCreateVolumePolicyRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void QosCreateVolumePolicyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void QosCreateVolumePolicyRequest::ArenaDtor(void* object) {
  QosCreateVolumePolicyRequest* _this = reinterpret_cast< QosCreateVolumePolicyRequest* >(object);
  (void)_this;
}
void QosCreateVolumePolicyRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void QosCreateVolumePolicyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void QosCreateVolumePolicyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.QosCreateVolumePolicyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QosCreateVolumePolicyRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.QosCreateVolumePolicyRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.QosCreateVolumePolicyRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.QosCreateVolumePolicyRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.QosCreateVolumePolicyRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* QosCreateVolumePolicyRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.QosCreateVolumePolicyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.QosCreateVolumePolicyRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.QosCreateVolumePolicyRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.QosCreateVolumePolicyRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.QosCreateVolumePolicyRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.QosCreateVolumePolicyRequest)
  return target;
}

size_t QosCreateVolumePolicyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.QosCreateVolumePolicyRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.QosCreateVolumePolicyRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QosCreateVolumePolicyRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.QosCreateVolumePolicyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const QosCreateVolumePolicyRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<QosCreateVolumePolicyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.QosCreateVolumePolicyRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.QosCreateVolumePolicyRequest)
    MergeFrom(*source);
  }
}

void QosCreateVolumePolicyRequest::MergeFrom(const QosCreateVolumePolicyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.QosCreateVolumePolicyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::QosCreateVolumePolicyRequest_Param::MergeFrom(from._internal_param());
  }
}

void QosCreateVolumePolicyRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.QosCreateVolumePolicyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QosCreateVolumePolicyRequest::CopyFrom(const QosCreateVolumePolicyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.QosCreateVolumePolicyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QosCreateVolumePolicyRequest::IsInitialized() const {
  return true;
}

void QosCreateVolumePolicyRequest::InternalSwap(QosCreateVolumePolicyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QosCreateVolumePolicyRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class QosCreateVolumePolicyResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const QosCreateVolumePolicyResponse_Result* msg);
};

const ::grpc_cli::Status&
QosCreateVolumePolicyResponse_Result::_Internal::status(const QosCreateVolumePolicyResponse_Result* msg) {
  return *msg->status_;
}
QosCreateVolumePolicyResponse_Result::QosCreateVolumePolicyResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.QosCreateVolumePolicyResponse.Result)
}
QosCreateVolumePolicyResponse_Result::QosCreateVolumePolicyResponse_Result(const QosCreateVolumePolicyResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.QosCreateVolumePolicyResponse.Result)
}

void QosCreateVolumePolicyResponse_Result::SharedCtor() {
status_ = nullptr;
}

QosCreateVolumePolicyResponse_Result::~QosCreateVolumePolicyResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.QosCreateVolumePolicyResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void QosCreateVolumePolicyResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void QosCreateVolumePolicyResponse_Result::ArenaDtor(void* object) {
  QosCreateVolumePolicyResponse_Result* _this = reinterpret_cast< QosCreateVolumePolicyResponse_Result* >(object);
  (void)_this;
}
void QosCreateVolumePolicyResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void QosCreateVolumePolicyResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void QosCreateVolumePolicyResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.QosCreateVolumePolicyResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QosCreateVolumePolicyResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* QosCreateVolumePolicyResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.QosCreateVolumePolicyResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.QosCreateVolumePolicyResponse.Result)
  return target;
}

size_t QosCreateVolumePolicyResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.QosCreateVolumePolicyResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QosCreateVolumePolicyResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.QosCreateVolumePolicyResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const QosCreateVolumePolicyResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<QosCreateVolumePolicyResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.QosCreateVolumePolicyResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.QosCreateVolumePolicyResponse.Result)
    MergeFrom(*source);
  }
}

void QosCreateVolumePolicyResponse_Result::MergeFrom(const QosCreateVolumePolicyResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.QosCreateVolumePolicyResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void QosCreateVolumePolicyResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.QosCreateVolumePolicyResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QosCreateVolumePolicyResponse_Result::CopyFrom(const QosCreateVolumePolicyResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.QosCreateVolumePolicyResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QosCreateVolumePolicyResponse_Result::IsInitialized() const {
  return true;
}

void QosCreateVolumePolicyResponse_Result::InternalSwap(QosCreateVolumePolicyResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QosCreateVolumePolicyResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class QosCreateVolumePolicyResponse::_Internal {
 public:
  static const ::grpc_cli::QosCreateVolumePolicyResponse_Result& result(const QosCreateVolumePolicyResponse* msg);
  static const ::grpc_cli::PosInfo& info(const QosCreateVolumePolicyResponse* msg);
};

const ::grpc_cli::QosCreateVolumePolicyResponse_Result&
QosCreateVolumePolicyResponse::_Internal::result(const QosCreateVolumePolicyResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
QosCreateVolumePolicyResponse::_Internal::info(const QosCreateVolumePolicyResponse* msg) {
  return *msg->info_;
}
QosCreateVolumePolicyResponse::QosCreateVolumePolicyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.QosCreateVolumePolicyResponse)
}
QosCreateVolumePolicyResponse::QosCreateVolumePolicyResponse(const QosCreateVolumePolicyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::QosCreateVolumePolicyResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.QosCreateVolumePolicyResponse)
}

void QosCreateVolumePolicyResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

QosCreateVolumePolicyResponse::~QosCreateVolumePolicyResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.QosCreateVolumePolicyResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void QosCreateVolumePolicyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void QosCreateVolumePolicyResponse::ArenaDtor(void* object) {
  QosCreateVolumePolicyResponse* _this = reinterpret_cast< QosCreateVolumePolicyResponse* >(object);
  (void)_this;
}
void QosCreateVolumePolicyResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void QosCreateVolumePolicyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void QosCreateVolumePolicyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.QosCreateVolumePolicyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QosCreateVolumePolicyResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.QosCreateVolumePolicyResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.QosCreateVolumePolicyResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.QosCreateVolumePolicyResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* QosCreateVolumePolicyResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.QosCreateVolumePolicyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.QosCreateVolumePolicyResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.QosCreateVolumePolicyResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.QosCreateVolumePolicyResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.QosCreateVolumePolicyResponse)
  return target;
}

size_t QosCreateVolumePolicyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.QosCreateVolumePolicyResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.QosCreateVolumePolicyResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QosCreateVolumePolicyResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.QosCreateVolumePolicyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const QosCreateVolumePolicyResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<QosCreateVolumePolicyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.QosCreateVolumePolicyResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.QosCreateVolumePolicyResponse)
    MergeFrom(*source);
  }
}

void QosCreateVolumePolicyResponse::MergeFrom(const QosCreateVolumePolicyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.QosCreateVolumePolicyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::QosCreateVolumePolicyResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void QosCreateVolumePolicyResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.QosCreateVolumePolicyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QosCreateVolumePolicyResponse::CopyFrom(const QosCreateVolumePolicyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.QosCreateVolumePolicyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QosCreateVolumePolicyResponse::IsInitialized() const {
  return true;
}

void QosCreateVolumePolicyResponse::InternalSwap(QosCreateVolumePolicyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QosCreateVolumePolicyResponse, info_)
      + sizeof(QosCreateVolumePolicyResponse::info_)
      - PROTOBUF_FIELD_OFFSET(QosCreateVolumePolicyResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata QosCreateVolumePolicyResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class QosResetVolumePolicyRequest_Param::_Internal {
 public:
};

QosResetVolumePolicyRequest_Param::QosResetVolumePolicyRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  vol_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.QosResetVolumePolicyRequest.Param)
}
QosResetVolumePolicyRequest_Param::QosResetVolumePolicyRequest_Param(const QosResetVolumePolicyRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      vol_(from.vol_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  array_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_array().empty()) {
    array_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_array(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.QosResetVolumePolicyRequest.Param)
}

void QosResetVolumePolicyRequest_Param::SharedCtor() {
array_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

QosResetVolumePolicyRequest_Param::~QosResetVolumePolicyRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.QosResetVolumePolicyRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void QosResetVolumePolicyRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  array_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void QosResetVolumePolicyRequest_Param::ArenaDtor(void* object) {
  QosResetVolumePolicyRequest_Param* _this = reinterpret_cast< QosResetVolumePolicyRequest_Param* >(object);
  (void)_this;
}
void QosResetVolumePolicyRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void QosResetVolumePolicyRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void QosResetVolumePolicyRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.QosResetVolumePolicyRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vol_.Clear();
  array_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QosResetVolumePolicyRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string array = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_array();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.QosResetVolumePolicyRequest.Param.array"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .grpc_cli.QosVolumeNameParam vol = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_vol(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* QosResetVolumePolicyRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.QosResetVolumePolicyRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string array = 1;
  if (this->array().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_array().data(), static_cast<int>(this->_internal_array().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.QosResetVolumePolicyRequest.Param.array");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_array(), target);
  }

  // repeated .grpc_cli.QosVolumeNameParam vol = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_vol_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_vol(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.QosResetVolumePolicyRequest.Param)
  return target;
}

size_t QosResetVolumePolicyRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.QosResetVolumePolicyRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_cli.QosVolumeNameParam vol = 2;
  total_size += 1UL * this->_internal_vol_size();
  for (const auto& msg : this->vol_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string array = 1;
  if (this->array().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_array());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QosResetVolumePolicyRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.QosResetVolumePolicyRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const QosResetVolumePolicyRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<QosResetVolumePolicyRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.QosResetVolumePolicyRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.QosResetVolumePolicyRequest.Param)
    MergeFrom(*source);
  }
}

void QosResetVolumePolicyRequest_Param::MergeFrom(const QosResetVolumePolicyRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.QosResetVolumePolicyRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vol_.MergeFrom(from.vol_);
  if (from.array().size() > 0) {
    _internal_set_array(from._internal_array());
  }
}

void QosResetVolumePolicyRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.QosResetVolumePolicyRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QosResetVolumePolicyRequest_Param::CopyFrom(const QosResetVolumePolicyRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.QosResetVolumePolicyRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QosResetVolumePolicyRequest_Param::IsInitialized() const {
  return true;
}

void QosResetVolumePolicyRequest_Param::InternalSwap(QosResetVolumePolicyRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  vol_.InternalSwap(&other->vol_);
  array_.Swap(&other->array_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata QosResetVolumePolicyRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class QosResetVolumePolicyRequest::_Internal {
 public:
  static const ::grpc_cli::QosResetVolumePolicyRequest_Param& param(const QosResetVolumePolicyRequest* msg);
};

const ::grpc_cli::QosResetVolumePolicyRequest_Param&
QosResetVolumePolicyRequest::_Internal::param(const QosResetVolumePolicyRequest* msg) {
  return *msg->param_;
}
QosResetVolumePolicyRequest::QosResetVolumePolicyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.QosResetVolumePolicyRequest)
}
QosResetVolumePolicyRequest::QosResetVolumePolicyRequest(const QosResetVolumePolicyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::QosResetVolumePolicyRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.QosResetVolumePolicyRequest)
}

void QosResetVolumePolicyRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

QosResetVolumePolicyRequest::~QosResetVolumePolicyRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.QosResetVolumePolicyRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void QosResetVolumePolicyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void QosResetVolumePolicyRequest::ArenaDtor(void* object) {
  QosResetVolumePolicyRequest* _this = reinterpret_cast< QosResetVolumePolicyRequest* >(object);
  (void)_this;
}
void QosResetVolumePolicyRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void QosResetVolumePolicyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void QosResetVolumePolicyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.QosResetVolumePolicyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QosResetVolumePolicyRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.QosResetVolumePolicyRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.QosResetVolumePolicyRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.QosResetVolumePolicyRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.QosResetVolumePolicyRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* QosResetVolumePolicyRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.QosResetVolumePolicyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.QosResetVolumePolicyRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.QosResetVolumePolicyRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.QosResetVolumePolicyRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.QosResetVolumePolicyRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.QosResetVolumePolicyRequest)
  return target;
}

size_t QosResetVolumePolicyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.QosResetVolumePolicyRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.QosResetVolumePolicyRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QosResetVolumePolicyRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.QosResetVolumePolicyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const QosResetVolumePolicyRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<QosResetVolumePolicyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.QosResetVolumePolicyRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.QosResetVolumePolicyRequest)
    MergeFrom(*source);
  }
}

void QosResetVolumePolicyRequest::MergeFrom(const QosResetVolumePolicyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.QosResetVolumePolicyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::QosResetVolumePolicyRequest_Param::MergeFrom(from._internal_param());
  }
}

void QosResetVolumePolicyRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.QosResetVolumePolicyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QosResetVolumePolicyRequest::CopyFrom(const QosResetVolumePolicyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.QosResetVolumePolicyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QosResetVolumePolicyRequest::IsInitialized() const {
  return true;
}

void QosResetVolumePolicyRequest::InternalSwap(QosResetVolumePolicyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QosResetVolumePolicyRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class VolumeInfoRequest_Param::_Internal {
 public:
};

VolumeInfoRequest_Param::VolumeInfoRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.VolumeInfoRequest.Param)
}
VolumeInfoRequest_Param::VolumeInfoRequest_Param(const VolumeInfoRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  array_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_array().empty()) {
    array_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_array(), 
      GetArena());
  }
  volume_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_volume().empty()) {
    volume_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_volume(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.VolumeInfoRequest.Param)
}

void VolumeInfoRequest_Param::SharedCtor() {
array_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
volume_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

VolumeInfoRequest_Param::~VolumeInfoRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.VolumeInfoRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void VolumeInfoRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  array_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  volume_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void VolumeInfoRequest_Param::ArenaDtor(void* object) {
  VolumeInfoRequest_Param* _this = reinterpret_cast< VolumeInfoRequest_Param* >(object);
  (void)_this;
}
void VolumeInfoRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VolumeInfoRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void VolumeInfoRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.VolumeInfoRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  array_.ClearToEmpty();
  volume_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VolumeInfoRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string array = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_array();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.VolumeInfoRequest.Param.array"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string volume = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_volume();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.VolumeInfoRequest.Param.volume"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VolumeInfoRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.VolumeInfoRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string array = 1;
  if (this->array().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_array().data(), static_cast<int>(this->_internal_array().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.VolumeInfoRequest.Param.array");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_array(), target);
  }

  // string volume = 2;
  if (this->volume().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_volume().data(), static_cast<int>(this->_internal_volume().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.VolumeInfoRequest.Param.volume");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_volume(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.VolumeInfoRequest.Param)
  return target;
}

size_t VolumeInfoRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.VolumeInfoRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string array = 1;
  if (this->array().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_array());
  }

  // string volume = 2;
  if (this->volume().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_volume());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VolumeInfoRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.VolumeInfoRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const VolumeInfoRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VolumeInfoRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.VolumeInfoRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.VolumeInfoRequest.Param)
    MergeFrom(*source);
  }
}

void VolumeInfoRequest_Param::MergeFrom(const VolumeInfoRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.VolumeInfoRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.array().size() > 0) {
    _internal_set_array(from._internal_array());
  }
  if (from.volume().size() > 0) {
    _internal_set_volume(from._internal_volume());
  }
}

void VolumeInfoRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.VolumeInfoRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VolumeInfoRequest_Param::CopyFrom(const VolumeInfoRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.VolumeInfoRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VolumeInfoRequest_Param::IsInitialized() const {
  return true;
}

void VolumeInfoRequest_Param::InternalSwap(VolumeInfoRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  array_.Swap(&other->array_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  volume_.Swap(&other->volume_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata VolumeInfoRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class VolumeInfoRequest::_Internal {
 public:
  static const ::grpc_cli::VolumeInfoRequest_Param& param(const VolumeInfoRequest* msg);
};

const ::grpc_cli::VolumeInfoRequest_Param&
VolumeInfoRequest::_Internal::param(const VolumeInfoRequest* msg) {
  return *msg->param_;
}
VolumeInfoRequest::VolumeInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.VolumeInfoRequest)
}
VolumeInfoRequest::VolumeInfoRequest(const VolumeInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::VolumeInfoRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.VolumeInfoRequest)
}

void VolumeInfoRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

VolumeInfoRequest::~VolumeInfoRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.VolumeInfoRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void VolumeInfoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void VolumeInfoRequest::ArenaDtor(void* object) {
  VolumeInfoRequest* _this = reinterpret_cast< VolumeInfoRequest* >(object);
  (void)_this;
}
void VolumeInfoRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VolumeInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void VolumeInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.VolumeInfoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VolumeInfoRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.VolumeInfoRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.VolumeInfoRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.VolumeInfoRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.VolumeInfoRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VolumeInfoRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.VolumeInfoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.VolumeInfoRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.VolumeInfoRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.VolumeInfoRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.VolumeInfoRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.VolumeInfoRequest)
  return target;
}

size_t VolumeInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.VolumeInfoRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.VolumeInfoRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VolumeInfoRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.VolumeInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const VolumeInfoRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VolumeInfoRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.VolumeInfoRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.VolumeInfoRequest)
    MergeFrom(*source);
  }
}

void VolumeInfoRequest::MergeFrom(const VolumeInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.VolumeInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::VolumeInfoRequest_Param::MergeFrom(from._internal_param());
  }
}

void VolumeInfoRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.VolumeInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VolumeInfoRequest::CopyFrom(const VolumeInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.VolumeInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VolumeInfoRequest::IsInitialized() const {
  return true;
}

void VolumeInfoRequest::InternalSwap(VolumeInfoRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata VolumeInfoRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class QosResetVolumePolicyResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const QosResetVolumePolicyResponse_Result* msg);
};

const ::grpc_cli::Status&
QosResetVolumePolicyResponse_Result::_Internal::status(const QosResetVolumePolicyResponse_Result* msg) {
  return *msg->status_;
}
QosResetVolumePolicyResponse_Result::QosResetVolumePolicyResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.QosResetVolumePolicyResponse.Result)
}
QosResetVolumePolicyResponse_Result::QosResetVolumePolicyResponse_Result(const QosResetVolumePolicyResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.QosResetVolumePolicyResponse.Result)
}

void QosResetVolumePolicyResponse_Result::SharedCtor() {
status_ = nullptr;
}

QosResetVolumePolicyResponse_Result::~QosResetVolumePolicyResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.QosResetVolumePolicyResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void QosResetVolumePolicyResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void QosResetVolumePolicyResponse_Result::ArenaDtor(void* object) {
  QosResetVolumePolicyResponse_Result* _this = reinterpret_cast< QosResetVolumePolicyResponse_Result* >(object);
  (void)_this;
}
void QosResetVolumePolicyResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void QosResetVolumePolicyResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void QosResetVolumePolicyResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.QosResetVolumePolicyResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QosResetVolumePolicyResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* QosResetVolumePolicyResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.QosResetVolumePolicyResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.QosResetVolumePolicyResponse.Result)
  return target;
}

size_t QosResetVolumePolicyResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.QosResetVolumePolicyResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QosResetVolumePolicyResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.QosResetVolumePolicyResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const QosResetVolumePolicyResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<QosResetVolumePolicyResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.QosResetVolumePolicyResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.QosResetVolumePolicyResponse.Result)
    MergeFrom(*source);
  }
}

void QosResetVolumePolicyResponse_Result::MergeFrom(const QosResetVolumePolicyResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.QosResetVolumePolicyResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void QosResetVolumePolicyResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.QosResetVolumePolicyResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QosResetVolumePolicyResponse_Result::CopyFrom(const QosResetVolumePolicyResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.QosResetVolumePolicyResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QosResetVolumePolicyResponse_Result::IsInitialized() const {
  return true;
}

void QosResetVolumePolicyResponse_Result::InternalSwap(QosResetVolumePolicyResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QosResetVolumePolicyResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class QosResetVolumePolicyResponse::_Internal {
 public:
  static const ::grpc_cli::QosResetVolumePolicyResponse_Result& result(const QosResetVolumePolicyResponse* msg);
  static const ::grpc_cli::PosInfo& info(const QosResetVolumePolicyResponse* msg);
};

const ::grpc_cli::QosResetVolumePolicyResponse_Result&
QosResetVolumePolicyResponse::_Internal::result(const QosResetVolumePolicyResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
QosResetVolumePolicyResponse::_Internal::info(const QosResetVolumePolicyResponse* msg) {
  return *msg->info_;
}
QosResetVolumePolicyResponse::QosResetVolumePolicyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.QosResetVolumePolicyResponse)
}
QosResetVolumePolicyResponse::QosResetVolumePolicyResponse(const QosResetVolumePolicyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::QosResetVolumePolicyResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.QosResetVolumePolicyResponse)
}

void QosResetVolumePolicyResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

QosResetVolumePolicyResponse::~QosResetVolumePolicyResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.QosResetVolumePolicyResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void QosResetVolumePolicyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void QosResetVolumePolicyResponse::ArenaDtor(void* object) {
  QosResetVolumePolicyResponse* _this = reinterpret_cast< QosResetVolumePolicyResponse* >(object);
  (void)_this;
}
void QosResetVolumePolicyResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void QosResetVolumePolicyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void QosResetVolumePolicyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.QosResetVolumePolicyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QosResetVolumePolicyResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.QosResetVolumePolicyResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.QosResetVolumePolicyResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.QosResetVolumePolicyResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* QosResetVolumePolicyResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.QosResetVolumePolicyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.QosResetVolumePolicyResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.QosResetVolumePolicyResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.QosResetVolumePolicyResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.QosResetVolumePolicyResponse)
  return target;
}

size_t QosResetVolumePolicyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.QosResetVolumePolicyResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.QosResetVolumePolicyResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QosResetVolumePolicyResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.QosResetVolumePolicyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const QosResetVolumePolicyResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<QosResetVolumePolicyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.QosResetVolumePolicyResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.QosResetVolumePolicyResponse)
    MergeFrom(*source);
  }
}

void QosResetVolumePolicyResponse::MergeFrom(const QosResetVolumePolicyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.QosResetVolumePolicyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::QosResetVolumePolicyResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void QosResetVolumePolicyResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.QosResetVolumePolicyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QosResetVolumePolicyResponse::CopyFrom(const QosResetVolumePolicyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.QosResetVolumePolicyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QosResetVolumePolicyResponse::IsInitialized() const {
  return true;
}

void QosResetVolumePolicyResponse::InternalSwap(QosResetVolumePolicyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QosResetVolumePolicyResponse, info_)
      + sizeof(QosResetVolumePolicyResponse::info_)
      - PROTOBUF_FIELD_OFFSET(QosResetVolumePolicyResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata QosResetVolumePolicyResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class VolumeInfoResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const VolumeInfoResponse_Result* msg);
  static const ::grpc_cli::Volume& data(const VolumeInfoResponse_Result* msg);
};

const ::grpc_cli::Status&
VolumeInfoResponse_Result::_Internal::status(const VolumeInfoResponse_Result* msg) {
  return *msg->status_;
}
const ::grpc_cli::Volume&
VolumeInfoResponse_Result::_Internal::data(const VolumeInfoResponse_Result* msg) {
  return *msg->data_;
}
VolumeInfoResponse_Result::VolumeInfoResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.VolumeInfoResponse.Result)
}
VolumeInfoResponse_Result::VolumeInfoResponse_Result(const VolumeInfoResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_data()) {
    data_ = new ::grpc_cli::Volume(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.VolumeInfoResponse.Result)
}

void VolumeInfoResponse_Result::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&data_) -
    reinterpret_cast<char*>(&status_)) + sizeof(data_));
}

VolumeInfoResponse_Result::~VolumeInfoResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.VolumeInfoResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void VolumeInfoResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete data_;
}

void VolumeInfoResponse_Result::ArenaDtor(void* object) {
  VolumeInfoResponse_Result* _this = reinterpret_cast< VolumeInfoResponse_Result* >(object);
  (void)_this;
}
void VolumeInfoResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VolumeInfoResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void VolumeInfoResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.VolumeInfoResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VolumeInfoResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.Volume data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VolumeInfoResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.VolumeInfoResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .grpc_cli.Volume data = 2;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.VolumeInfoResponse.Result)
  return target;
}

size_t VolumeInfoResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.VolumeInfoResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .grpc_cli.Volume data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VolumeInfoResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.VolumeInfoResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const VolumeInfoResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VolumeInfoResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.VolumeInfoResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.VolumeInfoResponse.Result)
    MergeFrom(*source);
  }
}

void VolumeInfoResponse_Result::MergeFrom(const VolumeInfoResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.VolumeInfoResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
  if (from.has_data()) {
    _internal_mutable_data()->::grpc_cli::Volume::MergeFrom(from._internal_data());
  }
}

void VolumeInfoResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.VolumeInfoResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VolumeInfoResponse_Result::CopyFrom(const VolumeInfoResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.VolumeInfoResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VolumeInfoResponse_Result::IsInitialized() const {
  return true;
}

void VolumeInfoResponse_Result::InternalSwap(VolumeInfoResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VolumeInfoResponse_Result, data_)
      + sizeof(VolumeInfoResponse_Result::data_)
      - PROTOBUF_FIELD_OFFSET(VolumeInfoResponse_Result, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata VolumeInfoResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class VolumeInfoResponse::_Internal {
 public:
  static const ::grpc_cli::VolumeInfoResponse_Result& result(const VolumeInfoResponse* msg);
  static const ::grpc_cli::PosInfo& info(const VolumeInfoResponse* msg);
};

const ::grpc_cli::VolumeInfoResponse_Result&
VolumeInfoResponse::_Internal::result(const VolumeInfoResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
VolumeInfoResponse::_Internal::info(const VolumeInfoResponse* msg) {
  return *msg->info_;
}
VolumeInfoResponse::VolumeInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.VolumeInfoResponse)
}
VolumeInfoResponse::VolumeInfoResponse(const VolumeInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::VolumeInfoResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.VolumeInfoResponse)
}

void VolumeInfoResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

VolumeInfoResponse::~VolumeInfoResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.VolumeInfoResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void VolumeInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void VolumeInfoResponse::ArenaDtor(void* object) {
  VolumeInfoResponse* _this = reinterpret_cast< VolumeInfoResponse* >(object);
  (void)_this;
}
void VolumeInfoResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VolumeInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void VolumeInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.VolumeInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VolumeInfoResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.VolumeInfoResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.VolumeInfoResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.VolumeInfoResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VolumeInfoResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.VolumeInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.VolumeInfoResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.VolumeInfoResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.VolumeInfoResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.VolumeInfoResponse)
  return target;
}

size_t VolumeInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.VolumeInfoResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.VolumeInfoResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VolumeInfoResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.VolumeInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const VolumeInfoResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VolumeInfoResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.VolumeInfoResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.VolumeInfoResponse)
    MergeFrom(*source);
  }
}

void VolumeInfoResponse::MergeFrom(const VolumeInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.VolumeInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::VolumeInfoResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void VolumeInfoResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.VolumeInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VolumeInfoResponse::CopyFrom(const VolumeInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.VolumeInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VolumeInfoResponse::IsInitialized() const {
  return true;
}

void VolumeInfoResponse::InternalSwap(VolumeInfoResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VolumeInfoResponse, info_)
      + sizeof(VolumeInfoResponse::info_)
      - PROTOBUF_FIELD_OFFSET(VolumeInfoResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata VolumeInfoResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class VolumeRenameRequest_Param::_Internal {
 public:
};

VolumeRenameRequest_Param::VolumeRenameRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.VolumeRenameRequest.Param)
}
VolumeRenameRequest_Param::VolumeRenameRequest_Param(const VolumeRenameRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  array_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_array().empty()) {
    array_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_array(), 
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  newname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_newname().empty()) {
    newname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_newname(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.VolumeRenameRequest.Param)
}

void VolumeRenameRequest_Param::SharedCtor() {
array_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
newname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

VolumeRenameRequest_Param::~VolumeRenameRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.VolumeRenameRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void VolumeRenameRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  array_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  newname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void VolumeRenameRequest_Param::ArenaDtor(void* object) {
  VolumeRenameRequest_Param* _this = reinterpret_cast< VolumeRenameRequest_Param* >(object);
  (void)_this;
}
void VolumeRenameRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VolumeRenameRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void VolumeRenameRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.VolumeRenameRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  array_.ClearToEmpty();
  name_.ClearToEmpty();
  newname_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VolumeRenameRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string array = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_array();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.VolumeRenameRequest.Param.array"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.VolumeRenameRequest.Param.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string newname = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_newname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.VolumeRenameRequest.Param.newname"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VolumeRenameRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.VolumeRenameRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string array = 1;
  if (this->array().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_array().data(), static_cast<int>(this->_internal_array().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.VolumeRenameRequest.Param.array");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_array(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.VolumeRenameRequest.Param.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string newname = 3;
  if (this->newname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_newname().data(), static_cast<int>(this->_internal_newname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.VolumeRenameRequest.Param.newname");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_newname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.VolumeRenameRequest.Param)
  return target;
}

size_t VolumeRenameRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.VolumeRenameRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string array = 1;
  if (this->array().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_array());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string newname = 3;
  if (this->newname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_newname());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VolumeRenameRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.VolumeRenameRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const VolumeRenameRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VolumeRenameRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.VolumeRenameRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.VolumeRenameRequest.Param)
    MergeFrom(*source);
  }
}

void VolumeRenameRequest_Param::MergeFrom(const VolumeRenameRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.VolumeRenameRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.array().size() > 0) {
    _internal_set_array(from._internal_array());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.newname().size() > 0) {
    _internal_set_newname(from._internal_newname());
  }
}

void VolumeRenameRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.VolumeRenameRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VolumeRenameRequest_Param::CopyFrom(const VolumeRenameRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.VolumeRenameRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VolumeRenameRequest_Param::IsInitialized() const {
  return true;
}

void VolumeRenameRequest_Param::InternalSwap(VolumeRenameRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  array_.Swap(&other->array_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  newname_.Swap(&other->newname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata VolumeRenameRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class VolumeRenameRequest::_Internal {
 public:
  static const ::grpc_cli::VolumeRenameRequest_Param& param(const VolumeRenameRequest* msg);
};

const ::grpc_cli::VolumeRenameRequest_Param&
VolumeRenameRequest::_Internal::param(const VolumeRenameRequest* msg) {
  return *msg->param_;
}
VolumeRenameRequest::VolumeRenameRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.VolumeRenameRequest)
}
VolumeRenameRequest::VolumeRenameRequest(const VolumeRenameRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::VolumeRenameRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.VolumeRenameRequest)
}

void VolumeRenameRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

VolumeRenameRequest::~VolumeRenameRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.VolumeRenameRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void VolumeRenameRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void VolumeRenameRequest::ArenaDtor(void* object) {
  VolumeRenameRequest* _this = reinterpret_cast< VolumeRenameRequest* >(object);
  (void)_this;
}
void VolumeRenameRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VolumeRenameRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void VolumeRenameRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.VolumeRenameRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VolumeRenameRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.VolumeRenameRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.VolumeRenameRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.VolumeRenameRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.VolumeRenameRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VolumeRenameRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.VolumeRenameRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.VolumeRenameRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.VolumeRenameRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.VolumeRenameRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.VolumeRenameRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.VolumeRenameRequest)
  return target;
}

size_t VolumeRenameRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.VolumeRenameRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.VolumeRenameRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VolumeRenameRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.VolumeRenameRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const VolumeRenameRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VolumeRenameRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.VolumeRenameRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.VolumeRenameRequest)
    MergeFrom(*source);
  }
}

void VolumeRenameRequest::MergeFrom(const VolumeRenameRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.VolumeRenameRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::VolumeRenameRequest_Param::MergeFrom(from._internal_param());
  }
}

void VolumeRenameRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.VolumeRenameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VolumeRenameRequest::CopyFrom(const VolumeRenameRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.VolumeRenameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VolumeRenameRequest::IsInitialized() const {
  return true;
}

void VolumeRenameRequest::InternalSwap(VolumeRenameRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata VolumeRenameRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class VolumeRenameResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const VolumeRenameResponse_Result* msg);
};

const ::grpc_cli::Status&
VolumeRenameResponse_Result::_Internal::status(const VolumeRenameResponse_Result* msg) {
  return *msg->status_;
}
VolumeRenameResponse_Result::VolumeRenameResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.VolumeRenameResponse.Result)
}
VolumeRenameResponse_Result::VolumeRenameResponse_Result(const VolumeRenameResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.VolumeRenameResponse.Result)
}

void VolumeRenameResponse_Result::SharedCtor() {
status_ = nullptr;
}

VolumeRenameResponse_Result::~VolumeRenameResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.VolumeRenameResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void VolumeRenameResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void VolumeRenameResponse_Result::ArenaDtor(void* object) {
  VolumeRenameResponse_Result* _this = reinterpret_cast< VolumeRenameResponse_Result* >(object);
  (void)_this;
}
void VolumeRenameResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VolumeRenameResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void VolumeRenameResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.VolumeRenameResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VolumeRenameResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VolumeRenameResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.VolumeRenameResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.VolumeRenameResponse.Result)
  return target;
}

size_t VolumeRenameResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.VolumeRenameResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VolumeRenameResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.VolumeRenameResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const VolumeRenameResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VolumeRenameResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.VolumeRenameResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.VolumeRenameResponse.Result)
    MergeFrom(*source);
  }
}

void VolumeRenameResponse_Result::MergeFrom(const VolumeRenameResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.VolumeRenameResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void VolumeRenameResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.VolumeRenameResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VolumeRenameResponse_Result::CopyFrom(const VolumeRenameResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.VolumeRenameResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VolumeRenameResponse_Result::IsInitialized() const {
  return true;
}

void VolumeRenameResponse_Result::InternalSwap(VolumeRenameResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata VolumeRenameResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class VolumeRenameResponse::_Internal {
 public:
  static const ::grpc_cli::VolumeRenameResponse_Result& result(const VolumeRenameResponse* msg);
  static const ::grpc_cli::PosInfo& info(const VolumeRenameResponse* msg);
};

const ::grpc_cli::VolumeRenameResponse_Result&
VolumeRenameResponse::_Internal::result(const VolumeRenameResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
VolumeRenameResponse::_Internal::info(const VolumeRenameResponse* msg) {
  return *msg->info_;
}
VolumeRenameResponse::VolumeRenameResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.VolumeRenameResponse)
}
VolumeRenameResponse::VolumeRenameResponse(const VolumeRenameResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::VolumeRenameResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.VolumeRenameResponse)
}

void VolumeRenameResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

VolumeRenameResponse::~VolumeRenameResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.VolumeRenameResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void VolumeRenameResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void VolumeRenameResponse::ArenaDtor(void* object) {
  VolumeRenameResponse* _this = reinterpret_cast< VolumeRenameResponse* >(object);
  (void)_this;
}
void VolumeRenameResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VolumeRenameResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void VolumeRenameResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.VolumeRenameResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VolumeRenameResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.VolumeRenameResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.VolumeRenameResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.VolumeRenameResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VolumeRenameResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.VolumeRenameResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.VolumeRenameResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.VolumeRenameResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.VolumeRenameResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.VolumeRenameResponse)
  return target;
}

size_t VolumeRenameResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.VolumeRenameResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.VolumeRenameResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VolumeRenameResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.VolumeRenameResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const VolumeRenameResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VolumeRenameResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.VolumeRenameResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.VolumeRenameResponse)
    MergeFrom(*source);
  }
}

void VolumeRenameResponse::MergeFrom(const VolumeRenameResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.VolumeRenameResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::VolumeRenameResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void VolumeRenameResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.VolumeRenameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VolumeRenameResponse::CopyFrom(const VolumeRenameResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.VolumeRenameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VolumeRenameResponse::IsInitialized() const {
  return true;
}

void VolumeRenameResponse::InternalSwap(VolumeRenameResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VolumeRenameResponse, info_)
      + sizeof(VolumeRenameResponse::info_)
      - PROTOBUF_FIELD_OFFSET(VolumeRenameResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata VolumeRenameResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListWBTRequest::_Internal {
 public:
};

ListWBTRequest::ListWBTRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListWBTRequest)
}
ListWBTRequest::ListWBTRequest(const ListWBTRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListWBTRequest)
}

void ListWBTRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListWBTRequest::~ListWBTRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListWBTRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListWBTRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListWBTRequest::ArenaDtor(void* object) {
  ListWBTRequest* _this = reinterpret_cast< ListWBTRequest* >(object);
  (void)_this;
}
void ListWBTRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListWBTRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListWBTRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListWBTRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListWBTRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListWBTRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListWBTRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListWBTRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListWBTRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListWBTRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListWBTRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListWBTRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListWBTRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListWBTRequest)
  return target;
}

size_t ListWBTRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListWBTRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListWBTRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListWBTRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListWBTRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListWBTRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListWBTRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListWBTRequest)
    MergeFrom(*source);
  }
}

void ListWBTRequest::MergeFrom(const ListWBTRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListWBTRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
}

void ListWBTRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListWBTRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListWBTRequest::CopyFrom(const ListWBTRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListWBTRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListWBTRequest::IsInitialized() const {
  return true;
}

void ListWBTRequest::InternalSwap(ListWBTRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ListWBTRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class WBTTest::_Internal {
 public:
};

WBTTest::WBTTest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.WBTTest)
}
WBTTest::WBTTest(const WBTTest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  testname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_testname().empty()) {
    testname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_testname(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.WBTTest)
}

void WBTTest::SharedCtor() {
testname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

WBTTest::~WBTTest() {
  // @@protoc_insertion_point(destructor:grpc_cli.WBTTest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WBTTest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  testname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WBTTest::ArenaDtor(void* object) {
  WBTTest* _this = reinterpret_cast< WBTTest* >(object);
  (void)_this;
}
void WBTTest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WBTTest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void WBTTest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.WBTTest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  testname_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WBTTest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string testname = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_testname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.WBTTest.testname"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WBTTest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.WBTTest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string testname = 1;
  if (this->testname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_testname().data(), static_cast<int>(this->_internal_testname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.WBTTest.testname");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_testname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.WBTTest)
  return target;
}

size_t WBTTest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.WBTTest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string testname = 1;
  if (this->testname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_testname());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WBTTest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.WBTTest)
  GOOGLE_DCHECK_NE(&from, this);
  const WBTTest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WBTTest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.WBTTest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.WBTTest)
    MergeFrom(*source);
  }
}

void WBTTest::MergeFrom(const WBTTest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.WBTTest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.testname().size() > 0) {
    _internal_set_testname(from._internal_testname());
  }
}

void WBTTest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.WBTTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WBTTest::CopyFrom(const WBTTest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.WBTTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WBTTest::IsInitialized() const {
  return true;
}

void WBTTest::InternalSwap(WBTTest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  testname_.Swap(&other->testname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata WBTTest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListWBTResponse_Result_Tests::_Internal {
 public:
};

ListWBTResponse_Result_Tests::ListWBTResponse_Result_Tests(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  testlist_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListWBTResponse.Result.Tests)
}
ListWBTResponse_Result_Tests::ListWBTResponse_Result_Tests(const ListWBTResponse_Result_Tests& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      testlist_(from.testlist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListWBTResponse.Result.Tests)
}

void ListWBTResponse_Result_Tests::SharedCtor() {
}

ListWBTResponse_Result_Tests::~ListWBTResponse_Result_Tests() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListWBTResponse.Result.Tests)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListWBTResponse_Result_Tests::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ListWBTResponse_Result_Tests::ArenaDtor(void* object) {
  ListWBTResponse_Result_Tests* _this = reinterpret_cast< ListWBTResponse_Result_Tests* >(object);
  (void)_this;
}
void ListWBTResponse_Result_Tests::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListWBTResponse_Result_Tests::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListWBTResponse_Result_Tests::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListWBTResponse.Result.Tests)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  testlist_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListWBTResponse_Result_Tests::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .grpc_cli.WBTTest testlist = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_testlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListWBTResponse_Result_Tests::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListWBTResponse.Result.Tests)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grpc_cli.WBTTest testlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_testlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_testlist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListWBTResponse.Result.Tests)
  return target;
}

size_t ListWBTResponse_Result_Tests::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListWBTResponse.Result.Tests)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_cli.WBTTest testlist = 1;
  total_size += 1UL * this->_internal_testlist_size();
  for (const auto& msg : this->testlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListWBTResponse_Result_Tests::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListWBTResponse.Result.Tests)
  GOOGLE_DCHECK_NE(&from, this);
  const ListWBTResponse_Result_Tests* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListWBTResponse_Result_Tests>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListWBTResponse.Result.Tests)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListWBTResponse.Result.Tests)
    MergeFrom(*source);
  }
}

void ListWBTResponse_Result_Tests::MergeFrom(const ListWBTResponse_Result_Tests& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListWBTResponse.Result.Tests)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  testlist_.MergeFrom(from.testlist_);
}

void ListWBTResponse_Result_Tests::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListWBTResponse.Result.Tests)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListWBTResponse_Result_Tests::CopyFrom(const ListWBTResponse_Result_Tests& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListWBTResponse.Result.Tests)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListWBTResponse_Result_Tests::IsInitialized() const {
  return true;
}

void ListWBTResponse_Result_Tests::InternalSwap(ListWBTResponse_Result_Tests* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  testlist_.InternalSwap(&other->testlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListWBTResponse_Result_Tests::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListWBTResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const ListWBTResponse_Result* msg);
  static const ::grpc_cli::ListWBTResponse_Result_Tests& data(const ListWBTResponse_Result* msg);
};

const ::grpc_cli::Status&
ListWBTResponse_Result::_Internal::status(const ListWBTResponse_Result* msg) {
  return *msg->status_;
}
const ::grpc_cli::ListWBTResponse_Result_Tests&
ListWBTResponse_Result::_Internal::data(const ListWBTResponse_Result* msg) {
  return *msg->data_;
}
ListWBTResponse_Result::ListWBTResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListWBTResponse.Result)
}
ListWBTResponse_Result::ListWBTResponse_Result(const ListWBTResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_data()) {
    data_ = new ::grpc_cli::ListWBTResponse_Result_Tests(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListWBTResponse.Result)
}

void ListWBTResponse_Result::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&data_) -
    reinterpret_cast<char*>(&status_)) + sizeof(data_));
}

ListWBTResponse_Result::~ListWBTResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListWBTResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListWBTResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete data_;
}

void ListWBTResponse_Result::ArenaDtor(void* object) {
  ListWBTResponse_Result* _this = reinterpret_cast< ListWBTResponse_Result* >(object);
  (void)_this;
}
void ListWBTResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListWBTResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListWBTResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListWBTResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListWBTResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ListWBTResponse.Result.Tests data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListWBTResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListWBTResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .grpc_cli.ListWBTResponse.Result.Tests data = 2;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListWBTResponse.Result)
  return target;
}

size_t ListWBTResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListWBTResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .grpc_cli.ListWBTResponse.Result.Tests data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListWBTResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListWBTResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const ListWBTResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListWBTResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListWBTResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListWBTResponse.Result)
    MergeFrom(*source);
  }
}

void ListWBTResponse_Result::MergeFrom(const ListWBTResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListWBTResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
  if (from.has_data()) {
    _internal_mutable_data()->::grpc_cli::ListWBTResponse_Result_Tests::MergeFrom(from._internal_data());
  }
}

void ListWBTResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListWBTResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListWBTResponse_Result::CopyFrom(const ListWBTResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListWBTResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListWBTResponse_Result::IsInitialized() const {
  return true;
}

void ListWBTResponse_Result::InternalSwap(ListWBTResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListWBTResponse_Result, data_)
      + sizeof(ListWBTResponse_Result::data_)
      - PROTOBUF_FIELD_OFFSET(ListWBTResponse_Result, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListWBTResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListWBTResponse::_Internal {
 public:
  static const ::grpc_cli::ListWBTResponse_Result& result(const ListWBTResponse* msg);
  static const ::grpc_cli::PosInfo& info(const ListWBTResponse* msg);
};

const ::grpc_cli::ListWBTResponse_Result&
ListWBTResponse::_Internal::result(const ListWBTResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
ListWBTResponse::_Internal::info(const ListWBTResponse* msg) {
  return *msg->info_;
}
ListWBTResponse::ListWBTResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListWBTResponse)
}
ListWBTResponse::ListWBTResponse(const ListWBTResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::ListWBTResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListWBTResponse)
}

void ListWBTResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

ListWBTResponse::~ListWBTResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListWBTResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListWBTResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void ListWBTResponse::ArenaDtor(void* object) {
  ListWBTResponse* _this = reinterpret_cast< ListWBTResponse* >(object);
  (void)_this;
}
void ListWBTResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListWBTResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListWBTResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListWBTResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListWBTResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListWBTResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListWBTResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ListWBTResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListWBTResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListWBTResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListWBTResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListWBTResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.ListWBTResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListWBTResponse)
  return target;
}

size_t ListWBTResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListWBTResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.ListWBTResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListWBTResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListWBTResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListWBTResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListWBTResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListWBTResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListWBTResponse)
    MergeFrom(*source);
  }
}

void ListWBTResponse::MergeFrom(const ListWBTResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListWBTResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::ListWBTResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void ListWBTResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListWBTResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListWBTResponse::CopyFrom(const ListWBTResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListWBTResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListWBTResponse::IsInitialized() const {
  return true;
}

void ListWBTResponse::InternalSwap(ListWBTResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListWBTResponse, info_)
      + sizeof(ListWBTResponse::info_)
      - PROTOBUF_FIELD_OFFSET(ListWBTResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListWBTResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListQOSPolicyRequest_Param_Volume::_Internal {
 public:
};

ListQOSPolicyRequest_Param_Volume::ListQOSPolicyRequest_Param_Volume(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListQOSPolicyRequest.Param.Volume)
}
ListQOSPolicyRequest_Param_Volume::ListQOSPolicyRequest_Param_Volume(const ListQOSPolicyRequest_Param_Volume& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  volumename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_volumename().empty()) {
    volumename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_volumename(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListQOSPolicyRequest.Param.Volume)
}

void ListQOSPolicyRequest_Param_Volume::SharedCtor() {
volumename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListQOSPolicyRequest_Param_Volume::~ListQOSPolicyRequest_Param_Volume() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListQOSPolicyRequest.Param.Volume)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListQOSPolicyRequest_Param_Volume::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  volumename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListQOSPolicyRequest_Param_Volume::ArenaDtor(void* object) {
  ListQOSPolicyRequest_Param_Volume* _this = reinterpret_cast< ListQOSPolicyRequest_Param_Volume* >(object);
  (void)_this;
}
void ListQOSPolicyRequest_Param_Volume::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListQOSPolicyRequest_Param_Volume::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListQOSPolicyRequest_Param_Volume::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListQOSPolicyRequest.Param.Volume)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  volumename_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListQOSPolicyRequest_Param_Volume::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string volumeName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_volumename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListQOSPolicyRequest.Param.Volume.volumeName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListQOSPolicyRequest_Param_Volume::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListQOSPolicyRequest.Param.Volume)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string volumeName = 1;
  if (this->volumename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_volumename().data(), static_cast<int>(this->_internal_volumename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListQOSPolicyRequest.Param.Volume.volumeName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_volumename(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListQOSPolicyRequest.Param.Volume)
  return target;
}

size_t ListQOSPolicyRequest_Param_Volume::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListQOSPolicyRequest.Param.Volume)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string volumeName = 1;
  if (this->volumename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_volumename());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListQOSPolicyRequest_Param_Volume::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListQOSPolicyRequest.Param.Volume)
  GOOGLE_DCHECK_NE(&from, this);
  const ListQOSPolicyRequest_Param_Volume* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListQOSPolicyRequest_Param_Volume>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListQOSPolicyRequest.Param.Volume)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListQOSPolicyRequest.Param.Volume)
    MergeFrom(*source);
  }
}

void ListQOSPolicyRequest_Param_Volume::MergeFrom(const ListQOSPolicyRequest_Param_Volume& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListQOSPolicyRequest.Param.Volume)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.volumename().size() > 0) {
    _internal_set_volumename(from._internal_volumename());
  }
}

void ListQOSPolicyRequest_Param_Volume::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListQOSPolicyRequest.Param.Volume)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListQOSPolicyRequest_Param_Volume::CopyFrom(const ListQOSPolicyRequest_Param_Volume& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListQOSPolicyRequest.Param.Volume)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListQOSPolicyRequest_Param_Volume::IsInitialized() const {
  return true;
}

void ListQOSPolicyRequest_Param_Volume::InternalSwap(ListQOSPolicyRequest_Param_Volume* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  volumename_.Swap(&other->volumename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ListQOSPolicyRequest_Param_Volume::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListQOSPolicyRequest_Param::_Internal {
 public:
};

ListQOSPolicyRequest_Param::ListQOSPolicyRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  vol_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListQOSPolicyRequest.Param)
}
ListQOSPolicyRequest_Param::ListQOSPolicyRequest_Param(const ListQOSPolicyRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      vol_(from.vol_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  array_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_array().empty()) {
    array_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_array(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListQOSPolicyRequest.Param)
}

void ListQOSPolicyRequest_Param::SharedCtor() {
array_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListQOSPolicyRequest_Param::~ListQOSPolicyRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListQOSPolicyRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListQOSPolicyRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  array_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListQOSPolicyRequest_Param::ArenaDtor(void* object) {
  ListQOSPolicyRequest_Param* _this = reinterpret_cast< ListQOSPolicyRequest_Param* >(object);
  (void)_this;
}
void ListQOSPolicyRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListQOSPolicyRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListQOSPolicyRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListQOSPolicyRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vol_.Clear();
  array_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListQOSPolicyRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string array = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_array();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListQOSPolicyRequest.Param.array"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .grpc_cli.ListQOSPolicyRequest.Param.Volume vol = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_vol(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListQOSPolicyRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListQOSPolicyRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string array = 1;
  if (this->array().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_array().data(), static_cast<int>(this->_internal_array().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListQOSPolicyRequest.Param.array");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_array(), target);
  }

  // repeated .grpc_cli.ListQOSPolicyRequest.Param.Volume vol = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_vol_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_vol(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListQOSPolicyRequest.Param)
  return target;
}

size_t ListQOSPolicyRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListQOSPolicyRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_cli.ListQOSPolicyRequest.Param.Volume vol = 2;
  total_size += 1UL * this->_internal_vol_size();
  for (const auto& msg : this->vol_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string array = 1;
  if (this->array().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_array());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListQOSPolicyRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListQOSPolicyRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const ListQOSPolicyRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListQOSPolicyRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListQOSPolicyRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListQOSPolicyRequest.Param)
    MergeFrom(*source);
  }
}

void ListQOSPolicyRequest_Param::MergeFrom(const ListQOSPolicyRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListQOSPolicyRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vol_.MergeFrom(from.vol_);
  if (from.array().size() > 0) {
    _internal_set_array(from._internal_array());
  }
}

void ListQOSPolicyRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListQOSPolicyRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListQOSPolicyRequest_Param::CopyFrom(const ListQOSPolicyRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListQOSPolicyRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListQOSPolicyRequest_Param::IsInitialized() const {
  return true;
}

void ListQOSPolicyRequest_Param::InternalSwap(ListQOSPolicyRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  vol_.InternalSwap(&other->vol_);
  array_.Swap(&other->array_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ListQOSPolicyRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListQOSPolicyRequest::_Internal {
 public:
  static const ::grpc_cli::ListQOSPolicyRequest_Param& param(const ListQOSPolicyRequest* msg);
};

const ::grpc_cli::ListQOSPolicyRequest_Param&
ListQOSPolicyRequest::_Internal::param(const ListQOSPolicyRequest* msg) {
  return *msg->param_;
}
ListQOSPolicyRequest::ListQOSPolicyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListQOSPolicyRequest)
}
ListQOSPolicyRequest::ListQOSPolicyRequest(const ListQOSPolicyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::ListQOSPolicyRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListQOSPolicyRequest)
}

void ListQOSPolicyRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

ListQOSPolicyRequest::~ListQOSPolicyRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListQOSPolicyRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListQOSPolicyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void ListQOSPolicyRequest::ArenaDtor(void* object) {
  ListQOSPolicyRequest* _this = reinterpret_cast< ListQOSPolicyRequest* >(object);
  (void)_this;
}
void ListQOSPolicyRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListQOSPolicyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListQOSPolicyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListQOSPolicyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListQOSPolicyRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListQOSPolicyRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListQOSPolicyRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListQOSPolicyRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ListQOSPolicyRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListQOSPolicyRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListQOSPolicyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListQOSPolicyRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListQOSPolicyRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListQOSPolicyRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.ListQOSPolicyRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListQOSPolicyRequest)
  return target;
}

size_t ListQOSPolicyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListQOSPolicyRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.ListQOSPolicyRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListQOSPolicyRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListQOSPolicyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListQOSPolicyRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListQOSPolicyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListQOSPolicyRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListQOSPolicyRequest)
    MergeFrom(*source);
  }
}

void ListQOSPolicyRequest::MergeFrom(const ListQOSPolicyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListQOSPolicyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::ListQOSPolicyRequest_Param::MergeFrom(from._internal_param());
  }
}

void ListQOSPolicyRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListQOSPolicyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListQOSPolicyRequest::CopyFrom(const ListQOSPolicyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListQOSPolicyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListQOSPolicyRequest::IsInitialized() const {
  return true;
}

void ListQOSPolicyRequest::InternalSwap(ListQOSPolicyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListQOSPolicyRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class QOSResult_Arrays::_Internal {
 public:
};

QOSResult_Arrays::QOSResult_Arrays(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.QOSResult.Arrays)
}
QOSResult_Arrays::QOSResult_Arrays(const QOSResult_Arrays& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  arrayname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_arrayname().empty()) {
    arrayname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_arrayname(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.QOSResult.Arrays)
}

void QOSResult_Arrays::SharedCtor() {
arrayname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

QOSResult_Arrays::~QOSResult_Arrays() {
  // @@protoc_insertion_point(destructor:grpc_cli.QOSResult.Arrays)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void QOSResult_Arrays::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  arrayname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void QOSResult_Arrays::ArenaDtor(void* object) {
  QOSResult_Arrays* _this = reinterpret_cast< QOSResult_Arrays* >(object);
  (void)_this;
}
void QOSResult_Arrays::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void QOSResult_Arrays::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void QOSResult_Arrays::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.QOSResult.Arrays)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arrayname_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QOSResult_Arrays::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string ArrayName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_arrayname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.QOSResult.Arrays.ArrayName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* QOSResult_Arrays::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.QOSResult.Arrays)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ArrayName = 1;
  if (this->arrayname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_arrayname().data(), static_cast<int>(this->_internal_arrayname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.QOSResult.Arrays.ArrayName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_arrayname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.QOSResult.Arrays)
  return target;
}

size_t QOSResult_Arrays::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.QOSResult.Arrays)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ArrayName = 1;
  if (this->arrayname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_arrayname());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QOSResult_Arrays::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.QOSResult.Arrays)
  GOOGLE_DCHECK_NE(&from, this);
  const QOSResult_Arrays* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<QOSResult_Arrays>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.QOSResult.Arrays)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.QOSResult.Arrays)
    MergeFrom(*source);
  }
}

void QOSResult_Arrays::MergeFrom(const QOSResult_Arrays& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.QOSResult.Arrays)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.arrayname().size() > 0) {
    _internal_set_arrayname(from._internal_arrayname());
  }
}

void QOSResult_Arrays::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.QOSResult.Arrays)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QOSResult_Arrays::CopyFrom(const QOSResult_Arrays& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.QOSResult.Arrays)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QOSResult_Arrays::IsInitialized() const {
  return true;
}

void QOSResult_Arrays::InternalSwap(QOSResult_Arrays* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  arrayname_.Swap(&other->arrayname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata QOSResult_Arrays::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class QOSResult_RebuildPolicy::_Internal {
 public:
};

QOSResult_RebuildPolicy::QOSResult_RebuildPolicy(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.QOSResult.RebuildPolicy)
}
QOSResult_RebuildPolicy::QOSResult_RebuildPolicy(const QOSResult_RebuildPolicy& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  rebuild_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rebuild().empty()) {
    rebuild_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rebuild(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.QOSResult.RebuildPolicy)
}

void QOSResult_RebuildPolicy::SharedCtor() {
rebuild_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

QOSResult_RebuildPolicy::~QOSResult_RebuildPolicy() {
  // @@protoc_insertion_point(destructor:grpc_cli.QOSResult.RebuildPolicy)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void QOSResult_RebuildPolicy::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  rebuild_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void QOSResult_RebuildPolicy::ArenaDtor(void* object) {
  QOSResult_RebuildPolicy* _this = reinterpret_cast< QOSResult_RebuildPolicy* >(object);
  (void)_this;
}
void QOSResult_RebuildPolicy::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void QOSResult_RebuildPolicy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void QOSResult_RebuildPolicy::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.QOSResult.RebuildPolicy)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rebuild_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QOSResult_RebuildPolicy::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string rebuild = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_rebuild();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.QOSResult.RebuildPolicy.rebuild"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* QOSResult_RebuildPolicy::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.QOSResult.RebuildPolicy)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string rebuild = 1;
  if (this->rebuild().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rebuild().data(), static_cast<int>(this->_internal_rebuild().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.QOSResult.RebuildPolicy.rebuild");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_rebuild(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.QOSResult.RebuildPolicy)
  return target;
}

size_t QOSResult_RebuildPolicy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.QOSResult.RebuildPolicy)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string rebuild = 1;
  if (this->rebuild().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rebuild());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QOSResult_RebuildPolicy::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.QOSResult.RebuildPolicy)
  GOOGLE_DCHECK_NE(&from, this);
  const QOSResult_RebuildPolicy* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<QOSResult_RebuildPolicy>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.QOSResult.RebuildPolicy)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.QOSResult.RebuildPolicy)
    MergeFrom(*source);
  }
}

void QOSResult_RebuildPolicy::MergeFrom(const QOSResult_RebuildPolicy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.QOSResult.RebuildPolicy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rebuild().size() > 0) {
    _internal_set_rebuild(from._internal_rebuild());
  }
}

void QOSResult_RebuildPolicy::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.QOSResult.RebuildPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QOSResult_RebuildPolicy::CopyFrom(const QOSResult_RebuildPolicy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.QOSResult.RebuildPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QOSResult_RebuildPolicy::IsInitialized() const {
  return true;
}

void QOSResult_RebuildPolicy::InternalSwap(QOSResult_RebuildPolicy* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  rebuild_.Swap(&other->rebuild_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata QOSResult_RebuildPolicy::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class QOSResult_VolumePolicies::_Internal {
 public:
};

QOSResult_VolumePolicies::QOSResult_VolumePolicies(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.QOSResult.VolumePolicies)
}
QOSResult_VolumePolicies::QOSResult_VolumePolicies(const QOSResult_VolumePolicies& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  maxbw_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_maxbw().empty()) {
    maxbw_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_maxbw(), 
      GetArena());
  }
  maxiops_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_maxiops().empty()) {
    maxiops_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_maxiops(), 
      GetArena());
  }
  miniops_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_miniops().empty()) {
    miniops_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_miniops(), 
      GetArena());
  }
  minbw_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_minbw().empty()) {
    minbw_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_minbw(), 
      GetArena());
  }
  min_bw_guarantee_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_min_bw_guarantee().empty()) {
    min_bw_guarantee_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_min_bw_guarantee(), 
      GetArena());
  }
  min_iops_guarantee_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_min_iops_guarantee().empty()) {
    min_iops_guarantee_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_min_iops_guarantee(), 
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:grpc_cli.QOSResult.VolumePolicies)
}

void QOSResult_VolumePolicies::SharedCtor() {
maxbw_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
maxiops_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
miniops_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
minbw_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
min_bw_guarantee_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
min_iops_guarantee_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
id_ = 0;
}

QOSResult_VolumePolicies::~QOSResult_VolumePolicies() {
  // @@protoc_insertion_point(destructor:grpc_cli.QOSResult.VolumePolicies)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void QOSResult_VolumePolicies::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  maxbw_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  maxiops_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  miniops_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  minbw_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  min_bw_guarantee_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  min_iops_guarantee_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void QOSResult_VolumePolicies::ArenaDtor(void* object) {
  QOSResult_VolumePolicies* _this = reinterpret_cast< QOSResult_VolumePolicies* >(object);
  (void)_this;
}
void QOSResult_VolumePolicies::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void QOSResult_VolumePolicies::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void QOSResult_VolumePolicies::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.QOSResult.VolumePolicies)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  maxbw_.ClearToEmpty();
  maxiops_.ClearToEmpty();
  miniops_.ClearToEmpty();
  minbw_.ClearToEmpty();
  min_bw_guarantee_.ClearToEmpty();
  min_iops_guarantee_.ClearToEmpty();
  name_.ClearToEmpty();
  id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QOSResult_VolumePolicies::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string maxbw = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_maxbw();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.QOSResult.VolumePolicies.maxbw"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string maxiops = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_maxiops();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.QOSResult.VolumePolicies.maxiops"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string miniops = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_miniops();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.QOSResult.VolumePolicies.miniops"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string minbw = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_minbw();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.QOSResult.VolumePolicies.minbw"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string min_bw_guarantee = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_min_bw_guarantee();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.QOSResult.VolumePolicies.min_bw_guarantee"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string min_iops_guarantee = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_min_iops_guarantee();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.QOSResult.VolumePolicies.min_iops_guarantee"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.QOSResult.VolumePolicies.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* QOSResult_VolumePolicies::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.QOSResult.VolumePolicies)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // string maxbw = 2;
  if (this->maxbw().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_maxbw().data(), static_cast<int>(this->_internal_maxbw().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.QOSResult.VolumePolicies.maxbw");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_maxbw(), target);
  }

  // string maxiops = 3;
  if (this->maxiops().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_maxiops().data(), static_cast<int>(this->_internal_maxiops().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.QOSResult.VolumePolicies.maxiops");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_maxiops(), target);
  }

  // string miniops = 4;
  if (this->miniops().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_miniops().data(), static_cast<int>(this->_internal_miniops().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.QOSResult.VolumePolicies.miniops");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_miniops(), target);
  }

  // string minbw = 5;
  if (this->minbw().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_minbw().data(), static_cast<int>(this->_internal_minbw().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.QOSResult.VolumePolicies.minbw");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_minbw(), target);
  }

  // string min_bw_guarantee = 6;
  if (this->min_bw_guarantee().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_min_bw_guarantee().data(), static_cast<int>(this->_internal_min_bw_guarantee().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.QOSResult.VolumePolicies.min_bw_guarantee");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_min_bw_guarantee(), target);
  }

  // string min_iops_guarantee = 7;
  if (this->min_iops_guarantee().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_min_iops_guarantee().data(), static_cast<int>(this->_internal_min_iops_guarantee().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.QOSResult.VolumePolicies.min_iops_guarantee");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_min_iops_guarantee(), target);
  }

  // string name = 8;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.QOSResult.VolumePolicies.name");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.QOSResult.VolumePolicies)
  return target;
}

size_t QOSResult_VolumePolicies::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.QOSResult.VolumePolicies)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string maxbw = 2;
  if (this->maxbw().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_maxbw());
  }

  // string maxiops = 3;
  if (this->maxiops().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_maxiops());
  }

  // string miniops = 4;
  if (this->miniops().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_miniops());
  }

  // string minbw = 5;
  if (this->minbw().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_minbw());
  }

  // string min_bw_guarantee = 6;
  if (this->min_bw_guarantee().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_min_bw_guarantee());
  }

  // string min_iops_guarantee = 7;
  if (this->min_iops_guarantee().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_min_iops_guarantee());
  }

  // string name = 8;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QOSResult_VolumePolicies::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.QOSResult.VolumePolicies)
  GOOGLE_DCHECK_NE(&from, this);
  const QOSResult_VolumePolicies* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<QOSResult_VolumePolicies>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.QOSResult.VolumePolicies)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.QOSResult.VolumePolicies)
    MergeFrom(*source);
  }
}

void QOSResult_VolumePolicies::MergeFrom(const QOSResult_VolumePolicies& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.QOSResult.VolumePolicies)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.maxbw().size() > 0) {
    _internal_set_maxbw(from._internal_maxbw());
  }
  if (from.maxiops().size() > 0) {
    _internal_set_maxiops(from._internal_maxiops());
  }
  if (from.miniops().size() > 0) {
    _internal_set_miniops(from._internal_miniops());
  }
  if (from.minbw().size() > 0) {
    _internal_set_minbw(from._internal_minbw());
  }
  if (from.min_bw_guarantee().size() > 0) {
    _internal_set_min_bw_guarantee(from._internal_min_bw_guarantee());
  }
  if (from.min_iops_guarantee().size() > 0) {
    _internal_set_min_iops_guarantee(from._internal_min_iops_guarantee());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void QOSResult_VolumePolicies::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.QOSResult.VolumePolicies)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QOSResult_VolumePolicies::CopyFrom(const QOSResult_VolumePolicies& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.QOSResult.VolumePolicies)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QOSResult_VolumePolicies::IsInitialized() const {
  return true;
}

void QOSResult_VolumePolicies::InternalSwap(QOSResult_VolumePolicies* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  maxbw_.Swap(&other->maxbw_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  maxiops_.Swap(&other->maxiops_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  miniops_.Swap(&other->miniops_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  minbw_.Swap(&other->minbw_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  min_bw_guarantee_.Swap(&other->min_bw_guarantee_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  min_iops_guarantee_.Swap(&other->min_iops_guarantee_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QOSResult_VolumePolicies::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class QOSResult::_Internal {
 public:
};

QOSResult::QOSResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  arrayname_(arena),
  rebuildpolicy_(arena),
  volumepolicies_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.QOSResult)
}
QOSResult::QOSResult(const QOSResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      arrayname_(from.arrayname_),
      rebuildpolicy_(from.rebuildpolicy_),
      volumepolicies_(from.volumepolicies_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc_cli.QOSResult)
}

void QOSResult::SharedCtor() {
}

QOSResult::~QOSResult() {
  // @@protoc_insertion_point(destructor:grpc_cli.QOSResult)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void QOSResult::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void QOSResult::ArenaDtor(void* object) {
  QOSResult* _this = reinterpret_cast< QOSResult* >(object);
  (void)_this;
}
void QOSResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void QOSResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void QOSResult::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.QOSResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arrayname_.Clear();
  rebuildpolicy_.Clear();
  volumepolicies_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QOSResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .grpc_cli.QOSResult.Arrays arrayName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_arrayname(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .grpc_cli.QOSResult.RebuildPolicy rebuildPolicy = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_rebuildpolicy(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .grpc_cli.QOSResult.VolumePolicies volumePolicies = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_volumepolicies(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* QOSResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.QOSResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grpc_cli.QOSResult.Arrays arrayName = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_arrayname_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_arrayname(i), target, stream);
  }

  // repeated .grpc_cli.QOSResult.RebuildPolicy rebuildPolicy = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_rebuildpolicy_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_rebuildpolicy(i), target, stream);
  }

  // repeated .grpc_cli.QOSResult.VolumePolicies volumePolicies = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_volumepolicies_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_volumepolicies(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.QOSResult)
  return target;
}

size_t QOSResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.QOSResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_cli.QOSResult.Arrays arrayName = 1;
  total_size += 1UL * this->_internal_arrayname_size();
  for (const auto& msg : this->arrayname_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .grpc_cli.QOSResult.RebuildPolicy rebuildPolicy = 2;
  total_size += 1UL * this->_internal_rebuildpolicy_size();
  for (const auto& msg : this->rebuildpolicy_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .grpc_cli.QOSResult.VolumePolicies volumePolicies = 3;
  total_size += 1UL * this->_internal_volumepolicies_size();
  for (const auto& msg : this->volumepolicies_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QOSResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.QOSResult)
  GOOGLE_DCHECK_NE(&from, this);
  const QOSResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<QOSResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.QOSResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.QOSResult)
    MergeFrom(*source);
  }
}

void QOSResult::MergeFrom(const QOSResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.QOSResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arrayname_.MergeFrom(from.arrayname_);
  rebuildpolicy_.MergeFrom(from.rebuildpolicy_);
  volumepolicies_.MergeFrom(from.volumepolicies_);
}

void QOSResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.QOSResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QOSResult::CopyFrom(const QOSResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.QOSResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QOSResult::IsInitialized() const {
  return true;
}

void QOSResult::InternalSwap(QOSResult* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  arrayname_.InternalSwap(&other->arrayname_);
  rebuildpolicy_.InternalSwap(&other->rebuildpolicy_);
  volumepolicies_.InternalSwap(&other->volumepolicies_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QOSResult::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListQOSPolicyResponse_Result_ListQOSResult::_Internal {
 public:
};

ListQOSPolicyResponse_Result_ListQOSResult::ListQOSPolicyResponse_Result_ListQOSResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  qosresult_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListQOSPolicyResponse.Result.ListQOSResult)
}
ListQOSPolicyResponse_Result_ListQOSResult::ListQOSPolicyResponse_Result_ListQOSResult(const ListQOSPolicyResponse_Result_ListQOSResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      qosresult_(from.qosresult_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListQOSPolicyResponse.Result.ListQOSResult)
}

void ListQOSPolicyResponse_Result_ListQOSResult::SharedCtor() {
}

ListQOSPolicyResponse_Result_ListQOSResult::~ListQOSPolicyResponse_Result_ListQOSResult() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListQOSPolicyResponse.Result.ListQOSResult)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListQOSPolicyResponse_Result_ListQOSResult::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ListQOSPolicyResponse_Result_ListQOSResult::ArenaDtor(void* object) {
  ListQOSPolicyResponse_Result_ListQOSResult* _this = reinterpret_cast< ListQOSPolicyResponse_Result_ListQOSResult* >(object);
  (void)_this;
}
void ListQOSPolicyResponse_Result_ListQOSResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListQOSPolicyResponse_Result_ListQOSResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListQOSPolicyResponse_Result_ListQOSResult::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListQOSPolicyResponse.Result.ListQOSResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  qosresult_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListQOSPolicyResponse_Result_ListQOSResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .grpc_cli.QOSResult qosresult = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_qosresult(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListQOSPolicyResponse_Result_ListQOSResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListQOSPolicyResponse.Result.ListQOSResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grpc_cli.QOSResult qosresult = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_qosresult_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_qosresult(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListQOSPolicyResponse.Result.ListQOSResult)
  return target;
}

size_t ListQOSPolicyResponse_Result_ListQOSResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListQOSPolicyResponse.Result.ListQOSResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_cli.QOSResult qosresult = 1;
  total_size += 1UL * this->_internal_qosresult_size();
  for (const auto& msg : this->qosresult_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListQOSPolicyResponse_Result_ListQOSResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListQOSPolicyResponse.Result.ListQOSResult)
  GOOGLE_DCHECK_NE(&from, this);
  const ListQOSPolicyResponse_Result_ListQOSResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListQOSPolicyResponse_Result_ListQOSResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListQOSPolicyResponse.Result.ListQOSResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListQOSPolicyResponse.Result.ListQOSResult)
    MergeFrom(*source);
  }
}

void ListQOSPolicyResponse_Result_ListQOSResult::MergeFrom(const ListQOSPolicyResponse_Result_ListQOSResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListQOSPolicyResponse.Result.ListQOSResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  qosresult_.MergeFrom(from.qosresult_);
}

void ListQOSPolicyResponse_Result_ListQOSResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListQOSPolicyResponse.Result.ListQOSResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListQOSPolicyResponse_Result_ListQOSResult::CopyFrom(const ListQOSPolicyResponse_Result_ListQOSResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListQOSPolicyResponse.Result.ListQOSResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListQOSPolicyResponse_Result_ListQOSResult::IsInitialized() const {
  return true;
}

void ListQOSPolicyResponse_Result_ListQOSResult::InternalSwap(ListQOSPolicyResponse_Result_ListQOSResult* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  qosresult_.InternalSwap(&other->qosresult_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListQOSPolicyResponse_Result_ListQOSResult::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListQOSPolicyResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const ListQOSPolicyResponse_Result* msg);
  static const ::grpc_cli::ListQOSPolicyResponse_Result_ListQOSResult& data(const ListQOSPolicyResponse_Result* msg);
};

const ::grpc_cli::Status&
ListQOSPolicyResponse_Result::_Internal::status(const ListQOSPolicyResponse_Result* msg) {
  return *msg->status_;
}
const ::grpc_cli::ListQOSPolicyResponse_Result_ListQOSResult&
ListQOSPolicyResponse_Result::_Internal::data(const ListQOSPolicyResponse_Result* msg) {
  return *msg->data_;
}
ListQOSPolicyResponse_Result::ListQOSPolicyResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListQOSPolicyResponse.Result)
}
ListQOSPolicyResponse_Result::ListQOSPolicyResponse_Result(const ListQOSPolicyResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_data()) {
    data_ = new ::grpc_cli::ListQOSPolicyResponse_Result_ListQOSResult(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListQOSPolicyResponse.Result)
}

void ListQOSPolicyResponse_Result::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&data_) -
    reinterpret_cast<char*>(&status_)) + sizeof(data_));
}

ListQOSPolicyResponse_Result::~ListQOSPolicyResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListQOSPolicyResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListQOSPolicyResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete data_;
}

void ListQOSPolicyResponse_Result::ArenaDtor(void* object) {
  ListQOSPolicyResponse_Result* _this = reinterpret_cast< ListQOSPolicyResponse_Result* >(object);
  (void)_this;
}
void ListQOSPolicyResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListQOSPolicyResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListQOSPolicyResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListQOSPolicyResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListQOSPolicyResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ListQOSPolicyResponse.Result.ListQOSResult data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListQOSPolicyResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListQOSPolicyResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .grpc_cli.ListQOSPolicyResponse.Result.ListQOSResult data = 2;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListQOSPolicyResponse.Result)
  return target;
}

size_t ListQOSPolicyResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListQOSPolicyResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .grpc_cli.ListQOSPolicyResponse.Result.ListQOSResult data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListQOSPolicyResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListQOSPolicyResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const ListQOSPolicyResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListQOSPolicyResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListQOSPolicyResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListQOSPolicyResponse.Result)
    MergeFrom(*source);
  }
}

void ListQOSPolicyResponse_Result::MergeFrom(const ListQOSPolicyResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListQOSPolicyResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
  if (from.has_data()) {
    _internal_mutable_data()->::grpc_cli::ListQOSPolicyResponse_Result_ListQOSResult::MergeFrom(from._internal_data());
  }
}

void ListQOSPolicyResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListQOSPolicyResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListQOSPolicyResponse_Result::CopyFrom(const ListQOSPolicyResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListQOSPolicyResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListQOSPolicyResponse_Result::IsInitialized() const {
  return true;
}

void ListQOSPolicyResponse_Result::InternalSwap(ListQOSPolicyResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListQOSPolicyResponse_Result, data_)
      + sizeof(ListQOSPolicyResponse_Result::data_)
      - PROTOBUF_FIELD_OFFSET(ListQOSPolicyResponse_Result, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListQOSPolicyResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListQOSPolicyResponse::_Internal {
 public:
  static const ::grpc_cli::ListQOSPolicyResponse_Result& result(const ListQOSPolicyResponse* msg);
  static const ::grpc_cli::PosInfo& info(const ListQOSPolicyResponse* msg);
};

const ::grpc_cli::ListQOSPolicyResponse_Result&
ListQOSPolicyResponse::_Internal::result(const ListQOSPolicyResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
ListQOSPolicyResponse::_Internal::info(const ListQOSPolicyResponse* msg) {
  return *msg->info_;
}
ListQOSPolicyResponse::ListQOSPolicyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListQOSPolicyResponse)
}
ListQOSPolicyResponse::ListQOSPolicyResponse(const ListQOSPolicyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::ListQOSPolicyResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListQOSPolicyResponse)
}

void ListQOSPolicyResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

ListQOSPolicyResponse::~ListQOSPolicyResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListQOSPolicyResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListQOSPolicyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void ListQOSPolicyResponse::ArenaDtor(void* object) {
  ListQOSPolicyResponse* _this = reinterpret_cast< ListQOSPolicyResponse* >(object);
  (void)_this;
}
void ListQOSPolicyResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListQOSPolicyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListQOSPolicyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListQOSPolicyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListQOSPolicyResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListQOSPolicyResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListQOSPolicyResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ListQOSPolicyResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListQOSPolicyResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListQOSPolicyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListQOSPolicyResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListQOSPolicyResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.ListQOSPolicyResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListQOSPolicyResponse)
  return target;
}

size_t ListQOSPolicyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListQOSPolicyResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.ListQOSPolicyResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListQOSPolicyResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListQOSPolicyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListQOSPolicyResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListQOSPolicyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListQOSPolicyResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListQOSPolicyResponse)
    MergeFrom(*source);
  }
}

void ListQOSPolicyResponse::MergeFrom(const ListQOSPolicyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListQOSPolicyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::ListQOSPolicyResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void ListQOSPolicyResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListQOSPolicyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListQOSPolicyResponse::CopyFrom(const ListQOSPolicyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListQOSPolicyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListQOSPolicyResponse::IsInitialized() const {
  return true;
}

void ListQOSPolicyResponse::InternalSwap(ListQOSPolicyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListQOSPolicyResponse, info_)
      + sizeof(ListQOSPolicyResponse::info_)
      - PROTOBUF_FIELD_OFFSET(ListQOSPolicyResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListQOSPolicyResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

WBTRequest_Param_ArgvEntry_DoNotUse::WBTRequest_Param_ArgvEntry_DoNotUse() {}
WBTRequest_Param_ArgvEntry_DoNotUse::WBTRequest_Param_ArgvEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void WBTRequest_Param_ArgvEntry_DoNotUse::MergeFrom(const WBTRequest_Param_ArgvEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata WBTRequest_Param_ArgvEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void WBTRequest_Param_ArgvEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

class WBTRequest_Param::_Internal {
 public:
};

WBTRequest_Param::WBTRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  argv_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.WBTRequest.Param)
}
WBTRequest_Param::WBTRequest_Param(const WBTRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  argv_.MergeFrom(from.argv_);
  testname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_testname().empty()) {
    testname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_testname(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.WBTRequest.Param)
}

void WBTRequest_Param::SharedCtor() {
testname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

WBTRequest_Param::~WBTRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.WBTRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WBTRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  testname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WBTRequest_Param::ArenaDtor(void* object) {
  WBTRequest_Param* _this = reinterpret_cast< WBTRequest_Param* >(object);
  (void)_this;
}
void WBTRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WBTRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void WBTRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.WBTRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  argv_.Clear();
  testname_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WBTRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string testname = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_testname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.WBTRequest.Param.testname"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> argv = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&argv_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WBTRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.WBTRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string testname = 1;
  if (this->testname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_testname().data(), static_cast<int>(this->_internal_testname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.WBTRequest.Param.testname");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_testname(), target);
  }

  // map<string, string> argv = 2;
  if (!this->_internal_argv().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "grpc_cli.WBTRequest.Param.ArgvEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "grpc_cli.WBTRequest.Param.ArgvEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_argv().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_argv().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_argv().begin();
          it != this->_internal_argv().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = WBTRequest_Param_ArgvEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_argv().begin();
          it != this->_internal_argv().end(); ++it) {
        target = WBTRequest_Param_ArgvEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.WBTRequest.Param)
  return target;
}

size_t WBTRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.WBTRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> argv = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_argv_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_argv().begin();
      it != this->_internal_argv().end(); ++it) {
    total_size += WBTRequest_Param_ArgvEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string testname = 1;
  if (this->testname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_testname());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WBTRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.WBTRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const WBTRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WBTRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.WBTRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.WBTRequest.Param)
    MergeFrom(*source);
  }
}

void WBTRequest_Param::MergeFrom(const WBTRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.WBTRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  argv_.MergeFrom(from.argv_);
  if (from.testname().size() > 0) {
    _internal_set_testname(from._internal_testname());
  }
}

void WBTRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.WBTRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WBTRequest_Param::CopyFrom(const WBTRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.WBTRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WBTRequest_Param::IsInitialized() const {
  return true;
}

void WBTRequest_Param::InternalSwap(WBTRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  argv_.Swap(&other->argv_);
  testname_.Swap(&other->testname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata WBTRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class WBTRequest::_Internal {
 public:
  static const ::grpc_cli::WBTRequest_Param& param(const WBTRequest* msg);
};

const ::grpc_cli::WBTRequest_Param&
WBTRequest::_Internal::param(const WBTRequest* msg) {
  return *msg->param_;
}
WBTRequest::WBTRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.WBTRequest)
}
WBTRequest::WBTRequest(const WBTRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::WBTRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.WBTRequest)
}

void WBTRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

WBTRequest::~WBTRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.WBTRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WBTRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void WBTRequest::ArenaDtor(void* object) {
  WBTRequest* _this = reinterpret_cast< WBTRequest* >(object);
  (void)_this;
}
void WBTRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WBTRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void WBTRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.WBTRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WBTRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.WBTRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.WBTRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.WBTRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.WBTRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WBTRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.WBTRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.WBTRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.WBTRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.WBTRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.WBTRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.WBTRequest)
  return target;
}

size_t WBTRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.WBTRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.WBTRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WBTRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.WBTRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WBTRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WBTRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.WBTRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.WBTRequest)
    MergeFrom(*source);
  }
}

void WBTRequest::MergeFrom(const WBTRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.WBTRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::WBTRequest_Param::MergeFrom(from._internal_param());
  }
}

void WBTRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.WBTRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WBTRequest::CopyFrom(const WBTRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.WBTRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WBTRequest::IsInitialized() const {
  return true;
}

void WBTRequest::InternalSwap(WBTRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WBTRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class WBTResponse_Result_TestData::_Internal {
 public:
};

WBTResponse_Result_TestData::WBTResponse_Result_TestData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.WBTResponse.Result.TestData)
}
WBTResponse_Result_TestData::WBTResponse_Result_TestData(const WBTResponse_Result_TestData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  testdata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_testdata().empty()) {
    testdata_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_testdata(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.WBTResponse.Result.TestData)
}

void WBTResponse_Result_TestData::SharedCtor() {
testdata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

WBTResponse_Result_TestData::~WBTResponse_Result_TestData() {
  // @@protoc_insertion_point(destructor:grpc_cli.WBTResponse.Result.TestData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WBTResponse_Result_TestData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  testdata_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WBTResponse_Result_TestData::ArenaDtor(void* object) {
  WBTResponse_Result_TestData* _this = reinterpret_cast< WBTResponse_Result_TestData* >(object);
  (void)_this;
}
void WBTResponse_Result_TestData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WBTResponse_Result_TestData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void WBTResponse_Result_TestData::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.WBTResponse.Result.TestData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  testdata_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WBTResponse_Result_TestData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string testdata = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_testdata();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.WBTResponse.Result.TestData.testdata"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WBTResponse_Result_TestData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.WBTResponse.Result.TestData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string testdata = 1;
  if (this->testdata().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_testdata().data(), static_cast<int>(this->_internal_testdata().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.WBTResponse.Result.TestData.testdata");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_testdata(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.WBTResponse.Result.TestData)
  return target;
}

size_t WBTResponse_Result_TestData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.WBTResponse.Result.TestData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string testdata = 1;
  if (this->testdata().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_testdata());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WBTResponse_Result_TestData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.WBTResponse.Result.TestData)
  GOOGLE_DCHECK_NE(&from, this);
  const WBTResponse_Result_TestData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WBTResponse_Result_TestData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.WBTResponse.Result.TestData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.WBTResponse.Result.TestData)
    MergeFrom(*source);
  }
}

void WBTResponse_Result_TestData::MergeFrom(const WBTResponse_Result_TestData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.WBTResponse.Result.TestData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.testdata().size() > 0) {
    _internal_set_testdata(from._internal_testdata());
  }
}

void WBTResponse_Result_TestData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.WBTResponse.Result.TestData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WBTResponse_Result_TestData::CopyFrom(const WBTResponse_Result_TestData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.WBTResponse.Result.TestData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WBTResponse_Result_TestData::IsInitialized() const {
  return true;
}

void WBTResponse_Result_TestData::InternalSwap(WBTResponse_Result_TestData* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  testdata_.Swap(&other->testdata_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata WBTResponse_Result_TestData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class WBTResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const WBTResponse_Result* msg);
  static const ::grpc_cli::WBTResponse_Result_TestData& data(const WBTResponse_Result* msg);
};

const ::grpc_cli::Status&
WBTResponse_Result::_Internal::status(const WBTResponse_Result* msg) {
  return *msg->status_;
}
const ::grpc_cli::WBTResponse_Result_TestData&
WBTResponse_Result::_Internal::data(const WBTResponse_Result* msg) {
  return *msg->data_;
}
WBTResponse_Result::WBTResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.WBTResponse.Result)
}
WBTResponse_Result::WBTResponse_Result(const WBTResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_data()) {
    data_ = new ::grpc_cli::WBTResponse_Result_TestData(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.WBTResponse.Result)
}

void WBTResponse_Result::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&data_) -
    reinterpret_cast<char*>(&status_)) + sizeof(data_));
}

WBTResponse_Result::~WBTResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.WBTResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WBTResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete data_;
}

void WBTResponse_Result::ArenaDtor(void* object) {
  WBTResponse_Result* _this = reinterpret_cast< WBTResponse_Result* >(object);
  (void)_this;
}
void WBTResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WBTResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void WBTResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.WBTResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WBTResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.WBTResponse.Result.TestData data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WBTResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.WBTResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .grpc_cli.WBTResponse.Result.TestData data = 2;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.WBTResponse.Result)
  return target;
}

size_t WBTResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.WBTResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .grpc_cli.WBTResponse.Result.TestData data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WBTResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.WBTResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const WBTResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WBTResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.WBTResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.WBTResponse.Result)
    MergeFrom(*source);
  }
}

void WBTResponse_Result::MergeFrom(const WBTResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.WBTResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
  if (from.has_data()) {
    _internal_mutable_data()->::grpc_cli::WBTResponse_Result_TestData::MergeFrom(from._internal_data());
  }
}

void WBTResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.WBTResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WBTResponse_Result::CopyFrom(const WBTResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.WBTResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WBTResponse_Result::IsInitialized() const {
  return true;
}

void WBTResponse_Result::InternalSwap(WBTResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WBTResponse_Result, data_)
      + sizeof(WBTResponse_Result::data_)
      - PROTOBUF_FIELD_OFFSET(WBTResponse_Result, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata WBTResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class WBTResponse::_Internal {
 public:
  static const ::grpc_cli::WBTResponse_Result& result(const WBTResponse* msg);
  static const ::grpc_cli::PosInfo& info(const WBTResponse* msg);
};

const ::grpc_cli::WBTResponse_Result&
WBTResponse::_Internal::result(const WBTResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
WBTResponse::_Internal::info(const WBTResponse* msg) {
  return *msg->info_;
}
WBTResponse::WBTResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.WBTResponse)
}
WBTResponse::WBTResponse(const WBTResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::WBTResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.WBTResponse)
}

void WBTResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

WBTResponse::~WBTResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.WBTResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WBTResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void WBTResponse::ArenaDtor(void* object) {
  WBTResponse* _this = reinterpret_cast< WBTResponse* >(object);
  (void)_this;
}
void WBTResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WBTResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void WBTResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.WBTResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WBTResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.WBTResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.WBTResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.WBTResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WBTResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.WBTResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.WBTResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.WBTResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.WBTResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.WBTResponse)
  return target;
}

size_t WBTResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.WBTResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.WBTResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WBTResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.WBTResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const WBTResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WBTResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.WBTResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.WBTResponse)
    MergeFrom(*source);
  }
}

void WBTResponse::MergeFrom(const WBTResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.WBTResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::WBTResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void WBTResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.WBTResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WBTResponse::CopyFrom(const WBTResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.WBTResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WBTResponse::IsInitialized() const {
  return true;
}

void WBTResponse::InternalSwap(WBTResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WBTResponse, info_)
      + sizeof(WBTResponse::info_)
      - PROTOBUF_FIELD_OFFSET(WBTResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata WBTResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace grpc_cli
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpc_cli::Status* Arena::CreateMaybeMessage< ::grpc_cli::Status >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::Status >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::PosInfo* Arena::CreateMaybeMessage< ::grpc_cli::PosInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::PosInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::StartSystemRequest* Arena::CreateMaybeMessage< ::grpc_cli::StartSystemRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::StartSystemRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SystemInfoRequest* Arena::CreateMaybeMessage< ::grpc_cli::SystemInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SystemInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SystemInfoResponse_Result_Data* Arena::CreateMaybeMessage< ::grpc_cli::SystemInfoResponse_Result_Data >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SystemInfoResponse_Result_Data >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SystemInfoResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::SystemInfoResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SystemInfoResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SystemInfoResponse* Arena::CreateMaybeMessage< ::grpc_cli::SystemInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SystemInfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::StopSystemRequest* Arena::CreateMaybeMessage< ::grpc_cli::StopSystemRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::StopSystemRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::StopSystemResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::StopSystemResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::StopSystemResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::StopSystemResponse* Arena::CreateMaybeMessage< ::grpc_cli::StopSystemResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::StopSystemResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::GetSystemPropertyRequest* Arena::CreateMaybeMessage< ::grpc_cli::GetSystemPropertyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::GetSystemPropertyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::GetSystemPropertyResponse_Result_Data* Arena::CreateMaybeMessage< ::grpc_cli::GetSystemPropertyResponse_Result_Data >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::GetSystemPropertyResponse_Result_Data >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::GetSystemPropertyResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::GetSystemPropertyResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::GetSystemPropertyResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::GetSystemPropertyResponse* Arena::CreateMaybeMessage< ::grpc_cli::GetSystemPropertyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::GetSystemPropertyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SetSystemPropertyRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::SetSystemPropertyRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SetSystemPropertyRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SetSystemPropertyRequest* Arena::CreateMaybeMessage< ::grpc_cli::SetSystemPropertyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SetSystemPropertyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SetSystemPropertyResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::SetSystemPropertyResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SetSystemPropertyResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SetSystemPropertyResponse* Arena::CreateMaybeMessage< ::grpc_cli::SetSystemPropertyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SetSystemPropertyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::StartTelemetryRequest* Arena::CreateMaybeMessage< ::grpc_cli::StartTelemetryRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::StartTelemetryRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::StartTelemetryResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::StartTelemetryResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::StartTelemetryResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::StartTelemetryResponse* Arena::CreateMaybeMessage< ::grpc_cli::StartTelemetryResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::StartTelemetryResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::StopTelemetryRequest* Arena::CreateMaybeMessage< ::grpc_cli::StopTelemetryRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::StopTelemetryRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::StopTelemetryResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::StopTelemetryResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::StopTelemetryResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::StopTelemetryResponse* Arena::CreateMaybeMessage< ::grpc_cli::StopTelemetryResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::StopTelemetryResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SetTelemetryPropertyRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::SetTelemetryPropertyRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SetTelemetryPropertyRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SetTelemetryPropertyRequest* Arena::CreateMaybeMessage< ::grpc_cli::SetTelemetryPropertyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SetTelemetryPropertyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SetTelemetryPropertyResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::SetTelemetryPropertyResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SetTelemetryPropertyResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SetTelemetryPropertyResponse* Arena::CreateMaybeMessage< ::grpc_cli::SetTelemetryPropertyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SetTelemetryPropertyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::GetTelemetryPropertyRequest* Arena::CreateMaybeMessage< ::grpc_cli::GetTelemetryPropertyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::GetTelemetryPropertyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::GetTelemetryPropertyResponse_Result_TelemetryProperty* Arena::CreateMaybeMessage< ::grpc_cli::GetTelemetryPropertyResponse_Result_TelemetryProperty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::GetTelemetryPropertyResponse_Result_TelemetryProperty >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::GetTelemetryPropertyResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::GetTelemetryPropertyResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::GetTelemetryPropertyResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::GetTelemetryPropertyResponse* Arena::CreateMaybeMessage< ::grpc_cli::GetTelemetryPropertyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::GetTelemetryPropertyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ResetEventWrrRequest* Arena::CreateMaybeMessage< ::grpc_cli::ResetEventWrrRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ResetEventWrrRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ResetEventWrrResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::ResetEventWrrResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ResetEventWrrResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ResetEventWrrResponse* Arena::CreateMaybeMessage< ::grpc_cli::ResetEventWrrResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ResetEventWrrResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ResetMbrRequest* Arena::CreateMaybeMessage< ::grpc_cli::ResetMbrRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ResetMbrRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ResetMbrResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::ResetMbrResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ResetMbrResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ResetMbrResponse* Arena::CreateMaybeMessage< ::grpc_cli::ResetMbrResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ResetMbrResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::DumpMemorySnapshotRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::DumpMemorySnapshotRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::DumpMemorySnapshotRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::DumpMemorySnapshotRequest* Arena::CreateMaybeMessage< ::grpc_cli::DumpMemorySnapshotRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::DumpMemorySnapshotRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::DumpMemorySnapshotResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::DumpMemorySnapshotResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::DumpMemorySnapshotResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::DumpMemorySnapshotResponse* Arena::CreateMaybeMessage< ::grpc_cli::DumpMemorySnapshotResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::DumpMemorySnapshotResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::StopRebuildingRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::StopRebuildingRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::StopRebuildingRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::StopRebuildingRequest* Arena::CreateMaybeMessage< ::grpc_cli::StopRebuildingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::StopRebuildingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::StopRebuildingResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::StopRebuildingResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::StopRebuildingResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::StopRebuildingResponse* Arena::CreateMaybeMessage< ::grpc_cli::StopRebuildingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::StopRebuildingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::UpdateEventWrrRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::UpdateEventWrrRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::UpdateEventWrrRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::UpdateEventWrrRequest* Arena::CreateMaybeMessage< ::grpc_cli::UpdateEventWrrRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::UpdateEventWrrRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::UpdateEventWrrResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::UpdateEventWrrResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::UpdateEventWrrResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::UpdateEventWrrResponse* Arena::CreateMaybeMessage< ::grpc_cli::UpdateEventWrrResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::UpdateEventWrrResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::AddSpareRequest_SpareDeviceName* Arena::CreateMaybeMessage< ::grpc_cli::AddSpareRequest_SpareDeviceName >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::AddSpareRequest_SpareDeviceName >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::AddSpareRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::AddSpareRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::AddSpareRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::AddSpareRequest* Arena::CreateMaybeMessage< ::grpc_cli::AddSpareRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::AddSpareRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::AddSpareResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::AddSpareResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::AddSpareResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::AddSpareResponse* Arena::CreateMaybeMessage< ::grpc_cli::AddSpareResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::AddSpareResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::DeviceNameList* Arena::CreateMaybeMessage< ::grpc_cli::DeviceNameList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::DeviceNameList >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::RemoveSpareRequest_SpareDeviceName* Arena::CreateMaybeMessage< ::grpc_cli::RemoveSpareRequest_SpareDeviceName >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::RemoveSpareRequest_SpareDeviceName >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::RemoveSpareRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::RemoveSpareRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::RemoveSpareRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::RemoveSpareRequest* Arena::CreateMaybeMessage< ::grpc_cli::RemoveSpareRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::RemoveSpareRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::RemoveSpareResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::RemoveSpareResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::RemoveSpareResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::RemoveSpareResponse* Arena::CreateMaybeMessage< ::grpc_cli::RemoveSpareResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::RemoveSpareResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ReplaceArrayDeviceRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::ReplaceArrayDeviceRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ReplaceArrayDeviceRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ReplaceArrayDeviceRequest* Arena::CreateMaybeMessage< ::grpc_cli::ReplaceArrayDeviceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ReplaceArrayDeviceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ReplaceArrayDeviceResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::ReplaceArrayDeviceResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ReplaceArrayDeviceResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ReplaceArrayDeviceResponse* Arena::CreateMaybeMessage< ::grpc_cli::ReplaceArrayDeviceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ReplaceArrayDeviceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::CreateArrayRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::CreateArrayRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::CreateArrayRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::CreateArrayRequest* Arena::CreateMaybeMessage< ::grpc_cli::CreateArrayRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::CreateArrayRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::CreateArrayResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::CreateArrayResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::CreateArrayResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::CreateArrayResponse* Arena::CreateMaybeMessage< ::grpc_cli::CreateArrayResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::CreateArrayResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::AutocreateArrayRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::AutocreateArrayRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::AutocreateArrayRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::AutocreateArrayRequest* Arena::CreateMaybeMessage< ::grpc_cli::AutocreateArrayRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::AutocreateArrayRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::AutocreateArrayResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::AutocreateArrayResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::AutocreateArrayResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::AutocreateArrayResponse* Arena::CreateMaybeMessage< ::grpc_cli::AutocreateArrayResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::AutocreateArrayResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::DeleteArrayRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::DeleteArrayRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::DeleteArrayRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::DeleteArrayRequest* Arena::CreateMaybeMessage< ::grpc_cli::DeleteArrayRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::DeleteArrayRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::DeleteArrayResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::DeleteArrayResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::DeleteArrayResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::DeleteArrayResponse* Arena::CreateMaybeMessage< ::grpc_cli::DeleteArrayResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::DeleteArrayResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::MountArrayRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::MountArrayRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::MountArrayRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::MountArrayRequest* Arena::CreateMaybeMessage< ::grpc_cli::MountArrayRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::MountArrayRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::MountArrayResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::MountArrayResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::MountArrayResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::MountArrayResponse* Arena::CreateMaybeMessage< ::grpc_cli::MountArrayResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::MountArrayResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::UnmountArrayRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::UnmountArrayRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::UnmountArrayRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::UnmountArrayRequest* Arena::CreateMaybeMessage< ::grpc_cli::UnmountArrayRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::UnmountArrayRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::UnmountArrayResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::UnmountArrayResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::UnmountArrayResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::UnmountArrayResponse* Arena::CreateMaybeMessage< ::grpc_cli::UnmountArrayResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::UnmountArrayResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::Array* Arena::CreateMaybeMessage< ::grpc_cli::Array >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::Array >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListArrayRequest* Arena::CreateMaybeMessage< ::grpc_cli::ListArrayRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListArrayRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListArrayResponse_Result_ArrayList* Arena::CreateMaybeMessage< ::grpc_cli::ListArrayResponse_Result_ArrayList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListArrayResponse_Result_ArrayList >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListArrayResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::ListArrayResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListArrayResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListArrayResponse* Arena::CreateMaybeMessage< ::grpc_cli::ListArrayResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListArrayResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ArrayInfoRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::ArrayInfoRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ArrayInfoRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ArrayInfoRequest* Arena::CreateMaybeMessage< ::grpc_cli::ArrayInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ArrayInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ArrayInfoResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::ArrayInfoResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ArrayInfoResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ArrayInfoResponse* Arena::CreateMaybeMessage< ::grpc_cli::ArrayInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ArrayInfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::RebuildArrayRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::RebuildArrayRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::RebuildArrayRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::RebuildArrayRequest* Arena::CreateMaybeMessage< ::grpc_cli::RebuildArrayRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::RebuildArrayRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::RebuildArrayResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::RebuildArrayResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::RebuildArrayResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::RebuildArrayResponse* Arena::CreateMaybeMessage< ::grpc_cli::RebuildArrayResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::RebuildArrayResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListNodeRequest* Arena::CreateMaybeMessage< ::grpc_cli::ListNodeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListNodeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListNodeResponse_Result_Node* Arena::CreateMaybeMessage< ::grpc_cli::ListNodeResponse_Result_Node >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListNodeResponse_Result_Node >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListNodeResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::ListNodeResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListNodeResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListNodeResponse* Arena::CreateMaybeMessage< ::grpc_cli::ListNodeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListNodeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListHaVolumeRequest* Arena::CreateMaybeMessage< ::grpc_cli::ListHaVolumeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListHaVolumeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListHaVolumeResponse_Result_Volume* Arena::CreateMaybeMessage< ::grpc_cli::ListHaVolumeResponse_Result_Volume >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListHaVolumeResponse_Result_Volume >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListHaVolumeResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::ListHaVolumeResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListHaVolumeResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListHaVolumeResponse* Arena::CreateMaybeMessage< ::grpc_cli::ListHaVolumeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListHaVolumeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListHaReplicationRequest* Arena::CreateMaybeMessage< ::grpc_cli::ListHaReplicationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListHaReplicationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListHaReplicationResponse_Result_Replication* Arena::CreateMaybeMessage< ::grpc_cli::ListHaReplicationResponse_Result_Replication >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListHaReplicationResponse_Result_Replication >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListHaReplicationResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::ListHaReplicationResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListHaReplicationResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListHaReplicationResponse* Arena::CreateMaybeMessage< ::grpc_cli::ListHaReplicationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListHaReplicationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::StartHaReplicationRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::StartHaReplicationRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::StartHaReplicationRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::StartHaReplicationRequest* Arena::CreateMaybeMessage< ::grpc_cli::StartHaReplicationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::StartHaReplicationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::StartHaReplicationResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::StartHaReplicationResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::StartHaReplicationResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::StartHaReplicationResponse* Arena::CreateMaybeMessage< ::grpc_cli::StartHaReplicationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::StartHaReplicationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SetLogLevelRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::SetLogLevelRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SetLogLevelRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SetLogLevelRequest* Arena::CreateMaybeMessage< ::grpc_cli::SetLogLevelRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SetLogLevelRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SetLogLevelResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::SetLogLevelResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SetLogLevelResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SetLogLevelResponse* Arena::CreateMaybeMessage< ::grpc_cli::SetLogLevelResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SetLogLevelResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SetLogPreferenceRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::SetLogPreferenceRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SetLogPreferenceRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SetLogPreferenceRequest* Arena::CreateMaybeMessage< ::grpc_cli::SetLogPreferenceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SetLogPreferenceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SetLogPreferenceResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::SetLogPreferenceResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SetLogPreferenceResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SetLogPreferenceResponse* Arena::CreateMaybeMessage< ::grpc_cli::SetLogPreferenceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SetLogPreferenceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::LoggerInfoRequest* Arena::CreateMaybeMessage< ::grpc_cli::LoggerInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::LoggerInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::LoggerInfoResponse_Result_LoggerInfo* Arena::CreateMaybeMessage< ::grpc_cli::LoggerInfoResponse_Result_LoggerInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::LoggerInfoResponse_Result_LoggerInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::LoggerInfoResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::LoggerInfoResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::LoggerInfoResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::LoggerInfoResponse* Arena::CreateMaybeMessage< ::grpc_cli::LoggerInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::LoggerInfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::GetLogLevelRequest* Arena::CreateMaybeMessage< ::grpc_cli::GetLogLevelRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::GetLogLevelRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::GetLogLevelResponse_Result_LogLevel* Arena::CreateMaybeMessage< ::grpc_cli::GetLogLevelResponse_Result_LogLevel >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::GetLogLevelResponse_Result_LogLevel >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::GetLogLevelResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::GetLogLevelResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::GetLogLevelResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::GetLogLevelResponse* Arena::CreateMaybeMessage< ::grpc_cli::GetLogLevelResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::GetLogLevelResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ApplyLogFilterRequest* Arena::CreateMaybeMessage< ::grpc_cli::ApplyLogFilterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ApplyLogFilterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ApplyLogFilterResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::ApplyLogFilterResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ApplyLogFilterResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ApplyLogFilterResponse* Arena::CreateMaybeMessage< ::grpc_cli::ApplyLogFilterResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ApplyLogFilterResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::CreateDeviceRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::CreateDeviceRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::CreateDeviceRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::CreateDeviceRequest* Arena::CreateMaybeMessage< ::grpc_cli::CreateDeviceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::CreateDeviceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::CreateDeviceResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::CreateDeviceResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::CreateDeviceResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::CreateDeviceResponse* Arena::CreateMaybeMessage< ::grpc_cli::CreateDeviceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::CreateDeviceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ScanDeviceRequest* Arena::CreateMaybeMessage< ::grpc_cli::ScanDeviceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ScanDeviceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ScanDeviceResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::ScanDeviceResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ScanDeviceResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ScanDeviceResponse* Arena::CreateMaybeMessage< ::grpc_cli::ScanDeviceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ScanDeviceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::Device* Arena::CreateMaybeMessage< ::grpc_cli::Device >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::Device >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListDeviceRequest* Arena::CreateMaybeMessage< ::grpc_cli::ListDeviceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListDeviceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListDeviceResponse_Result_DeviceList* Arena::CreateMaybeMessage< ::grpc_cli::ListDeviceResponse_Result_DeviceList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListDeviceResponse_Result_DeviceList >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListDeviceResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::ListDeviceResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListDeviceResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListDeviceResponse* Arena::CreateMaybeMessage< ::grpc_cli::ListDeviceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListDeviceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SmartLog* Arena::CreateMaybeMessage< ::grpc_cli::SmartLog >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SmartLog >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::GetSmartLogRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::GetSmartLogRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::GetSmartLogRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::GetSmartLogRequest* Arena::CreateMaybeMessage< ::grpc_cli::GetSmartLogRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::GetSmartLogRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::GetSmartLogResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::GetSmartLogResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::GetSmartLogResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::GetSmartLogResponse* Arena::CreateMaybeMessage< ::grpc_cli::GetSmartLogResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::GetSmartLogResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::CreateSubsystemRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::CreateSubsystemRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::CreateSubsystemRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::CreateSubsystemRequest* Arena::CreateMaybeMessage< ::grpc_cli::CreateSubsystemRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::CreateSubsystemRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::CreateSubsystemResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::CreateSubsystemResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::CreateSubsystemResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::CreateSubsystemResponse* Arena::CreateMaybeMessage< ::grpc_cli::CreateSubsystemResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::CreateSubsystemResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::DeleteSubsystemRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::DeleteSubsystemRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::DeleteSubsystemRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::DeleteSubsystemRequest* Arena::CreateMaybeMessage< ::grpc_cli::DeleteSubsystemRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::DeleteSubsystemRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::DeleteSubsystemResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::DeleteSubsystemResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::DeleteSubsystemResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::DeleteSubsystemResponse* Arena::CreateMaybeMessage< ::grpc_cli::DeleteSubsystemResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::DeleteSubsystemResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::AddListenerRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::AddListenerRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::AddListenerRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::AddListenerRequest* Arena::CreateMaybeMessage< ::grpc_cli::AddListenerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::AddListenerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::AddListenerResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::AddListenerResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::AddListenerResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::AddListenerResponse* Arena::CreateMaybeMessage< ::grpc_cli::AddListenerResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::AddListenerResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::RemoveListenerRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::RemoveListenerRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::RemoveListenerRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::RemoveListenerRequest* Arena::CreateMaybeMessage< ::grpc_cli::RemoveListenerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::RemoveListenerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::RemoveListenerResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::RemoveListenerResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::RemoveListenerResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::RemoveListenerResponse* Arena::CreateMaybeMessage< ::grpc_cli::RemoveListenerResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::RemoveListenerResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::Listener_Address* Arena::CreateMaybeMessage< ::grpc_cli::Listener_Address >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::Listener_Address >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::Listener* Arena::CreateMaybeMessage< ::grpc_cli::Listener >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::Listener >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListListenerRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::ListListenerRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListListenerRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListListenerRequest* Arena::CreateMaybeMessage< ::grpc_cli::ListListenerRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListListenerRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListListenerResponse_Result_ListenerList* Arena::CreateMaybeMessage< ::grpc_cli::ListListenerResponse_Result_ListenerList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListListenerResponse_Result_ListenerList >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListListenerResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::ListListenerResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListListenerResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListListenerResponse* Arena::CreateMaybeMessage< ::grpc_cli::ListListenerResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListListenerResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::Subsystem_AddressInfo* Arena::CreateMaybeMessage< ::grpc_cli::Subsystem_AddressInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::Subsystem_AddressInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::Subsystem_Host* Arena::CreateMaybeMessage< ::grpc_cli::Subsystem_Host >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::Subsystem_Host >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::Subsystem_Namespace* Arena::CreateMaybeMessage< ::grpc_cli::Subsystem_Namespace >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::Subsystem_Namespace >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::Subsystem* Arena::CreateMaybeMessage< ::grpc_cli::Subsystem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::Subsystem >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListSubsystemRequest* Arena::CreateMaybeMessage< ::grpc_cli::ListSubsystemRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListSubsystemRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListSubsystemResponse_Result_SubsystemList* Arena::CreateMaybeMessage< ::grpc_cli::ListSubsystemResponse_Result_SubsystemList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListSubsystemResponse_Result_SubsystemList >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListSubsystemResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::ListSubsystemResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListSubsystemResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListSubsystemResponse* Arena::CreateMaybeMessage< ::grpc_cli::ListSubsystemResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListSubsystemResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SubsystemInfoRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::SubsystemInfoRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SubsystemInfoRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SubsystemInfoRequest* Arena::CreateMaybeMessage< ::grpc_cli::SubsystemInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SubsystemInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SubsystemInfoResponse_Result_SubsystemList* Arena::CreateMaybeMessage< ::grpc_cli::SubsystemInfoResponse_Result_SubsystemList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SubsystemInfoResponse_Result_SubsystemList >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SubsystemInfoResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::SubsystemInfoResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SubsystemInfoResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SubsystemInfoResponse* Arena::CreateMaybeMessage< ::grpc_cli::SubsystemInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SubsystemInfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::CreateTransportRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::CreateTransportRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::CreateTransportRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::CreateTransportRequest* Arena::CreateMaybeMessage< ::grpc_cli::CreateTransportRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::CreateTransportRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::CreateTransportResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::CreateTransportResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::CreateTransportResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::CreateTransportResponse* Arena::CreateMaybeMessage< ::grpc_cli::CreateTransportResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::CreateTransportResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListTransportRequest* Arena::CreateMaybeMessage< ::grpc_cli::ListTransportRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListTransportRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::Transport* Arena::CreateMaybeMessage< ::grpc_cli::Transport >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::Transport >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListTransportResponse_Result_TransportList* Arena::CreateMaybeMessage< ::grpc_cli::ListTransportResponse_Result_TransportList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListTransportResponse_Result_TransportList >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListTransportResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::ListTransportResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListTransportResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListTransportResponse* Arena::CreateMaybeMessage< ::grpc_cli::ListTransportResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListTransportResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::CreateVolumeRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::CreateVolumeRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::CreateVolumeRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::CreateVolumeRequest* Arena::CreateMaybeMessage< ::grpc_cli::CreateVolumeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::CreateVolumeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::CreateVolumeResponse_Result_CreateVolumeData* Arena::CreateMaybeMessage< ::grpc_cli::CreateVolumeResponse_Result_CreateVolumeData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::CreateVolumeResponse_Result_CreateVolumeData >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::CreateVolumeResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::CreateVolumeResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::CreateVolumeResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::CreateVolumeResponse* Arena::CreateMaybeMessage< ::grpc_cli::CreateVolumeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::CreateVolumeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::DeleteVolumeRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::DeleteVolumeRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::DeleteVolumeRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::DeleteVolumeRequest* Arena::CreateMaybeMessage< ::grpc_cli::DeleteVolumeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::DeleteVolumeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::DeleteVolumeResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::DeleteVolumeResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::DeleteVolumeResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::DeleteVolumeResponse* Arena::CreateMaybeMessage< ::grpc_cli::DeleteVolumeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::DeleteVolumeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::UnmountVolumeRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::UnmountVolumeRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::UnmountVolumeRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::UnmountVolumeRequest* Arena::CreateMaybeMessage< ::grpc_cli::UnmountVolumeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::UnmountVolumeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::UnmountVolumeResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::UnmountVolumeResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::UnmountVolumeResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::UnmountVolumeResponse* Arena::CreateMaybeMessage< ::grpc_cli::UnmountVolumeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::UnmountVolumeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::MountVolumeRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::MountVolumeRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::MountVolumeRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::MountVolumeRequest* Arena::CreateMaybeMessage< ::grpc_cli::MountVolumeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::MountVolumeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::MountVolumeResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::MountVolumeResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::MountVolumeResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::MountVolumeResponse* Arena::CreateMaybeMessage< ::grpc_cli::MountVolumeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::MountVolumeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SetVolumePropertyRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::SetVolumePropertyRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SetVolumePropertyRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SetVolumePropertyRequest* Arena::CreateMaybeMessage< ::grpc_cli::SetVolumePropertyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SetVolumePropertyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SetVolumePropertyResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::SetVolumePropertyResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SetVolumePropertyResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SetVolumePropertyResponse* Arena::CreateMaybeMessage< ::grpc_cli::SetVolumePropertyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SetVolumePropertyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::Volume* Arena::CreateMaybeMessage< ::grpc_cli::Volume >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::Volume >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListVolumeRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::ListVolumeRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListVolumeRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListVolumeRequest* Arena::CreateMaybeMessage< ::grpc_cli::ListVolumeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListVolumeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListVolumeResponse_Result_VolumeList* Arena::CreateMaybeMessage< ::grpc_cli::ListVolumeResponse_Result_VolumeList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListVolumeResponse_Result_VolumeList >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListVolumeResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::ListVolumeResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListVolumeResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListVolumeResponse* Arena::CreateMaybeMessage< ::grpc_cli::ListVolumeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListVolumeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::QosVolumeNameParam* Arena::CreateMaybeMessage< ::grpc_cli::QosVolumeNameParam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::QosVolumeNameParam >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::QosCreateVolumePolicyRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::QosCreateVolumePolicyRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::QosCreateVolumePolicyRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::QosCreateVolumePolicyRequest* Arena::CreateMaybeMessage< ::grpc_cli::QosCreateVolumePolicyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::QosCreateVolumePolicyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::QosCreateVolumePolicyResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::QosCreateVolumePolicyResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::QosCreateVolumePolicyResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::QosCreateVolumePolicyResponse* Arena::CreateMaybeMessage< ::grpc_cli::QosCreateVolumePolicyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::QosCreateVolumePolicyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::QosResetVolumePolicyRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::QosResetVolumePolicyRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::QosResetVolumePolicyRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::QosResetVolumePolicyRequest* Arena::CreateMaybeMessage< ::grpc_cli::QosResetVolumePolicyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::QosResetVolumePolicyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::VolumeInfoRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::VolumeInfoRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::VolumeInfoRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::VolumeInfoRequest* Arena::CreateMaybeMessage< ::grpc_cli::VolumeInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::VolumeInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::QosResetVolumePolicyResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::QosResetVolumePolicyResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::QosResetVolumePolicyResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::QosResetVolumePolicyResponse* Arena::CreateMaybeMessage< ::grpc_cli::QosResetVolumePolicyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::QosResetVolumePolicyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::VolumeInfoResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::VolumeInfoResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::VolumeInfoResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::VolumeInfoResponse* Arena::CreateMaybeMessage< ::grpc_cli::VolumeInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::VolumeInfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::VolumeRenameRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::VolumeRenameRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::VolumeRenameRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::VolumeRenameRequest* Arena::CreateMaybeMessage< ::grpc_cli::VolumeRenameRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::VolumeRenameRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::VolumeRenameResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::VolumeRenameResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::VolumeRenameResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::VolumeRenameResponse* Arena::CreateMaybeMessage< ::grpc_cli::VolumeRenameResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::VolumeRenameResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListWBTRequest* Arena::CreateMaybeMessage< ::grpc_cli::ListWBTRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListWBTRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::WBTTest* Arena::CreateMaybeMessage< ::grpc_cli::WBTTest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::WBTTest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListWBTResponse_Result_Tests* Arena::CreateMaybeMessage< ::grpc_cli::ListWBTResponse_Result_Tests >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListWBTResponse_Result_Tests >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListWBTResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::ListWBTResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListWBTResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListWBTResponse* Arena::CreateMaybeMessage< ::grpc_cli::ListWBTResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListWBTResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListQOSPolicyRequest_Param_Volume* Arena::CreateMaybeMessage< ::grpc_cli::ListQOSPolicyRequest_Param_Volume >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListQOSPolicyRequest_Param_Volume >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListQOSPolicyRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::ListQOSPolicyRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListQOSPolicyRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListQOSPolicyRequest* Arena::CreateMaybeMessage< ::grpc_cli::ListQOSPolicyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListQOSPolicyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::QOSResult_Arrays* Arena::CreateMaybeMessage< ::grpc_cli::QOSResult_Arrays >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::QOSResult_Arrays >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::QOSResult_RebuildPolicy* Arena::CreateMaybeMessage< ::grpc_cli::QOSResult_RebuildPolicy >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::QOSResult_RebuildPolicy >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::QOSResult_VolumePolicies* Arena::CreateMaybeMessage< ::grpc_cli::QOSResult_VolumePolicies >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::QOSResult_VolumePolicies >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::QOSResult* Arena::CreateMaybeMessage< ::grpc_cli::QOSResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::QOSResult >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListQOSPolicyResponse_Result_ListQOSResult* Arena::CreateMaybeMessage< ::grpc_cli::ListQOSPolicyResponse_Result_ListQOSResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListQOSPolicyResponse_Result_ListQOSResult >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListQOSPolicyResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::ListQOSPolicyResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListQOSPolicyResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListQOSPolicyResponse* Arena::CreateMaybeMessage< ::grpc_cli::ListQOSPolicyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListQOSPolicyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::WBTRequest_Param_ArgvEntry_DoNotUse* Arena::CreateMaybeMessage< ::grpc_cli::WBTRequest_Param_ArgvEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::WBTRequest_Param_ArgvEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::WBTRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::WBTRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::WBTRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::WBTRequest* Arena::CreateMaybeMessage< ::grpc_cli::WBTRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::WBTRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::WBTResponse_Result_TestData* Arena::CreateMaybeMessage< ::grpc_cli::WBTResponse_Result_TestData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::WBTResponse_Result_TestData >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::WBTResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::WBTResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::WBTResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::WBTResponse* Arena::CreateMaybeMessage< ::grpc_cli::WBTResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::WBTResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
