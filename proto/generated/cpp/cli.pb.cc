// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cli.proto

#include "cli.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace grpc_cli {
constexpr Status::Status(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : event_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , description_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , cause_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , solution_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , code_(0){}
struct StatusDefaultTypeInternal {
  constexpr StatusDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StatusDefaultTypeInternal() {}
  union {
    Status _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StatusDefaultTypeInternal _Status_default_instance_;
constexpr PosInfo::PosInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : version_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct PosInfoDefaultTypeInternal {
  constexpr PosInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PosInfoDefaultTypeInternal() {}
  union {
    PosInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PosInfoDefaultTypeInternal _PosInfo_default_instance_;
constexpr SystemInfoRequest::SystemInfoRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct SystemInfoRequestDefaultTypeInternal {
  constexpr SystemInfoRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SystemInfoRequestDefaultTypeInternal() {}
  union {
    SystemInfoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SystemInfoRequestDefaultTypeInternal _SystemInfoRequest_default_instance_;
constexpr SystemInfoResponse_Result_Data::SystemInfoResponse_Result_Data(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : version_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct SystemInfoResponse_Result_DataDefaultTypeInternal {
  constexpr SystemInfoResponse_Result_DataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SystemInfoResponse_Result_DataDefaultTypeInternal() {}
  union {
    SystemInfoResponse_Result_Data _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SystemInfoResponse_Result_DataDefaultTypeInternal _SystemInfoResponse_Result_Data_default_instance_;
constexpr SystemInfoResponse_Result::SystemInfoResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr)
  , data_(nullptr){}
struct SystemInfoResponse_ResultDefaultTypeInternal {
  constexpr SystemInfoResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SystemInfoResponse_ResultDefaultTypeInternal() {}
  union {
    SystemInfoResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SystemInfoResponse_ResultDefaultTypeInternal _SystemInfoResponse_Result_default_instance_;
constexpr SystemInfoResponse::SystemInfoResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct SystemInfoResponseDefaultTypeInternal {
  constexpr SystemInfoResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SystemInfoResponseDefaultTypeInternal() {}
  union {
    SystemInfoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SystemInfoResponseDefaultTypeInternal _SystemInfoResponse_default_instance_;
constexpr SystemStopRequest::SystemStopRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct SystemStopRequestDefaultTypeInternal {
  constexpr SystemStopRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SystemStopRequestDefaultTypeInternal() {}
  union {
    SystemStopRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SystemStopRequestDefaultTypeInternal _SystemStopRequest_default_instance_;
constexpr SystemStopResponse_Result::SystemStopResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct SystemStopResponse_ResultDefaultTypeInternal {
  constexpr SystemStopResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SystemStopResponse_ResultDefaultTypeInternal() {}
  union {
    SystemStopResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SystemStopResponse_ResultDefaultTypeInternal _SystemStopResponse_Result_default_instance_;
constexpr SystemStopResponse::SystemStopResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct SystemStopResponseDefaultTypeInternal {
  constexpr SystemStopResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SystemStopResponseDefaultTypeInternal() {}
  union {
    SystemStopResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SystemStopResponseDefaultTypeInternal _SystemStopResponse_default_instance_;
constexpr GetSystemPropertyRequest::GetSystemPropertyRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetSystemPropertyRequestDefaultTypeInternal {
  constexpr GetSystemPropertyRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetSystemPropertyRequestDefaultTypeInternal() {}
  union {
    GetSystemPropertyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetSystemPropertyRequestDefaultTypeInternal _GetSystemPropertyRequest_default_instance_;
constexpr GetSystemPropertyResponse_Result_Data::GetSystemPropertyResponse_Result_Data(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : rebuild_policy_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetSystemPropertyResponse_Result_DataDefaultTypeInternal {
  constexpr GetSystemPropertyResponse_Result_DataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetSystemPropertyResponse_Result_DataDefaultTypeInternal() {}
  union {
    GetSystemPropertyResponse_Result_Data _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetSystemPropertyResponse_Result_DataDefaultTypeInternal _GetSystemPropertyResponse_Result_Data_default_instance_;
constexpr GetSystemPropertyResponse_Result::GetSystemPropertyResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr)
  , data_(nullptr){}
struct GetSystemPropertyResponse_ResultDefaultTypeInternal {
  constexpr GetSystemPropertyResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetSystemPropertyResponse_ResultDefaultTypeInternal() {}
  union {
    GetSystemPropertyResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetSystemPropertyResponse_ResultDefaultTypeInternal _GetSystemPropertyResponse_Result_default_instance_;
constexpr GetSystemPropertyResponse::GetSystemPropertyResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct GetSystemPropertyResponseDefaultTypeInternal {
  constexpr GetSystemPropertyResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetSystemPropertyResponseDefaultTypeInternal() {}
  union {
    GetSystemPropertyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetSystemPropertyResponseDefaultTypeInternal _GetSystemPropertyResponse_default_instance_;
constexpr SetSystemPropertyRequest_Param::SetSystemPropertyRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : level_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct SetSystemPropertyRequest_ParamDefaultTypeInternal {
  constexpr SetSystemPropertyRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetSystemPropertyRequest_ParamDefaultTypeInternal() {}
  union {
    SetSystemPropertyRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetSystemPropertyRequest_ParamDefaultTypeInternal _SetSystemPropertyRequest_Param_default_instance_;
constexpr SetSystemPropertyRequest::SetSystemPropertyRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct SetSystemPropertyRequestDefaultTypeInternal {
  constexpr SetSystemPropertyRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetSystemPropertyRequestDefaultTypeInternal() {}
  union {
    SetSystemPropertyRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetSystemPropertyRequestDefaultTypeInternal _SetSystemPropertyRequest_default_instance_;
constexpr SetSystemPropertyResponse_Result::SetSystemPropertyResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct SetSystemPropertyResponse_ResultDefaultTypeInternal {
  constexpr SetSystemPropertyResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetSystemPropertyResponse_ResultDefaultTypeInternal() {}
  union {
    SetSystemPropertyResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetSystemPropertyResponse_ResultDefaultTypeInternal _SetSystemPropertyResponse_Result_default_instance_;
constexpr SetSystemPropertyResponse::SetSystemPropertyResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct SetSystemPropertyResponseDefaultTypeInternal {
  constexpr SetSystemPropertyResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetSystemPropertyResponseDefaultTypeInternal() {}
  union {
    SetSystemPropertyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetSystemPropertyResponseDefaultTypeInternal _SetSystemPropertyResponse_default_instance_;
constexpr StartTelemetryRequest::StartTelemetryRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct StartTelemetryRequestDefaultTypeInternal {
  constexpr StartTelemetryRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StartTelemetryRequestDefaultTypeInternal() {}
  union {
    StartTelemetryRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StartTelemetryRequestDefaultTypeInternal _StartTelemetryRequest_default_instance_;
constexpr StartTelemetryResponse_Result::StartTelemetryResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct StartTelemetryResponse_ResultDefaultTypeInternal {
  constexpr StartTelemetryResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StartTelemetryResponse_ResultDefaultTypeInternal() {}
  union {
    StartTelemetryResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StartTelemetryResponse_ResultDefaultTypeInternal _StartTelemetryResponse_Result_default_instance_;
constexpr StartTelemetryResponse::StartTelemetryResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct StartTelemetryResponseDefaultTypeInternal {
  constexpr StartTelemetryResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StartTelemetryResponseDefaultTypeInternal() {}
  union {
    StartTelemetryResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StartTelemetryResponseDefaultTypeInternal _StartTelemetryResponse_default_instance_;
constexpr StopTelemetryRequest::StopTelemetryRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct StopTelemetryRequestDefaultTypeInternal {
  constexpr StopTelemetryRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StopTelemetryRequestDefaultTypeInternal() {}
  union {
    StopTelemetryRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StopTelemetryRequestDefaultTypeInternal _StopTelemetryRequest_default_instance_;
constexpr StopTelemetryResponse_Result::StopTelemetryResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct StopTelemetryResponse_ResultDefaultTypeInternal {
  constexpr StopTelemetryResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StopTelemetryResponse_ResultDefaultTypeInternal() {}
  union {
    StopTelemetryResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StopTelemetryResponse_ResultDefaultTypeInternal _StopTelemetryResponse_Result_default_instance_;
constexpr StopTelemetryResponse::StopTelemetryResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct StopTelemetryResponseDefaultTypeInternal {
  constexpr StopTelemetryResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StopTelemetryResponseDefaultTypeInternal() {}
  union {
    StopTelemetryResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StopTelemetryResponseDefaultTypeInternal _StopTelemetryResponse_default_instance_;
constexpr ResetEventWrrRequest::ResetEventWrrRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ResetEventWrrRequestDefaultTypeInternal {
  constexpr ResetEventWrrRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResetEventWrrRequestDefaultTypeInternal() {}
  union {
    ResetEventWrrRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResetEventWrrRequestDefaultTypeInternal _ResetEventWrrRequest_default_instance_;
constexpr ResetEventWrrResponse_Result::ResetEventWrrResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct ResetEventWrrResponse_ResultDefaultTypeInternal {
  constexpr ResetEventWrrResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResetEventWrrResponse_ResultDefaultTypeInternal() {}
  union {
    ResetEventWrrResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResetEventWrrResponse_ResultDefaultTypeInternal _ResetEventWrrResponse_Result_default_instance_;
constexpr ResetEventWrrResponse::ResetEventWrrResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct ResetEventWrrResponseDefaultTypeInternal {
  constexpr ResetEventWrrResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResetEventWrrResponseDefaultTypeInternal() {}
  union {
    ResetEventWrrResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResetEventWrrResponseDefaultTypeInternal _ResetEventWrrResponse_default_instance_;
constexpr ResetMbrRequest::ResetMbrRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ResetMbrRequestDefaultTypeInternal {
  constexpr ResetMbrRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResetMbrRequestDefaultTypeInternal() {}
  union {
    ResetMbrRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResetMbrRequestDefaultTypeInternal _ResetMbrRequest_default_instance_;
constexpr ResetMbrResponse_Result::ResetMbrResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct ResetMbrResponse_ResultDefaultTypeInternal {
  constexpr ResetMbrResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResetMbrResponse_ResultDefaultTypeInternal() {}
  union {
    ResetMbrResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResetMbrResponse_ResultDefaultTypeInternal _ResetMbrResponse_Result_default_instance_;
constexpr ResetMbrResponse::ResetMbrResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct ResetMbrResponseDefaultTypeInternal {
  constexpr ResetMbrResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResetMbrResponseDefaultTypeInternal() {}
  union {
    ResetMbrResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResetMbrResponseDefaultTypeInternal _ResetMbrResponse_default_instance_;
constexpr StopRebuildingRequest_Param::StopRebuildingRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct StopRebuildingRequest_ParamDefaultTypeInternal {
  constexpr StopRebuildingRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StopRebuildingRequest_ParamDefaultTypeInternal() {}
  union {
    StopRebuildingRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StopRebuildingRequest_ParamDefaultTypeInternal _StopRebuildingRequest_Param_default_instance_;
constexpr StopRebuildingRequest::StopRebuildingRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct StopRebuildingRequestDefaultTypeInternal {
  constexpr StopRebuildingRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StopRebuildingRequestDefaultTypeInternal() {}
  union {
    StopRebuildingRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StopRebuildingRequestDefaultTypeInternal _StopRebuildingRequest_default_instance_;
constexpr StopRebuildingResponse_Result::StopRebuildingResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct StopRebuildingResponse_ResultDefaultTypeInternal {
  constexpr StopRebuildingResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StopRebuildingResponse_ResultDefaultTypeInternal() {}
  union {
    StopRebuildingResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StopRebuildingResponse_ResultDefaultTypeInternal _StopRebuildingResponse_Result_default_instance_;
constexpr StopRebuildingResponse::StopRebuildingResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct StopRebuildingResponseDefaultTypeInternal {
  constexpr StopRebuildingResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~StopRebuildingResponseDefaultTypeInternal() {}
  union {
    StopRebuildingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT StopRebuildingResponseDefaultTypeInternal _StopRebuildingResponse_default_instance_;
constexpr UpdateEventWrrRequest_Param::UpdateEventWrrRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , weight_(0){}
struct UpdateEventWrrRequest_ParamDefaultTypeInternal {
  constexpr UpdateEventWrrRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateEventWrrRequest_ParamDefaultTypeInternal() {}
  union {
    UpdateEventWrrRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateEventWrrRequest_ParamDefaultTypeInternal _UpdateEventWrrRequest_Param_default_instance_;
constexpr UpdateEventWrrRequest::UpdateEventWrrRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct UpdateEventWrrRequestDefaultTypeInternal {
  constexpr UpdateEventWrrRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateEventWrrRequestDefaultTypeInternal() {}
  union {
    UpdateEventWrrRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateEventWrrRequestDefaultTypeInternal _UpdateEventWrrRequest_default_instance_;
constexpr UpdateEventWrrResponse_Result::UpdateEventWrrResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct UpdateEventWrrResponse_ResultDefaultTypeInternal {
  constexpr UpdateEventWrrResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateEventWrrResponse_ResultDefaultTypeInternal() {}
  union {
    UpdateEventWrrResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateEventWrrResponse_ResultDefaultTypeInternal _UpdateEventWrrResponse_Result_default_instance_;
constexpr UpdateEventWrrResponse::UpdateEventWrrResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct UpdateEventWrrResponseDefaultTypeInternal {
  constexpr UpdateEventWrrResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateEventWrrResponseDefaultTypeInternal() {}
  union {
    UpdateEventWrrResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateEventWrrResponseDefaultTypeInternal _UpdateEventWrrResponse_default_instance_;
constexpr AddSpareRequest_SpareDeviceName::AddSpareRequest_SpareDeviceName(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : devicename_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct AddSpareRequest_SpareDeviceNameDefaultTypeInternal {
  constexpr AddSpareRequest_SpareDeviceNameDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AddSpareRequest_SpareDeviceNameDefaultTypeInternal() {}
  union {
    AddSpareRequest_SpareDeviceName _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AddSpareRequest_SpareDeviceNameDefaultTypeInternal _AddSpareRequest_SpareDeviceName_default_instance_;
constexpr AddSpareRequest_Param::AddSpareRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : spare_()
  , array_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct AddSpareRequest_ParamDefaultTypeInternal {
  constexpr AddSpareRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AddSpareRequest_ParamDefaultTypeInternal() {}
  union {
    AddSpareRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AddSpareRequest_ParamDefaultTypeInternal _AddSpareRequest_Param_default_instance_;
constexpr AddSpareRequest::AddSpareRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct AddSpareRequestDefaultTypeInternal {
  constexpr AddSpareRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AddSpareRequestDefaultTypeInternal() {}
  union {
    AddSpareRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AddSpareRequestDefaultTypeInternal _AddSpareRequest_default_instance_;
constexpr AddSpareResponse_Result::AddSpareResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct AddSpareResponse_ResultDefaultTypeInternal {
  constexpr AddSpareResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AddSpareResponse_ResultDefaultTypeInternal() {}
  union {
    AddSpareResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AddSpareResponse_ResultDefaultTypeInternal _AddSpareResponse_Result_default_instance_;
constexpr AddSpareResponse::AddSpareResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct AddSpareResponseDefaultTypeInternal {
  constexpr AddSpareResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AddSpareResponseDefaultTypeInternal() {}
  union {
    AddSpareResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AddSpareResponseDefaultTypeInternal _AddSpareResponse_default_instance_;
constexpr RemoveSpareRequest_SpareDeviceName::RemoveSpareRequest_SpareDeviceName(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : devicename_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct RemoveSpareRequest_SpareDeviceNameDefaultTypeInternal {
  constexpr RemoveSpareRequest_SpareDeviceNameDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveSpareRequest_SpareDeviceNameDefaultTypeInternal() {}
  union {
    RemoveSpareRequest_SpareDeviceName _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveSpareRequest_SpareDeviceNameDefaultTypeInternal _RemoveSpareRequest_SpareDeviceName_default_instance_;
constexpr RemoveSpareRequest_Param::RemoveSpareRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : spare_()
  , array_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct RemoveSpareRequest_ParamDefaultTypeInternal {
  constexpr RemoveSpareRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveSpareRequest_ParamDefaultTypeInternal() {}
  union {
    RemoveSpareRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveSpareRequest_ParamDefaultTypeInternal _RemoveSpareRequest_Param_default_instance_;
constexpr RemoveSpareRequest::RemoveSpareRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct RemoveSpareRequestDefaultTypeInternal {
  constexpr RemoveSpareRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveSpareRequestDefaultTypeInternal() {}
  union {
    RemoveSpareRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveSpareRequestDefaultTypeInternal _RemoveSpareRequest_default_instance_;
constexpr RemoveSpareResponse_Result::RemoveSpareResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct RemoveSpareResponse_ResultDefaultTypeInternal {
  constexpr RemoveSpareResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveSpareResponse_ResultDefaultTypeInternal() {}
  union {
    RemoveSpareResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveSpareResponse_ResultDefaultTypeInternal _RemoveSpareResponse_Result_default_instance_;
constexpr RemoveSpareResponse::RemoveSpareResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct RemoveSpareResponseDefaultTypeInternal {
  constexpr RemoveSpareResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RemoveSpareResponseDefaultTypeInternal() {}
  union {
    RemoveSpareResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RemoveSpareResponseDefaultTypeInternal _RemoveSpareResponse_default_instance_;
constexpr DeviceNameList::DeviceNameList(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : devicename_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeviceNameListDefaultTypeInternal {
  constexpr DeviceNameListDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeviceNameListDefaultTypeInternal() {}
  union {
    DeviceNameList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeviceNameListDefaultTypeInternal _DeviceNameList_default_instance_;
constexpr AutocreateArrayRequest_Param::AutocreateArrayRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : buffer_()
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , raidtype_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , numdata_(0)
  , numspare_(0){}
struct AutocreateArrayRequest_ParamDefaultTypeInternal {
  constexpr AutocreateArrayRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AutocreateArrayRequest_ParamDefaultTypeInternal() {}
  union {
    AutocreateArrayRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AutocreateArrayRequest_ParamDefaultTypeInternal _AutocreateArrayRequest_Param_default_instance_;
constexpr AutocreateArrayRequest::AutocreateArrayRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct AutocreateArrayRequestDefaultTypeInternal {
  constexpr AutocreateArrayRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AutocreateArrayRequestDefaultTypeInternal() {}
  union {
    AutocreateArrayRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AutocreateArrayRequestDefaultTypeInternal _AutocreateArrayRequest_default_instance_;
constexpr AutocreateArrayResponse_Result::AutocreateArrayResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct AutocreateArrayResponse_ResultDefaultTypeInternal {
  constexpr AutocreateArrayResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AutocreateArrayResponse_ResultDefaultTypeInternal() {}
  union {
    AutocreateArrayResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AutocreateArrayResponse_ResultDefaultTypeInternal _AutocreateArrayResponse_Result_default_instance_;
constexpr AutocreateArrayResponse::AutocreateArrayResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct AutocreateArrayResponseDefaultTypeInternal {
  constexpr AutocreateArrayResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AutocreateArrayResponseDefaultTypeInternal() {}
  union {
    AutocreateArrayResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AutocreateArrayResponseDefaultTypeInternal _AutocreateArrayResponse_default_instance_;
constexpr CreateArrayRequest_Param::CreateArrayRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : buffer_()
  , data_()
  , spare_()
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , raidtype_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CreateArrayRequest_ParamDefaultTypeInternal {
  constexpr CreateArrayRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateArrayRequest_ParamDefaultTypeInternal() {}
  union {
    CreateArrayRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateArrayRequest_ParamDefaultTypeInternal _CreateArrayRequest_Param_default_instance_;
constexpr CreateArrayRequest::CreateArrayRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct CreateArrayRequestDefaultTypeInternal {
  constexpr CreateArrayRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateArrayRequestDefaultTypeInternal() {}
  union {
    CreateArrayRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateArrayRequestDefaultTypeInternal _CreateArrayRequest_default_instance_;
constexpr CreateArrayResponse_Result::CreateArrayResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct CreateArrayResponse_ResultDefaultTypeInternal {
  constexpr CreateArrayResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateArrayResponse_ResultDefaultTypeInternal() {}
  union {
    CreateArrayResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateArrayResponse_ResultDefaultTypeInternal _CreateArrayResponse_Result_default_instance_;
constexpr CreateArrayResponse::CreateArrayResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct CreateArrayResponseDefaultTypeInternal {
  constexpr CreateArrayResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreateArrayResponseDefaultTypeInternal() {}
  union {
    CreateArrayResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreateArrayResponseDefaultTypeInternal _CreateArrayResponse_default_instance_;
constexpr DeleteArrayRequest_Param::DeleteArrayRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeleteArrayRequest_ParamDefaultTypeInternal {
  constexpr DeleteArrayRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteArrayRequest_ParamDefaultTypeInternal() {}
  union {
    DeleteArrayRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteArrayRequest_ParamDefaultTypeInternal _DeleteArrayRequest_Param_default_instance_;
constexpr DeleteArrayRequest::DeleteArrayRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct DeleteArrayRequestDefaultTypeInternal {
  constexpr DeleteArrayRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteArrayRequestDefaultTypeInternal() {}
  union {
    DeleteArrayRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteArrayRequestDefaultTypeInternal _DeleteArrayRequest_default_instance_;
constexpr DeleteArrayResponse_Result::DeleteArrayResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct DeleteArrayResponse_ResultDefaultTypeInternal {
  constexpr DeleteArrayResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteArrayResponse_ResultDefaultTypeInternal() {}
  union {
    DeleteArrayResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteArrayResponse_ResultDefaultTypeInternal _DeleteArrayResponse_Result_default_instance_;
constexpr DeleteArrayResponse::DeleteArrayResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct DeleteArrayResponseDefaultTypeInternal {
  constexpr DeleteArrayResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeleteArrayResponseDefaultTypeInternal() {}
  union {
    DeleteArrayResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeleteArrayResponseDefaultTypeInternal _DeleteArrayResponse_default_instance_;
constexpr Device::Device(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , type_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , class__(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , mn_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , numa_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , serial_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct DeviceDefaultTypeInternal {
  constexpr DeviceDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeviceDefaultTypeInternal() {}
  union {
    Device _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeviceDefaultTypeInternal _Device_default_instance_;
constexpr Array::Array(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : devicelist_()
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , state_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , situation_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , createdatetime_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , updatedatetime_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rebuildingprogress_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , gcmode_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , metaraid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , dataraid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , index_(0)
  , unique_id_(0)
  , capacity_(PROTOBUF_ULONGLONG(0))
  , used_(PROTOBUF_ULONGLONG(0))
  , writethroughenabled_(false){}
struct ArrayDefaultTypeInternal {
  constexpr ArrayDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ArrayDefaultTypeInternal() {}
  union {
    Array _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ArrayDefaultTypeInternal _Array_default_instance_;
constexpr ListArrayRequest::ListArrayRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListArrayRequestDefaultTypeInternal {
  constexpr ListArrayRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListArrayRequestDefaultTypeInternal() {}
  union {
    ListArrayRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListArrayRequestDefaultTypeInternal _ListArrayRequest_default_instance_;
constexpr ListArrayResponse_Result_ArrayList::ListArrayResponse_Result_ArrayList(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : arraylist_(){}
struct ListArrayResponse_Result_ArrayListDefaultTypeInternal {
  constexpr ListArrayResponse_Result_ArrayListDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListArrayResponse_Result_ArrayListDefaultTypeInternal() {}
  union {
    ListArrayResponse_Result_ArrayList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListArrayResponse_Result_ArrayListDefaultTypeInternal _ListArrayResponse_Result_ArrayList_default_instance_;
constexpr ListArrayResponse_Result::ListArrayResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr)
  , data_(nullptr){}
struct ListArrayResponse_ResultDefaultTypeInternal {
  constexpr ListArrayResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListArrayResponse_ResultDefaultTypeInternal() {}
  union {
    ListArrayResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListArrayResponse_ResultDefaultTypeInternal _ListArrayResponse_Result_default_instance_;
constexpr ListArrayResponse::ListArrayResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct ListArrayResponseDefaultTypeInternal {
  constexpr ListArrayResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListArrayResponseDefaultTypeInternal() {}
  union {
    ListArrayResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListArrayResponseDefaultTypeInternal _ListArrayResponse_default_instance_;
constexpr ArrayInfoRequest_Param::ArrayInfoRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ArrayInfoRequest_ParamDefaultTypeInternal {
  constexpr ArrayInfoRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ArrayInfoRequest_ParamDefaultTypeInternal() {}
  union {
    ArrayInfoRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ArrayInfoRequest_ParamDefaultTypeInternal _ArrayInfoRequest_Param_default_instance_;
constexpr ArrayInfoRequest::ArrayInfoRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct ArrayInfoRequestDefaultTypeInternal {
  constexpr ArrayInfoRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ArrayInfoRequestDefaultTypeInternal() {}
  union {
    ArrayInfoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ArrayInfoRequestDefaultTypeInternal _ArrayInfoRequest_default_instance_;
constexpr ArrayInfoResponse_Result::ArrayInfoResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr)
  , data_(nullptr){}
struct ArrayInfoResponse_ResultDefaultTypeInternal {
  constexpr ArrayInfoResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ArrayInfoResponse_ResultDefaultTypeInternal() {}
  union {
    ArrayInfoResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ArrayInfoResponse_ResultDefaultTypeInternal _ArrayInfoResponse_Result_default_instance_;
constexpr ArrayInfoResponse::ArrayInfoResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct ArrayInfoResponseDefaultTypeInternal {
  constexpr ArrayInfoResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ArrayInfoResponseDefaultTypeInternal() {}
  union {
    ArrayInfoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ArrayInfoResponseDefaultTypeInternal _ArrayInfoResponse_default_instance_;
constexpr MountArrayRequest_Param::MountArrayRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , enable_write_through_(false){}
struct MountArrayRequest_ParamDefaultTypeInternal {
  constexpr MountArrayRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MountArrayRequest_ParamDefaultTypeInternal() {}
  union {
    MountArrayRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MountArrayRequest_ParamDefaultTypeInternal _MountArrayRequest_Param_default_instance_;
constexpr MountArrayRequest::MountArrayRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct MountArrayRequestDefaultTypeInternal {
  constexpr MountArrayRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MountArrayRequestDefaultTypeInternal() {}
  union {
    MountArrayRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MountArrayRequestDefaultTypeInternal _MountArrayRequest_default_instance_;
constexpr MountArrayResponse_Result::MountArrayResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct MountArrayResponse_ResultDefaultTypeInternal {
  constexpr MountArrayResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MountArrayResponse_ResultDefaultTypeInternal() {}
  union {
    MountArrayResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MountArrayResponse_ResultDefaultTypeInternal _MountArrayResponse_Result_default_instance_;
constexpr MountArrayResponse::MountArrayResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct MountArrayResponseDefaultTypeInternal {
  constexpr MountArrayResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MountArrayResponseDefaultTypeInternal() {}
  union {
    MountArrayResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MountArrayResponseDefaultTypeInternal _MountArrayResponse_default_instance_;
constexpr UnmountArrayRequest_Param::UnmountArrayRequest_Param(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct UnmountArrayRequest_ParamDefaultTypeInternal {
  constexpr UnmountArrayRequest_ParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UnmountArrayRequest_ParamDefaultTypeInternal() {}
  union {
    UnmountArrayRequest_Param _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UnmountArrayRequest_ParamDefaultTypeInternal _UnmountArrayRequest_Param_default_instance_;
constexpr UnmountArrayRequest::UnmountArrayRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requestor_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , param_(nullptr){}
struct UnmountArrayRequestDefaultTypeInternal {
  constexpr UnmountArrayRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UnmountArrayRequestDefaultTypeInternal() {}
  union {
    UnmountArrayRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UnmountArrayRequestDefaultTypeInternal _UnmountArrayRequest_default_instance_;
constexpr UnmountArrayResponse_Result::UnmountArrayResponse_Result(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr){}
struct UnmountArrayResponse_ResultDefaultTypeInternal {
  constexpr UnmountArrayResponse_ResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UnmountArrayResponse_ResultDefaultTypeInternal() {}
  union {
    UnmountArrayResponse_Result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UnmountArrayResponse_ResultDefaultTypeInternal _UnmountArrayResponse_Result_default_instance_;
constexpr UnmountArrayResponse::UnmountArrayResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : command_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , info_(nullptr){}
struct UnmountArrayResponseDefaultTypeInternal {
  constexpr UnmountArrayResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UnmountArrayResponseDefaultTypeInternal() {}
  union {
    UnmountArrayResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UnmountArrayResponseDefaultTypeInternal _UnmountArrayResponse_default_instance_;
}  // namespace grpc_cli
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_cli_2eproto[78];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_cli_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_cli_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_cli_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Status, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Status, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Status, code_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Status, event_name_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Status, description_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Status, cause_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Status, solution_),
  4,
  0,
  1,
  2,
  3,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::PosInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::PosInfo, version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoRequest, requestor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoResponse_Result_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoResponse_Result_Data, version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoResponse_Result, status_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoResponse_Result, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemInfoResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemStopRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemStopRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemStopRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemStopRequest, requestor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemStopResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemStopResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemStopResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemStopResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemStopResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemStopResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SystemStopResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSystemPropertyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSystemPropertyRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSystemPropertyRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSystemPropertyRequest, requestor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSystemPropertyResponse_Result_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSystemPropertyResponse_Result_Data, rebuild_policy_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSystemPropertyResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSystemPropertyResponse_Result, status_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSystemPropertyResponse_Result, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSystemPropertyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSystemPropertyResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSystemPropertyResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSystemPropertyResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::GetSystemPropertyResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetSystemPropertyRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetSystemPropertyRequest_Param, level_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetSystemPropertyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetSystemPropertyRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetSystemPropertyRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetSystemPropertyRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetSystemPropertyRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetSystemPropertyResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetSystemPropertyResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetSystemPropertyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetSystemPropertyResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetSystemPropertyResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetSystemPropertyResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::SetSystemPropertyResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartTelemetryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartTelemetryRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartTelemetryRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartTelemetryRequest, requestor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartTelemetryResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartTelemetryResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartTelemetryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartTelemetryResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartTelemetryResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartTelemetryResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StartTelemetryResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopTelemetryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopTelemetryRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopTelemetryRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopTelemetryRequest, requestor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopTelemetryResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopTelemetryResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopTelemetryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopTelemetryResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopTelemetryResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopTelemetryResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopTelemetryResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetEventWrrRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetEventWrrRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetEventWrrRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetEventWrrRequest, requestor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetEventWrrResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetEventWrrResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetEventWrrResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetEventWrrResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetEventWrrResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetEventWrrResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetEventWrrResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetMbrRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetMbrRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetMbrRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetMbrRequest, requestor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetMbrResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetMbrResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetMbrResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetMbrResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetMbrResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetMbrResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ResetMbrResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopRebuildingRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopRebuildingRequest_Param, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopRebuildingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopRebuildingRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopRebuildingRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopRebuildingRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopRebuildingRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopRebuildingResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopRebuildingResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopRebuildingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopRebuildingResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopRebuildingResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopRebuildingResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::StopRebuildingResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UpdateEventWrrRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UpdateEventWrrRequest_Param, name_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UpdateEventWrrRequest_Param, weight_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UpdateEventWrrRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UpdateEventWrrRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UpdateEventWrrRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UpdateEventWrrRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UpdateEventWrrRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UpdateEventWrrResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UpdateEventWrrResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UpdateEventWrrResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UpdateEventWrrResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UpdateEventWrrResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UpdateEventWrrResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UpdateEventWrrResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddSpareRequest_SpareDeviceName, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddSpareRequest_SpareDeviceName, devicename_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddSpareRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddSpareRequest_Param, array_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddSpareRequest_Param, spare_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddSpareRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddSpareRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddSpareRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddSpareRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddSpareRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddSpareResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddSpareResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddSpareResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddSpareResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddSpareResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddSpareResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AddSpareResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveSpareRequest_SpareDeviceName, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveSpareRequest_SpareDeviceName, devicename_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveSpareRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveSpareRequest_Param, array_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveSpareRequest_Param, spare_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveSpareRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveSpareRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveSpareRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveSpareRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveSpareRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveSpareResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveSpareResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveSpareResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveSpareResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveSpareResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveSpareResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::RemoveSpareResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeviceNameList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeviceNameList, devicename_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayRequest_Param, name_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayRequest_Param, buffer_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayRequest_Param, numdata_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayRequest_Param, numspare_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayRequest_Param, raidtype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::AutocreateArrayResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayRequest_Param, name_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayRequest_Param, buffer_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayRequest_Param, data_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayRequest_Param, spare_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayRequest_Param, raidtype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::CreateArrayResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteArrayRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteArrayRequest_Param, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteArrayRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteArrayRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteArrayRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteArrayRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteArrayRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteArrayResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteArrayResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteArrayResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteArrayResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteArrayResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteArrayResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::DeleteArrayResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Device, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Device, name_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Device, type_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Device, address_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Device, class__),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Device, mn_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Device, numa_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Device, serial_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Array, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Array, index_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Array, unique_id_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Array, name_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Array, status_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Array, state_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Array, situation_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Array, createdatetime_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Array, updatedatetime_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Array, rebuildingprogress_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Array, capacity_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Array, used_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Array, gcmode_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Array, metaraid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Array, dataraid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Array, writethroughenabled_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::Array, devicelist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListArrayRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListArrayRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListArrayRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListArrayRequest, requestor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListArrayResponse_Result_ArrayList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListArrayResponse_Result_ArrayList, arraylist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListArrayResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListArrayResponse_Result, status_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListArrayResponse_Result, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListArrayResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListArrayResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListArrayResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListArrayResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ListArrayResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ArrayInfoRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ArrayInfoRequest_Param, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ArrayInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ArrayInfoRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ArrayInfoRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ArrayInfoRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ArrayInfoRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ArrayInfoResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ArrayInfoResponse_Result, status_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ArrayInfoResponse_Result, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ArrayInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ArrayInfoResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ArrayInfoResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ArrayInfoResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::ArrayInfoResponse, info_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountArrayRequest_Param, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountArrayRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountArrayRequest_Param, name_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountArrayRequest_Param, enable_write_through_),
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountArrayRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountArrayRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountArrayRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountArrayRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountArrayRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountArrayResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountArrayResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountArrayResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountArrayResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountArrayResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountArrayResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::MountArrayResponse, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountArrayRequest_Param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountArrayRequest_Param, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountArrayRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountArrayRequest, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountArrayRequest, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountArrayRequest, requestor_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountArrayRequest, param_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountArrayResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountArrayResponse_Result, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountArrayResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountArrayResponse, command_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountArrayResponse, rid_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountArrayResponse, result_),
  PROTOBUF_FIELD_OFFSET(::grpc_cli::UnmountArrayResponse, info_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(::grpc_cli::Status)},
  { 15, -1, sizeof(::grpc_cli::PosInfo)},
  { 21, -1, sizeof(::grpc_cli::SystemInfoRequest)},
  { 29, -1, sizeof(::grpc_cli::SystemInfoResponse_Result_Data)},
  { 35, -1, sizeof(::grpc_cli::SystemInfoResponse_Result)},
  { 42, -1, sizeof(::grpc_cli::SystemInfoResponse)},
  { 51, -1, sizeof(::grpc_cli::SystemStopRequest)},
  { 59, -1, sizeof(::grpc_cli::SystemStopResponse_Result)},
  { 65, -1, sizeof(::grpc_cli::SystemStopResponse)},
  { 74, -1, sizeof(::grpc_cli::GetSystemPropertyRequest)},
  { 82, -1, sizeof(::grpc_cli::GetSystemPropertyResponse_Result_Data)},
  { 88, -1, sizeof(::grpc_cli::GetSystemPropertyResponse_Result)},
  { 95, -1, sizeof(::grpc_cli::GetSystemPropertyResponse)},
  { 104, -1, sizeof(::grpc_cli::SetSystemPropertyRequest_Param)},
  { 110, -1, sizeof(::grpc_cli::SetSystemPropertyRequest)},
  { 119, -1, sizeof(::grpc_cli::SetSystemPropertyResponse_Result)},
  { 125, -1, sizeof(::grpc_cli::SetSystemPropertyResponse)},
  { 134, -1, sizeof(::grpc_cli::StartTelemetryRequest)},
  { 142, -1, sizeof(::grpc_cli::StartTelemetryResponse_Result)},
  { 148, -1, sizeof(::grpc_cli::StartTelemetryResponse)},
  { 157, -1, sizeof(::grpc_cli::StopTelemetryRequest)},
  { 165, -1, sizeof(::grpc_cli::StopTelemetryResponse_Result)},
  { 171, -1, sizeof(::grpc_cli::StopTelemetryResponse)},
  { 180, -1, sizeof(::grpc_cli::ResetEventWrrRequest)},
  { 188, -1, sizeof(::grpc_cli::ResetEventWrrResponse_Result)},
  { 194, -1, sizeof(::grpc_cli::ResetEventWrrResponse)},
  { 203, -1, sizeof(::grpc_cli::ResetMbrRequest)},
  { 211, -1, sizeof(::grpc_cli::ResetMbrResponse_Result)},
  { 217, -1, sizeof(::grpc_cli::ResetMbrResponse)},
  { 226, -1, sizeof(::grpc_cli::StopRebuildingRequest_Param)},
  { 232, -1, sizeof(::grpc_cli::StopRebuildingRequest)},
  { 241, -1, sizeof(::grpc_cli::StopRebuildingResponse_Result)},
  { 247, -1, sizeof(::grpc_cli::StopRebuildingResponse)},
  { 256, -1, sizeof(::grpc_cli::UpdateEventWrrRequest_Param)},
  { 263, -1, sizeof(::grpc_cli::UpdateEventWrrRequest)},
  { 272, -1, sizeof(::grpc_cli::UpdateEventWrrResponse_Result)},
  { 278, -1, sizeof(::grpc_cli::UpdateEventWrrResponse)},
  { 287, -1, sizeof(::grpc_cli::AddSpareRequest_SpareDeviceName)},
  { 293, -1, sizeof(::grpc_cli::AddSpareRequest_Param)},
  { 300, -1, sizeof(::grpc_cli::AddSpareRequest)},
  { 309, -1, sizeof(::grpc_cli::AddSpareResponse_Result)},
  { 315, -1, sizeof(::grpc_cli::AddSpareResponse)},
  { 324, -1, sizeof(::grpc_cli::RemoveSpareRequest_SpareDeviceName)},
  { 330, -1, sizeof(::grpc_cli::RemoveSpareRequest_Param)},
  { 337, -1, sizeof(::grpc_cli::RemoveSpareRequest)},
  { 346, -1, sizeof(::grpc_cli::RemoveSpareResponse_Result)},
  { 352, -1, sizeof(::grpc_cli::RemoveSpareResponse)},
  { 361, -1, sizeof(::grpc_cli::DeviceNameList)},
  { 367, -1, sizeof(::grpc_cli::AutocreateArrayRequest_Param)},
  { 377, -1, sizeof(::grpc_cli::AutocreateArrayRequest)},
  { 386, -1, sizeof(::grpc_cli::AutocreateArrayResponse_Result)},
  { 392, -1, sizeof(::grpc_cli::AutocreateArrayResponse)},
  { 401, -1, sizeof(::grpc_cli::CreateArrayRequest_Param)},
  { 411, -1, sizeof(::grpc_cli::CreateArrayRequest)},
  { 420, -1, sizeof(::grpc_cli::CreateArrayResponse_Result)},
  { 426, -1, sizeof(::grpc_cli::CreateArrayResponse)},
  { 435, -1, sizeof(::grpc_cli::DeleteArrayRequest_Param)},
  { 441, -1, sizeof(::grpc_cli::DeleteArrayRequest)},
  { 450, -1, sizeof(::grpc_cli::DeleteArrayResponse_Result)},
  { 456, -1, sizeof(::grpc_cli::DeleteArrayResponse)},
  { 465, -1, sizeof(::grpc_cli::Device)},
  { 477, -1, sizeof(::grpc_cli::Array)},
  { 498, -1, sizeof(::grpc_cli::ListArrayRequest)},
  { 506, -1, sizeof(::grpc_cli::ListArrayResponse_Result_ArrayList)},
  { 512, -1, sizeof(::grpc_cli::ListArrayResponse_Result)},
  { 519, -1, sizeof(::grpc_cli::ListArrayResponse)},
  { 528, -1, sizeof(::grpc_cli::ArrayInfoRequest_Param)},
  { 534, -1, sizeof(::grpc_cli::ArrayInfoRequest)},
  { 543, -1, sizeof(::grpc_cli::ArrayInfoResponse_Result)},
  { 550, -1, sizeof(::grpc_cli::ArrayInfoResponse)},
  { 559, 566, sizeof(::grpc_cli::MountArrayRequest_Param)},
  { 568, -1, sizeof(::grpc_cli::MountArrayRequest)},
  { 577, -1, sizeof(::grpc_cli::MountArrayResponse_Result)},
  { 583, -1, sizeof(::grpc_cli::MountArrayResponse)},
  { 592, -1, sizeof(::grpc_cli::UnmountArrayRequest_Param)},
  { 598, -1, sizeof(::grpc_cli::UnmountArrayRequest)},
  { 607, -1, sizeof(::grpc_cli::UnmountArrayResponse_Result)},
  { 613, -1, sizeof(::grpc_cli::UnmountArrayResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_Status_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_PosInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SystemInfoRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SystemInfoResponse_Result_Data_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SystemInfoResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SystemInfoResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SystemStopRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SystemStopResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SystemStopResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_GetSystemPropertyRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_GetSystemPropertyResponse_Result_Data_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_GetSystemPropertyResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_GetSystemPropertyResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SetSystemPropertyRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SetSystemPropertyRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SetSystemPropertyResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_SetSystemPropertyResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_StartTelemetryRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_StartTelemetryResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_StartTelemetryResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_StopTelemetryRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_StopTelemetryResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_StopTelemetryResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ResetEventWrrRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ResetEventWrrResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ResetEventWrrResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ResetMbrRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ResetMbrResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ResetMbrResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_StopRebuildingRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_StopRebuildingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_StopRebuildingResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_StopRebuildingResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_UpdateEventWrrRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_UpdateEventWrrRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_UpdateEventWrrResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_UpdateEventWrrResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_AddSpareRequest_SpareDeviceName_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_AddSpareRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_AddSpareRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_AddSpareResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_AddSpareResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_RemoveSpareRequest_SpareDeviceName_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_RemoveSpareRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_RemoveSpareRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_RemoveSpareResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_RemoveSpareResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_DeviceNameList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_AutocreateArrayRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_AutocreateArrayRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_AutocreateArrayResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_AutocreateArrayResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_CreateArrayRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_CreateArrayRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_CreateArrayResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_CreateArrayResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_DeleteArrayRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_DeleteArrayRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_DeleteArrayResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_DeleteArrayResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_Device_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_Array_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListArrayRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListArrayResponse_Result_ArrayList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListArrayResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ListArrayResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ArrayInfoRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ArrayInfoRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ArrayInfoResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_ArrayInfoResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_MountArrayRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_MountArrayRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_MountArrayResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_MountArrayResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_UnmountArrayRequest_Param_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_UnmountArrayRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_UnmountArrayResponse_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_cli::_UnmountArrayResponse_default_instance_),
};

const char descriptor_table_protodef_cli_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\tcli.proto\022\010grpc_cli\032\021annotations.proto"
  "\"\270\001\n\006Status\022\021\n\004code\030\001 \001(\005H\000\210\001\001\022\027\n\nevent_"
  "name\030\002 \001(\tH\001\210\001\001\022\030\n\013description\030\003 \001(\tH\002\210\001"
  "\001\022\022\n\005cause\030\004 \001(\tH\003\210\001\001\022\025\n\010solution\030\005 \001(\tH"
  "\004\210\001\001B\007\n\005_codeB\r\n\013_event_nameB\016\n\014_descrip"
  "tionB\010\n\006_causeB\013\n\t_solution\"\032\n\007PosInfo\022\017"
  "\n\007version\030\001 \001(\t\"D\n\021SystemInfoRequest\022\017\n\007"
  "command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequestor\030"
  "\003 \001(\t\"\205\002\n\022SystemInfoResponse\022\017\n\007command\030"
  "\001 \001(\t\022\013\n\003rid\030\002 \001(\t\0223\n\006result\030\003 \001(\0132#.grp"
  "c_cli.SystemInfoResponse.Result\022\037\n\004info\030"
  "\004 \001(\0132\021.grpc_cli.PosInfo\032{\n\006Result\022 \n\006st"
  "atus\030\001 \001(\0132\020.grpc_cli.Status\0226\n\004data\030\002 \001"
  "(\0132(.grpc_cli.SystemInfoResponse.Result."
  "Data\032\027\n\004Data\022\017\n\007version\030\001 \001(\t\"D\n\021SystemS"
  "topRequest\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t"
  "\022\021\n\trequestor\030\003 \001(\t\"\264\001\n\022SystemStopRespon"
  "se\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\0223\n\006resu"
  "lt\030\003 \001(\0132#.grpc_cli.SystemStopResponse.R"
  "esult\022\037\n\004info\030\004 \001(\0132\021.grpc_cli.PosInfo\032*"
  "\n\006Result\022 \n\006status\030\001 \001(\0132\020.grpc_cli.Stat"
  "us\"K\n\030GetSystemPropertyRequest\022\017\n\007comman"
  "d\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequestor\030\003 \001(\t\""
  "\242\002\n\031GetSystemPropertyResponse\022\017\n\007command"
  "\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022:\n\006result\030\003 \001(\0132*.gr"
  "pc_cli.GetSystemPropertyResponse.Result\022"
  "\037\n\004info\030\004 \001(\0132\021.grpc_cli.PosInfo\032\211\001\n\006Res"
  "ult\022 \n\006status\030\001 \001(\0132\020.grpc_cli.Status\022=\n"
  "\004data\030\002 \001(\0132/.grpc_cli.GetSystemProperty"
  "Response.Result.Data\032\036\n\004Data\022\026\n\016rebuild_"
  "policy\030\001 \001(\t\"\234\001\n\030SetSystemPropertyReques"
  "t\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\treque"
  "stor\030\003 \001(\t\0227\n\005param\030\004 \001(\0132(.grpc_cli.Set"
  "SystemPropertyRequest.Param\032\026\n\005Param\022\r\n\005"
  "level\030\001 \001(\t\"\302\001\n\031SetSystemPropertyRespons"
  "e\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022:\n\006resul"
  "t\030\003 \001(\0132*.grpc_cli.SetSystemPropertyResp"
  "onse.Result\022\037\n\004info\030\004 \001(\0132\021.grpc_cli.Pos"
  "Info\032*\n\006Result\022 \n\006status\030\001 \001(\0132\020.grpc_cl"
  "i.Status\"H\n\025StartTelemetryRequest\022\017\n\007com"
  "mand\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequestor\030\003 \001"
  "(\t\"\274\001\n\026StartTelemetryResponse\022\017\n\007command"
  "\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\0227\n\006result\030\003 \001(\0132\'.gr"
  "pc_cli.StartTelemetryResponse.Result\022\037\n\004"
  "info\030\004 \001(\0132\021.grpc_cli.PosInfo\032*\n\006Result\022"
  " \n\006status\030\001 \001(\0132\020.grpc_cli.Status\"G\n\024Sto"
  "pTelemetryRequest\022\017\n\007command\030\001 \001(\t\022\013\n\003ri"
  "d\030\002 \001(\t\022\021\n\trequestor\030\003 \001(\t\"\272\001\n\025StopTelem"
  "etryResponse\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001"
  "(\t\0226\n\006result\030\003 \001(\0132&.grpc_cli.StopTeleme"
  "tryResponse.Result\022\037\n\004info\030\004 \001(\0132\021.grpc_"
  "cli.PosInfo\032*\n\006Result\022 \n\006status\030\001 \001(\0132\020."
  "grpc_cli.Status\"G\n\024ResetEventWrrRequest\022"
  "\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequest"
  "or\030\003 \001(\t\"\272\001\n\025ResetEventWrrResponse\022\017\n\007co"
  "mmand\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\0226\n\006result\030\003 \001(\013"
  "2&.grpc_cli.ResetEventWrrResponse.Result"
  "\022\037\n\004info\030\004 \001(\0132\021.grpc_cli.PosInfo\032*\n\006Res"
  "ult\022 \n\006status\030\001 \001(\0132\020.grpc_cli.Status\"B\n"
  "\017ResetMbrRequest\022\017\n\007command\030\001 \001(\t\022\013\n\003rid"
  "\030\002 \001(\t\022\021\n\trequestor\030\003 \001(\t\"\260\001\n\020ResetMbrRe"
  "sponse\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\0221\n\006"
  "result\030\003 \001(\0132!.grpc_cli.ResetMbrResponse"
  ".Result\022\037\n\004info\030\004 \001(\0132\021.grpc_cli.PosInfo"
  "\032*\n\006Result\022 \n\006status\030\001 \001(\0132\020.grpc_cli.St"
  "atus\"\225\001\n\025StopRebuildingRequest\022\017\n\007comman"
  "d\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequestor\030\003 \001(\t\022"
  "4\n\005param\030\004 \001(\0132%.grpc_cli.StopRebuilding"
  "Request.Param\032\025\n\005Param\022\014\n\004name\030\001 \001(\t\"\274\001\n"
  "\026StopRebuildingResponse\022\017\n\007command\030\001 \001(\t"
  "\022\013\n\003rid\030\002 \001(\t\0227\n\006result\030\003 \001(\0132\'.grpc_cli"
  ".StopRebuildingResponse.Result\022\037\n\004info\030\004"
  " \001(\0132\021.grpc_cli.PosInfo\032*\n\006Result\022 \n\006sta"
  "tus\030\001 \001(\0132\020.grpc_cli.Status\"\245\001\n\025UpdateEv"
  "entWrrRequest\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 "
  "\001(\t\022\021\n\trequestor\030\003 \001(\t\0224\n\005param\030\004 \001(\0132%."
  "grpc_cli.UpdateEventWrrRequest.Param\032%\n\005"
  "Param\022\014\n\004name\030\001 \001(\t\022\016\n\006weight\030\002 \001(\005\"\274\001\n\026"
  "UpdateEventWrrResponse\022\017\n\007command\030\001 \001(\t\022"
  "\013\n\003rid\030\002 \001(\t\0227\n\006result\030\003 \001(\0132\'.grpc_cli."
  "UpdateEventWrrResponse.Result\022\037\n\004info\030\004 "
  "\001(\0132\021.grpc_cli.PosInfo\032*\n\006Result\022 \n\006stat"
  "us\030\001 \001(\0132\020.grpc_cli.Status\"\353\001\n\017AddSpareR"
  "equest\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\t"
  "requestor\030\003 \001(\t\022.\n\005param\030\004 \001(\0132\037.grpc_cl"
  "i.AddSpareRequest.Param\032%\n\017SpareDeviceNa"
  "me\022\022\n\ndeviceName\030\001 \001(\t\032P\n\005Param\022\r\n\005array"
  "\030\001 \001(\t\0228\n\005spare\030\002 \003(\0132).grpc_cli.AddSpar"
  "eRequest.SpareDeviceName\"\260\001\n\020AddSpareRes"
  "ponse\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\0221\n\006r"
  "esult\030\003 \001(\0132!.grpc_cli.AddSpareResponse."
  "Result\022\037\n\004info\030\004 \001(\0132\021.grpc_cli.PosInfo\032"
  "*\n\006Result\022 \n\006status\030\001 \001(\0132\020.grpc_cli.Sta"
  "tus\"\364\001\n\022RemoveSpareRequest\022\017\n\007command\030\001 "
  "\001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequestor\030\003 \001(\t\0221\n\005p"
  "aram\030\004 \001(\0132\".grpc_cli.RemoveSpareRequest"
  ".Param\032%\n\017SpareDeviceName\022\022\n\ndeviceName\030"
  "\001 \001(\t\032S\n\005Param\022\r\n\005array\030\001 \001(\t\022;\n\005spare\030\002"
  " \003(\0132,.grpc_cli.RemoveSpareRequest.Spare"
  "DeviceName\"\266\001\n\023RemoveSpareResponse\022\017\n\007co"
  "mmand\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\0224\n\006result\030\003 \001(\013"
  "2$.grpc_cli.RemoveSpareResponse.Result\022\037"
  "\n\004info\030\004 \001(\0132\021.grpc_cli.PosInfo\032*\n\006Resul"
  "t\022 \n\006status\030\001 \001(\0132\020.grpc_cli.Status\"$\n\016D"
  "eviceNameList\022\022\n\ndeviceName\030\001 \001(\t\"\366\001\n\026Au"
  "tocreateArrayRequest\022\017\n\007command\030\001 \001(\t\022\013\n"
  "\003rid\030\002 \001(\t\022\021\n\trequestor\030\003 \001(\t\0225\n\005param\030\004"
  " \001(\0132&.grpc_cli.AutocreateArrayRequest.P"
  "aram\032t\n\005Param\022\014\n\004name\030\001 \001(\t\022(\n\006buffer\030\002 "
  "\003(\0132\030.grpc_cli.DeviceNameList\022\017\n\007numData"
  "\030\003 \001(\005\022\020\n\010numSpare\030\004 \001(\005\022\020\n\010raidtype\030\005 \001"
  "(\t\"\276\001\n\027AutocreateArrayResponse\022\017\n\007comman"
  "d\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\0228\n\006result\030\003 \001(\0132(.g"
  "rpc_cli.AutocreateArrayResponse.Result\022\037"
  "\n\004info\030\004 \001(\0132\021.grpc_cli.PosInfo\032*\n\006Resul"
  "t\022 \n\006status\030\001 \001(\0132\020.grpc_cli.Status\"\235\002\n\022"
  "CreateArrayRequest\022\017\n\007command\030\001 \001(\t\022\013\n\003r"
  "id\030\002 \001(\t\022\021\n\trequestor\030\003 \001(\t\0221\n\005param\030\004 \001"
  "(\0132\".grpc_cli.CreateArrayRequest.Param\032\242"
  "\001\n\005Param\022\014\n\004name\030\001 \001(\t\022(\n\006buffer\030\002 \003(\0132\030"
  ".grpc_cli.DeviceNameList\022&\n\004data\030\003 \003(\0132\030"
  ".grpc_cli.DeviceNameList\022\'\n\005spare\030\004 \003(\0132"
  "\030.grpc_cli.DeviceNameList\022\020\n\010raidtype\030\005 "
  "\001(\t\"\266\001\n\023CreateArrayResponse\022\017\n\007command\030\001"
  " \001(\t\022\013\n\003rid\030\002 \001(\t\0224\n\006result\030\003 \001(\0132$.grpc"
  "_cli.CreateArrayResponse.Result\022\037\n\004info\030"
  "\004 \001(\0132\021.grpc_cli.PosInfo\032*\n\006Result\022 \n\006st"
  "atus\030\001 \001(\0132\020.grpc_cli.Status\"\217\001\n\022DeleteA"
  "rrayRequest\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001("
  "\t\022\021\n\trequestor\030\003 \001(\t\0221\n\005param\030\004 \001(\0132\".gr"
  "pc_cli.DeleteArrayRequest.Param\032\025\n\005Param"
  "\022\014\n\004name\030\001 \001(\t\"\266\001\n\023DeleteArrayResponse\022\017"
  "\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\0224\n\006result\030\003"
  " \001(\0132$.grpc_cli.DeleteArrayResponse.Resu"
  "lt\022\037\n\004info\030\004 \001(\0132\021.grpc_cli.PosInfo\032*\n\006R"
  "esult\022 \n\006status\030\001 \001(\0132\020.grpc_cli.Status\""
  "n\n\006Device\022\014\n\004name\030\001 \001(\t\022\014\n\004type\030\002 \001(\t\022\017\n"
  "\007address\030\003 \001(\t\022\r\n\005class\030\004 \001(\t\022\n\n\002mn\030\005 \001("
  "\t\022\014\n\004numa\030\006 \001(\t\022\016\n\006serial\030\007 \001(\t\"\314\002\n\005Arra"
  "y\022\r\n\005index\030\001 \001(\005\022\021\n\tunique_id\030\002 \001(\005\022\014\n\004n"
  "ame\030\003 \001(\t\022\016\n\006status\030\004 \001(\t\022\r\n\005state\030\005 \001(\t"
  "\022\021\n\tsituation\030\006 \001(\t\022\026\n\016createDatetime\030\007 "
  "\001(\t\022\026\n\016updateDatetime\030\010 \001(\t\022\032\n\022rebuildin"
  "gProgress\030\t \001(\t\022\020\n\010capacity\030\n \001(\004\022\014\n\004use"
  "d\030\013 \001(\004\022\016\n\006gcMode\030\014 \001(\t\022\020\n\010metaRaid\030\r \001("
  "\t\022\020\n\010dataRaid\030\016 \001(\t\022\033\n\023writeThroughEnabl"
  "ed\030\017 \001(\010\022$\n\ndevicelist\030\020 \003(\0132\020.grpc_cli."
  "Device\"C\n\020ListArrayRequest\022\017\n\007command\030\001 "
  "\001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequestor\030\003 \001(\t\"\240\002\n\021"
  "ListArrayResponse\022\017\n\007command\030\001 \001(\t\022\013\n\003ri"
  "d\030\002 \001(\t\0222\n\006result\030\003 \001(\0132\".grpc_cli.ListA"
  "rrayResponse.Result\022\037\n\004info\030\004 \001(\0132\021.grpc"
  "_cli.PosInfo\032\227\001\n\006Result\022 \n\006status\030\001 \001(\0132"
  "\020.grpc_cli.Status\022:\n\004data\030\002 \001(\0132,.grpc_c"
  "li.ListArrayResponse.Result.ArrayList\032/\n"
  "\tArrayList\022\"\n\tarrayList\030\001 \003(\0132\017.grpc_cli"
  ".Array\"\213\001\n\020ArrayInfoRequest\022\017\n\007command\030\001"
  " \001(\t\022\013\n\003rid\030\002 \001(\t\022\021\n\trequestor\030\003 \001(\t\022/\n\005"
  "param\030\004 \001(\0132 .grpc_cli.ArrayInfoRequest."
  "Param\032\025\n\005Param\022\014\n\004name\030\001 \001(\t\"\321\001\n\021ArrayIn"
  "foResponse\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t"
  "\0222\n\006result\030\003 \001(\0132\".grpc_cli.ArrayInfoRes"
  "ponse.Result\022\037\n\004info\030\004 \001(\0132\021.grpc_cli.Po"
  "sInfo\032I\n\006Result\022 \n\006status\030\001 \001(\0132\020.grpc_c"
  "li.Status\022\035\n\004data\030\002 \001(\0132\017.grpc_cli.Array"
  "\"\311\001\n\021MountArrayRequest\022\017\n\007command\030\001 \001(\t\022"
  "\013\n\003rid\030\002 \001(\t\022\021\n\trequestor\030\003 \001(\t\0220\n\005param"
  "\030\004 \001(\0132!.grpc_cli.MountArrayRequest.Para"
  "m\032Q\n\005Param\022\014\n\004name\030\001 \001(\t\022!\n\024enable_write"
  "_through\030\002 \001(\010H\000\210\001\001B\027\n\025_enable_write_thr"
  "ough\"\264\001\n\022MountArrayResponse\022\017\n\007command\030\001"
  " \001(\t\022\013\n\003rid\030\002 \001(\t\0223\n\006result\030\003 \001(\0132#.grpc"
  "_cli.MountArrayResponse.Result\022\037\n\004info\030\004"
  " \001(\0132\021.grpc_cli.PosInfo\032*\n\006Result\022 \n\006sta"
  "tus\030\001 \001(\0132\020.grpc_cli.Status\"\221\001\n\023UnmountA"
  "rrayRequest\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001("
  "\t\022\021\n\trequestor\030\003 \001(\t\0222\n\005param\030\004 \001(\0132#.gr"
  "pc_cli.UnmountArrayRequest.Param\032\025\n\005Para"
  "m\022\014\n\004name\030\001 \001(\t\"\270\001\n\024UnmountArrayResponse"
  "\022\017\n\007command\030\001 \001(\t\022\013\n\003rid\030\002 \001(\t\0225\n\006result"
  "\030\003 \001(\0132%.grpc_cli.UnmountArrayResponse.R"
  "esult\022\037\n\004info\030\004 \001(\0132\021.grpc_cli.PosInfo\032*"
  "\n\006Result\022 \n\006status\030\001 \001(\0132\020.grpc_cli.Stat"
  "us2\362\016\n\006PosCli\022_\n\nSystemInfo\022\033.grpc_cli.S"
  "ystemInfoRequest\032\034.grpc_cli.SystemInfoRe"
  "sponse\"\026\202\323\344\223\002\020\022\016/v1/systeminfo\022_\n\nSystem"
  "Stop\022\033.grpc_cli.SystemStopRequest\032\034.grpc"
  "_cli.SystemStopResponse\"\026\202\323\344\223\002\020\022\016/v1/sys"
  "temstop\022}\n\021GetSystemProperty\022\".grpc_cli."
  "GetSystemPropertyRequest\032#.grpc_cli.GetS"
  "ystemPropertyResponse\"\037\202\323\344\223\002\031\022\027/v1/get_s"
  "ystem_property\022\205\001\n\021SetSystemProperty\022\".g"
  "rpc_cli.SetSystemPropertyRequest\032#.grpc_"
  "cli.SetSystemPropertyResponse\"\'\202\323\344\223\002!\022\037/"
  "v1/set_system_property/{level}\022p\n\016StartT"
  "elemetry\022\037.grpc_cli.StartTelemetryReques"
  "t\032 .grpc_cli.StartTelemetryResponse\"\033\202\323\344"
  "\223\002\025\022\023/v1/start_telemetry\022l\n\rStopTelemetr"
  "y\022\036.grpc_cli.StopTelemetryRequest\032\037.grpc"
  "_cli.StopTelemetryResponse\"\032\202\323\344\223\002\024\022\022/v1/"
  "stop_telemetry\022P\n\rResetEventWrr\022\036.grpc_c"
  "li.ResetEventWrrRequest\032\037.grpc_cli.Reset"
  "EventWrrResponse\022A\n\010ResetMbr\022\031.grpc_cli."
  "ResetMbrRequest\032\032.grpc_cli.ResetMbrRespo"
  "nse\022S\n\016StopRebuilding\022\037.grpc_cli.StopReb"
  "uildingRequest\032 .grpc_cli.StopRebuilding"
  "Response\022S\n\016UpdateEventWrr\022\037.grpc_cli.Up"
  "dateEventWrrRequest\032 .grpc_cli.UpdateEve"
  "ntWrrResponse\022W\n\010AddSpare\022\031.grpc_cli.Add"
  "SpareRequest\032\032.grpc_cli.AddSpareResponse"
  "\"\024\202\323\344\223\002\016\"\014/v1/addspare\022c\n\013RemoveSpare\022\034."
  "grpc_cli.RemoveSpareRequest\032\035.grpc_cli.R"
  "emoveSpareResponse\"\027\202\323\344\223\002\021\"\017/v1/removesp"
  "are\022s\n\017AutocreateArray\022 .grpc_cli.Autocr"
  "eateArrayRequest\032!.grpc_cli.AutocreateAr"
  "rayResponse\"\033\202\323\344\223\002\025\"\023/v1/autocreatearray"
  "\022c\n\013CreateArray\022\034.grpc_cli.CreateArrayRe"
  "quest\032\035.grpc_cli.CreateArrayResponse\"\027\202\323"
  "\344\223\002\021\"\017/v1/createarray\022d\n\013DeleteArray\022\034.g"
  "rpc_cli.DeleteArrayRequest\032\035.grpc_cli.De"
  "leteArrayResponse\"\030\202\323\344\223\002\022\"\020/v1/deletearr"
  "ay/\022[\n\tListArray\022\032.grpc_cli.ListArrayReq"
  "uest\032\033.grpc_cli.ListArrayResponse\"\025\202\323\344\223\002"
  "\017\"\r/v1/listarray\022[\n\tArrayInfo\022\032.grpc_cli"
  ".ArrayInfoRequest\032\033.grpc_cli.ArrayInfoRe"
  "sponse\"\025\202\323\344\223\002\017\"\r/v1/arrayinfo\022_\n\nMountAr"
  "ray\022\033.grpc_cli.MountArrayRequest\032\034.grpc_"
  "cli.MountArrayResponse\"\026\202\323\344\223\002\020\"\016/v1/moun"
  "tarray\022g\n\014UnmountArray\022\035.grpc_cli.Unmoun"
  "tArrayRequest\032\036.grpc_cli.UnmountArrayRes"
  "ponse\"\030\202\323\344\223\002\022\"\020/v1/unmountarrayB\tZ\007cli/a"
  "pib\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_cli_2eproto_deps[1] = {
  &::descriptor_table_annotations_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_cli_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_cli_2eproto = {
  false, false, 9250, descriptor_table_protodef_cli_2eproto, "cli.proto", 
  &descriptor_table_cli_2eproto_once, descriptor_table_cli_2eproto_deps, 1, 78,
  schemas, file_default_instances, TableStruct_cli_2eproto::offsets,
  file_level_metadata_cli_2eproto, file_level_enum_descriptors_cli_2eproto, file_level_service_descriptors_cli_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_cli_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_cli_2eproto);
  return descriptor_table_cli_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_cli_2eproto(&descriptor_table_cli_2eproto);
namespace grpc_cli {

// ===================================================================

class Status::_Internal {
 public:
  using HasBits = decltype(std::declval<Status>()._has_bits_);
  static void set_has_code(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_event_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_description(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_cause(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_solution(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

Status::Status(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.Status)
}
Status::Status(const Status& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  event_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_event_name()) {
    event_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_event_name(), 
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_description()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArena());
  }
  cause_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_cause()) {
    cause_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_cause(), 
      GetArena());
  }
  solution_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_solution()) {
    solution_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_solution(), 
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:grpc_cli.Status)
}

void Status::SharedCtor() {
event_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
cause_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
solution_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
code_ = 0;
}

Status::~Status() {
  // @@protoc_insertion_point(destructor:grpc_cli.Status)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Status::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  event_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cause_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  solution_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Status::ArenaDtor(void* object) {
  Status* _this = reinterpret_cast< Status* >(object);
  (void)_this;
}
void Status::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Status::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Status::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.Status)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      event_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      description_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      cause_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      solution_.ClearNonDefaultToEmpty();
    }
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Status::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_code(&has_bits);
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string event_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_event_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Status.event_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Status.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string cause = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_cause();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Status.cause"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string solution = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_solution();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Status.solution"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Status::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.Status)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (_internal_has_code()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string event_name = 2;
  if (_internal_has_event_name()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_event_name().data(), static_cast<int>(this->_internal_event_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Status.event_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_event_name(), target);
  }

  // string description = 3;
  if (_internal_has_description()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Status.description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  // string cause = 4;
  if (_internal_has_cause()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cause().data(), static_cast<int>(this->_internal_cause().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Status.cause");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_cause(), target);
  }

  // string solution = 5;
  if (_internal_has_solution()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_solution().data(), static_cast<int>(this->_internal_solution().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Status.solution");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_solution(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.Status)
  return target;
}

size_t Status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.Status)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // string event_name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_event_name());
    }

    // string description = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_description());
    }

    // string cause = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_cause());
    }

    // string solution = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_solution());
    }

    // int32 code = 1;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_code());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Status::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.Status)
  GOOGLE_DCHECK_NE(&from, this);
  const Status* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Status>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.Status)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.Status)
    MergeFrom(*source);
  }
}

void Status::MergeFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.Status)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_event_name(from._internal_event_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_description(from._internal_description());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_cause(from._internal_cause());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_solution(from._internal_solution());
    }
    if (cached_has_bits & 0x00000010u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Status::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Status::CopyFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Status::IsInitialized() const {
  return true;
}

void Status::InternalSwap(Status* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  event_name_.Swap(&other->event_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  cause_.Swap(&other->cause_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  solution_.Swap(&other->solution_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Status::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PosInfo::_Internal {
 public:
};

PosInfo::PosInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.PosInfo)
}
PosInfo::PosInfo(const PosInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_version().empty()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.PosInfo)
}

void PosInfo::SharedCtor() {
version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PosInfo::~PosInfo() {
  // @@protoc_insertion_point(destructor:grpc_cli.PosInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PosInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PosInfo::ArenaDtor(void* object) {
  PosInfo* _this = reinterpret_cast< PosInfo* >(object);
  (void)_this;
}
void PosInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PosInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PosInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.PosInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PosInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.PosInfo.version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PosInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.PosInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.PosInfo.version");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.PosInfo)
  return target;
}

size_t PosInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.PosInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PosInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.PosInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PosInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PosInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.PosInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.PosInfo)
    MergeFrom(*source);
  }
}

void PosInfo::MergeFrom(const PosInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.PosInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version().size() > 0) {
    _internal_set_version(from._internal_version());
  }
}

void PosInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.PosInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PosInfo::CopyFrom(const PosInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.PosInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PosInfo::IsInitialized() const {
  return true;
}

void PosInfo::InternalSwap(PosInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PosInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SystemInfoRequest::_Internal {
 public:
};

SystemInfoRequest::SystemInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SystemInfoRequest)
}
SystemInfoRequest::SystemInfoRequest(const SystemInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SystemInfoRequest)
}

void SystemInfoRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SystemInfoRequest::~SystemInfoRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.SystemInfoRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SystemInfoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SystemInfoRequest::ArenaDtor(void* object) {
  SystemInfoRequest* _this = reinterpret_cast< SystemInfoRequest* >(object);
  (void)_this;
}
void SystemInfoRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SystemInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SystemInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SystemInfoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SystemInfoRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SystemInfoRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SystemInfoRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SystemInfoRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SystemInfoRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SystemInfoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SystemInfoRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SystemInfoRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SystemInfoRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SystemInfoRequest)
  return target;
}

size_t SystemInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SystemInfoRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SystemInfoRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SystemInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemInfoRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SystemInfoRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SystemInfoRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SystemInfoRequest)
    MergeFrom(*source);
  }
}

void SystemInfoRequest::MergeFrom(const SystemInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SystemInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
}

void SystemInfoRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SystemInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemInfoRequest::CopyFrom(const SystemInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SystemInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemInfoRequest::IsInitialized() const {
  return true;
}

void SystemInfoRequest::InternalSwap(SystemInfoRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SystemInfoRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SystemInfoResponse_Result_Data::_Internal {
 public:
};

SystemInfoResponse_Result_Data::SystemInfoResponse_Result_Data(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SystemInfoResponse.Result.Data)
}
SystemInfoResponse_Result_Data::SystemInfoResponse_Result_Data(const SystemInfoResponse_Result_Data& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_version().empty()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SystemInfoResponse.Result.Data)
}

void SystemInfoResponse_Result_Data::SharedCtor() {
version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SystemInfoResponse_Result_Data::~SystemInfoResponse_Result_Data() {
  // @@protoc_insertion_point(destructor:grpc_cli.SystemInfoResponse.Result.Data)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SystemInfoResponse_Result_Data::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SystemInfoResponse_Result_Data::ArenaDtor(void* object) {
  SystemInfoResponse_Result_Data* _this = reinterpret_cast< SystemInfoResponse_Result_Data* >(object);
  (void)_this;
}
void SystemInfoResponse_Result_Data::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SystemInfoResponse_Result_Data::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SystemInfoResponse_Result_Data::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SystemInfoResponse.Result.Data)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SystemInfoResponse_Result_Data::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SystemInfoResponse.Result.Data.version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SystemInfoResponse_Result_Data::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SystemInfoResponse.Result.Data)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SystemInfoResponse.Result.Data.version");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SystemInfoResponse.Result.Data)
  return target;
}

size_t SystemInfoResponse_Result_Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SystemInfoResponse.Result.Data)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SystemInfoResponse_Result_Data::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SystemInfoResponse.Result.Data)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemInfoResponse_Result_Data* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SystemInfoResponse_Result_Data>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SystemInfoResponse.Result.Data)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SystemInfoResponse.Result.Data)
    MergeFrom(*source);
  }
}

void SystemInfoResponse_Result_Data::MergeFrom(const SystemInfoResponse_Result_Data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SystemInfoResponse.Result.Data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version().size() > 0) {
    _internal_set_version(from._internal_version());
  }
}

void SystemInfoResponse_Result_Data::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SystemInfoResponse.Result.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemInfoResponse_Result_Data::CopyFrom(const SystemInfoResponse_Result_Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SystemInfoResponse.Result.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemInfoResponse_Result_Data::IsInitialized() const {
  return true;
}

void SystemInfoResponse_Result_Data::InternalSwap(SystemInfoResponse_Result_Data* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SystemInfoResponse_Result_Data::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SystemInfoResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const SystemInfoResponse_Result* msg);
  static const ::grpc_cli::SystemInfoResponse_Result_Data& data(const SystemInfoResponse_Result* msg);
};

const ::grpc_cli::Status&
SystemInfoResponse_Result::_Internal::status(const SystemInfoResponse_Result* msg) {
  return *msg->status_;
}
const ::grpc_cli::SystemInfoResponse_Result_Data&
SystemInfoResponse_Result::_Internal::data(const SystemInfoResponse_Result* msg) {
  return *msg->data_;
}
SystemInfoResponse_Result::SystemInfoResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SystemInfoResponse.Result)
}
SystemInfoResponse_Result::SystemInfoResponse_Result(const SystemInfoResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_data()) {
    data_ = new ::grpc_cli::SystemInfoResponse_Result_Data(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SystemInfoResponse.Result)
}

void SystemInfoResponse_Result::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&data_) -
    reinterpret_cast<char*>(&status_)) + sizeof(data_));
}

SystemInfoResponse_Result::~SystemInfoResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.SystemInfoResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SystemInfoResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete data_;
}

void SystemInfoResponse_Result::ArenaDtor(void* object) {
  SystemInfoResponse_Result* _this = reinterpret_cast< SystemInfoResponse_Result* >(object);
  (void)_this;
}
void SystemInfoResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SystemInfoResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SystemInfoResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SystemInfoResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SystemInfoResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.SystemInfoResponse.Result.Data data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SystemInfoResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SystemInfoResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .grpc_cli.SystemInfoResponse.Result.Data data = 2;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SystemInfoResponse.Result)
  return target;
}

size_t SystemInfoResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SystemInfoResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .grpc_cli.SystemInfoResponse.Result.Data data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SystemInfoResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SystemInfoResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemInfoResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SystemInfoResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SystemInfoResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SystemInfoResponse.Result)
    MergeFrom(*source);
  }
}

void SystemInfoResponse_Result::MergeFrom(const SystemInfoResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SystemInfoResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
  if (from.has_data()) {
    _internal_mutable_data()->::grpc_cli::SystemInfoResponse_Result_Data::MergeFrom(from._internal_data());
  }
}

void SystemInfoResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SystemInfoResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemInfoResponse_Result::CopyFrom(const SystemInfoResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SystemInfoResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemInfoResponse_Result::IsInitialized() const {
  return true;
}

void SystemInfoResponse_Result::InternalSwap(SystemInfoResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SystemInfoResponse_Result, data_)
      + sizeof(SystemInfoResponse_Result::data_)
      - PROTOBUF_FIELD_OFFSET(SystemInfoResponse_Result, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SystemInfoResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SystemInfoResponse::_Internal {
 public:
  static const ::grpc_cli::SystemInfoResponse_Result& result(const SystemInfoResponse* msg);
  static const ::grpc_cli::PosInfo& info(const SystemInfoResponse* msg);
};

const ::grpc_cli::SystemInfoResponse_Result&
SystemInfoResponse::_Internal::result(const SystemInfoResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
SystemInfoResponse::_Internal::info(const SystemInfoResponse* msg) {
  return *msg->info_;
}
SystemInfoResponse::SystemInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SystemInfoResponse)
}
SystemInfoResponse::SystemInfoResponse(const SystemInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::SystemInfoResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SystemInfoResponse)
}

void SystemInfoResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

SystemInfoResponse::~SystemInfoResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.SystemInfoResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SystemInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void SystemInfoResponse::ArenaDtor(void* object) {
  SystemInfoResponse* _this = reinterpret_cast< SystemInfoResponse* >(object);
  (void)_this;
}
void SystemInfoResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SystemInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SystemInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SystemInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SystemInfoResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SystemInfoResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SystemInfoResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.SystemInfoResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SystemInfoResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SystemInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SystemInfoResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SystemInfoResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.SystemInfoResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SystemInfoResponse)
  return target;
}

size_t SystemInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SystemInfoResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.SystemInfoResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SystemInfoResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SystemInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemInfoResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SystemInfoResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SystemInfoResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SystemInfoResponse)
    MergeFrom(*source);
  }
}

void SystemInfoResponse::MergeFrom(const SystemInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SystemInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::SystemInfoResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void SystemInfoResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SystemInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemInfoResponse::CopyFrom(const SystemInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SystemInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemInfoResponse::IsInitialized() const {
  return true;
}

void SystemInfoResponse::InternalSwap(SystemInfoResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SystemInfoResponse, info_)
      + sizeof(SystemInfoResponse::info_)
      - PROTOBUF_FIELD_OFFSET(SystemInfoResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SystemInfoResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SystemStopRequest::_Internal {
 public:
};

SystemStopRequest::SystemStopRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SystemStopRequest)
}
SystemStopRequest::SystemStopRequest(const SystemStopRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SystemStopRequest)
}

void SystemStopRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SystemStopRequest::~SystemStopRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.SystemStopRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SystemStopRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SystemStopRequest::ArenaDtor(void* object) {
  SystemStopRequest* _this = reinterpret_cast< SystemStopRequest* >(object);
  (void)_this;
}
void SystemStopRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SystemStopRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SystemStopRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SystemStopRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SystemStopRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SystemStopRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SystemStopRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SystemStopRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SystemStopRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SystemStopRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SystemStopRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SystemStopRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SystemStopRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SystemStopRequest)
  return target;
}

size_t SystemStopRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SystemStopRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SystemStopRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SystemStopRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemStopRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SystemStopRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SystemStopRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SystemStopRequest)
    MergeFrom(*source);
  }
}

void SystemStopRequest::MergeFrom(const SystemStopRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SystemStopRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
}

void SystemStopRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SystemStopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemStopRequest::CopyFrom(const SystemStopRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SystemStopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemStopRequest::IsInitialized() const {
  return true;
}

void SystemStopRequest::InternalSwap(SystemStopRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SystemStopRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SystemStopResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const SystemStopResponse_Result* msg);
};

const ::grpc_cli::Status&
SystemStopResponse_Result::_Internal::status(const SystemStopResponse_Result* msg) {
  return *msg->status_;
}
SystemStopResponse_Result::SystemStopResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SystemStopResponse.Result)
}
SystemStopResponse_Result::SystemStopResponse_Result(const SystemStopResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SystemStopResponse.Result)
}

void SystemStopResponse_Result::SharedCtor() {
status_ = nullptr;
}

SystemStopResponse_Result::~SystemStopResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.SystemStopResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SystemStopResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void SystemStopResponse_Result::ArenaDtor(void* object) {
  SystemStopResponse_Result* _this = reinterpret_cast< SystemStopResponse_Result* >(object);
  (void)_this;
}
void SystemStopResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SystemStopResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SystemStopResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SystemStopResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SystemStopResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SystemStopResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SystemStopResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SystemStopResponse.Result)
  return target;
}

size_t SystemStopResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SystemStopResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SystemStopResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SystemStopResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemStopResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SystemStopResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SystemStopResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SystemStopResponse.Result)
    MergeFrom(*source);
  }
}

void SystemStopResponse_Result::MergeFrom(const SystemStopResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SystemStopResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void SystemStopResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SystemStopResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemStopResponse_Result::CopyFrom(const SystemStopResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SystemStopResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemStopResponse_Result::IsInitialized() const {
  return true;
}

void SystemStopResponse_Result::InternalSwap(SystemStopResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SystemStopResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SystemStopResponse::_Internal {
 public:
  static const ::grpc_cli::SystemStopResponse_Result& result(const SystemStopResponse* msg);
  static const ::grpc_cli::PosInfo& info(const SystemStopResponse* msg);
};

const ::grpc_cli::SystemStopResponse_Result&
SystemStopResponse::_Internal::result(const SystemStopResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
SystemStopResponse::_Internal::info(const SystemStopResponse* msg) {
  return *msg->info_;
}
SystemStopResponse::SystemStopResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SystemStopResponse)
}
SystemStopResponse::SystemStopResponse(const SystemStopResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::SystemStopResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SystemStopResponse)
}

void SystemStopResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

SystemStopResponse::~SystemStopResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.SystemStopResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SystemStopResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void SystemStopResponse::ArenaDtor(void* object) {
  SystemStopResponse* _this = reinterpret_cast< SystemStopResponse* >(object);
  (void)_this;
}
void SystemStopResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SystemStopResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SystemStopResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SystemStopResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SystemStopResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SystemStopResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SystemStopResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.SystemStopResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SystemStopResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SystemStopResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SystemStopResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SystemStopResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.SystemStopResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SystemStopResponse)
  return target;
}

size_t SystemStopResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SystemStopResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.SystemStopResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SystemStopResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SystemStopResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemStopResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SystemStopResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SystemStopResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SystemStopResponse)
    MergeFrom(*source);
  }
}

void SystemStopResponse::MergeFrom(const SystemStopResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SystemStopResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::SystemStopResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void SystemStopResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SystemStopResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemStopResponse::CopyFrom(const SystemStopResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SystemStopResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemStopResponse::IsInitialized() const {
  return true;
}

void SystemStopResponse::InternalSwap(SystemStopResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SystemStopResponse, info_)
      + sizeof(SystemStopResponse::info_)
      - PROTOBUF_FIELD_OFFSET(SystemStopResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SystemStopResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetSystemPropertyRequest::_Internal {
 public:
};

GetSystemPropertyRequest::GetSystemPropertyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.GetSystemPropertyRequest)
}
GetSystemPropertyRequest::GetSystemPropertyRequest(const GetSystemPropertyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.GetSystemPropertyRequest)
}

void GetSystemPropertyRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetSystemPropertyRequest::~GetSystemPropertyRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.GetSystemPropertyRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSystemPropertyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetSystemPropertyRequest::ArenaDtor(void* object) {
  GetSystemPropertyRequest* _this = reinterpret_cast< GetSystemPropertyRequest* >(object);
  (void)_this;
}
void GetSystemPropertyRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSystemPropertyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetSystemPropertyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.GetSystemPropertyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSystemPropertyRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.GetSystemPropertyRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.GetSystemPropertyRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.GetSystemPropertyRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSystemPropertyRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.GetSystemPropertyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.GetSystemPropertyRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.GetSystemPropertyRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.GetSystemPropertyRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.GetSystemPropertyRequest)
  return target;
}

size_t GetSystemPropertyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.GetSystemPropertyRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSystemPropertyRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.GetSystemPropertyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSystemPropertyRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSystemPropertyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.GetSystemPropertyRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.GetSystemPropertyRequest)
    MergeFrom(*source);
  }
}

void GetSystemPropertyRequest::MergeFrom(const GetSystemPropertyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.GetSystemPropertyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
}

void GetSystemPropertyRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.GetSystemPropertyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSystemPropertyRequest::CopyFrom(const GetSystemPropertyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.GetSystemPropertyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSystemPropertyRequest::IsInitialized() const {
  return true;
}

void GetSystemPropertyRequest::InternalSwap(GetSystemPropertyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSystemPropertyRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetSystemPropertyResponse_Result_Data::_Internal {
 public:
};

GetSystemPropertyResponse_Result_Data::GetSystemPropertyResponse_Result_Data(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.GetSystemPropertyResponse.Result.Data)
}
GetSystemPropertyResponse_Result_Data::GetSystemPropertyResponse_Result_Data(const GetSystemPropertyResponse_Result_Data& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  rebuild_policy_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rebuild_policy().empty()) {
    rebuild_policy_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rebuild_policy(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.GetSystemPropertyResponse.Result.Data)
}

void GetSystemPropertyResponse_Result_Data::SharedCtor() {
rebuild_policy_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetSystemPropertyResponse_Result_Data::~GetSystemPropertyResponse_Result_Data() {
  // @@protoc_insertion_point(destructor:grpc_cli.GetSystemPropertyResponse.Result.Data)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSystemPropertyResponse_Result_Data::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  rebuild_policy_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetSystemPropertyResponse_Result_Data::ArenaDtor(void* object) {
  GetSystemPropertyResponse_Result_Data* _this = reinterpret_cast< GetSystemPropertyResponse_Result_Data* >(object);
  (void)_this;
}
void GetSystemPropertyResponse_Result_Data::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSystemPropertyResponse_Result_Data::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetSystemPropertyResponse_Result_Data::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.GetSystemPropertyResponse.Result.Data)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rebuild_policy_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSystemPropertyResponse_Result_Data::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string rebuild_policy = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_rebuild_policy();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.GetSystemPropertyResponse.Result.Data.rebuild_policy"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSystemPropertyResponse_Result_Data::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.GetSystemPropertyResponse.Result.Data)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string rebuild_policy = 1;
  if (this->rebuild_policy().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rebuild_policy().data(), static_cast<int>(this->_internal_rebuild_policy().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.GetSystemPropertyResponse.Result.Data.rebuild_policy");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_rebuild_policy(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.GetSystemPropertyResponse.Result.Data)
  return target;
}

size_t GetSystemPropertyResponse_Result_Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.GetSystemPropertyResponse.Result.Data)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string rebuild_policy = 1;
  if (this->rebuild_policy().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rebuild_policy());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSystemPropertyResponse_Result_Data::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.GetSystemPropertyResponse.Result.Data)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSystemPropertyResponse_Result_Data* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSystemPropertyResponse_Result_Data>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.GetSystemPropertyResponse.Result.Data)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.GetSystemPropertyResponse.Result.Data)
    MergeFrom(*source);
  }
}

void GetSystemPropertyResponse_Result_Data::MergeFrom(const GetSystemPropertyResponse_Result_Data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.GetSystemPropertyResponse.Result.Data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rebuild_policy().size() > 0) {
    _internal_set_rebuild_policy(from._internal_rebuild_policy());
  }
}

void GetSystemPropertyResponse_Result_Data::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.GetSystemPropertyResponse.Result.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSystemPropertyResponse_Result_Data::CopyFrom(const GetSystemPropertyResponse_Result_Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.GetSystemPropertyResponse.Result.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSystemPropertyResponse_Result_Data::IsInitialized() const {
  return true;
}

void GetSystemPropertyResponse_Result_Data::InternalSwap(GetSystemPropertyResponse_Result_Data* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  rebuild_policy_.Swap(&other->rebuild_policy_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSystemPropertyResponse_Result_Data::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetSystemPropertyResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const GetSystemPropertyResponse_Result* msg);
  static const ::grpc_cli::GetSystemPropertyResponse_Result_Data& data(const GetSystemPropertyResponse_Result* msg);
};

const ::grpc_cli::Status&
GetSystemPropertyResponse_Result::_Internal::status(const GetSystemPropertyResponse_Result* msg) {
  return *msg->status_;
}
const ::grpc_cli::GetSystemPropertyResponse_Result_Data&
GetSystemPropertyResponse_Result::_Internal::data(const GetSystemPropertyResponse_Result* msg) {
  return *msg->data_;
}
GetSystemPropertyResponse_Result::GetSystemPropertyResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.GetSystemPropertyResponse.Result)
}
GetSystemPropertyResponse_Result::GetSystemPropertyResponse_Result(const GetSystemPropertyResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_data()) {
    data_ = new ::grpc_cli::GetSystemPropertyResponse_Result_Data(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.GetSystemPropertyResponse.Result)
}

void GetSystemPropertyResponse_Result::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&data_) -
    reinterpret_cast<char*>(&status_)) + sizeof(data_));
}

GetSystemPropertyResponse_Result::~GetSystemPropertyResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.GetSystemPropertyResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSystemPropertyResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete data_;
}

void GetSystemPropertyResponse_Result::ArenaDtor(void* object) {
  GetSystemPropertyResponse_Result* _this = reinterpret_cast< GetSystemPropertyResponse_Result* >(object);
  (void)_this;
}
void GetSystemPropertyResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSystemPropertyResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetSystemPropertyResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.GetSystemPropertyResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSystemPropertyResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.GetSystemPropertyResponse.Result.Data data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSystemPropertyResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.GetSystemPropertyResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .grpc_cli.GetSystemPropertyResponse.Result.Data data = 2;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.GetSystemPropertyResponse.Result)
  return target;
}

size_t GetSystemPropertyResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.GetSystemPropertyResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .grpc_cli.GetSystemPropertyResponse.Result.Data data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSystemPropertyResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.GetSystemPropertyResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSystemPropertyResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSystemPropertyResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.GetSystemPropertyResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.GetSystemPropertyResponse.Result)
    MergeFrom(*source);
  }
}

void GetSystemPropertyResponse_Result::MergeFrom(const GetSystemPropertyResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.GetSystemPropertyResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
  if (from.has_data()) {
    _internal_mutable_data()->::grpc_cli::GetSystemPropertyResponse_Result_Data::MergeFrom(from._internal_data());
  }
}

void GetSystemPropertyResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.GetSystemPropertyResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSystemPropertyResponse_Result::CopyFrom(const GetSystemPropertyResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.GetSystemPropertyResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSystemPropertyResponse_Result::IsInitialized() const {
  return true;
}

void GetSystemPropertyResponse_Result::InternalSwap(GetSystemPropertyResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetSystemPropertyResponse_Result, data_)
      + sizeof(GetSystemPropertyResponse_Result::data_)
      - PROTOBUF_FIELD_OFFSET(GetSystemPropertyResponse_Result, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSystemPropertyResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetSystemPropertyResponse::_Internal {
 public:
  static const ::grpc_cli::GetSystemPropertyResponse_Result& result(const GetSystemPropertyResponse* msg);
  static const ::grpc_cli::PosInfo& info(const GetSystemPropertyResponse* msg);
};

const ::grpc_cli::GetSystemPropertyResponse_Result&
GetSystemPropertyResponse::_Internal::result(const GetSystemPropertyResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
GetSystemPropertyResponse::_Internal::info(const GetSystemPropertyResponse* msg) {
  return *msg->info_;
}
GetSystemPropertyResponse::GetSystemPropertyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.GetSystemPropertyResponse)
}
GetSystemPropertyResponse::GetSystemPropertyResponse(const GetSystemPropertyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::GetSystemPropertyResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.GetSystemPropertyResponse)
}

void GetSystemPropertyResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

GetSystemPropertyResponse::~GetSystemPropertyResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.GetSystemPropertyResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetSystemPropertyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void GetSystemPropertyResponse::ArenaDtor(void* object) {
  GetSystemPropertyResponse* _this = reinterpret_cast< GetSystemPropertyResponse* >(object);
  (void)_this;
}
void GetSystemPropertyResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetSystemPropertyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetSystemPropertyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.GetSystemPropertyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSystemPropertyResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.GetSystemPropertyResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.GetSystemPropertyResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.GetSystemPropertyResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSystemPropertyResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.GetSystemPropertyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.GetSystemPropertyResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.GetSystemPropertyResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.GetSystemPropertyResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.GetSystemPropertyResponse)
  return target;
}

size_t GetSystemPropertyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.GetSystemPropertyResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.GetSystemPropertyResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSystemPropertyResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.GetSystemPropertyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSystemPropertyResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSystemPropertyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.GetSystemPropertyResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.GetSystemPropertyResponse)
    MergeFrom(*source);
  }
}

void GetSystemPropertyResponse::MergeFrom(const GetSystemPropertyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.GetSystemPropertyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::GetSystemPropertyResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void GetSystemPropertyResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.GetSystemPropertyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSystemPropertyResponse::CopyFrom(const GetSystemPropertyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.GetSystemPropertyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSystemPropertyResponse::IsInitialized() const {
  return true;
}

void GetSystemPropertyResponse::InternalSwap(GetSystemPropertyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetSystemPropertyResponse, info_)
      + sizeof(GetSystemPropertyResponse::info_)
      - PROTOBUF_FIELD_OFFSET(GetSystemPropertyResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSystemPropertyResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetSystemPropertyRequest_Param::_Internal {
 public:
};

SetSystemPropertyRequest_Param::SetSystemPropertyRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SetSystemPropertyRequest.Param)
}
SetSystemPropertyRequest_Param::SetSystemPropertyRequest_Param(const SetSystemPropertyRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  level_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_level().empty()) {
    level_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_level(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SetSystemPropertyRequest.Param)
}

void SetSystemPropertyRequest_Param::SharedCtor() {
level_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SetSystemPropertyRequest_Param::~SetSystemPropertyRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.SetSystemPropertyRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetSystemPropertyRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  level_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SetSystemPropertyRequest_Param::ArenaDtor(void* object) {
  SetSystemPropertyRequest_Param* _this = reinterpret_cast< SetSystemPropertyRequest_Param* >(object);
  (void)_this;
}
void SetSystemPropertyRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetSystemPropertyRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetSystemPropertyRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SetSystemPropertyRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  level_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetSystemPropertyRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string level = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_level();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetSystemPropertyRequest.Param.level"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetSystemPropertyRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SetSystemPropertyRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string level = 1;
  if (this->level().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_level().data(), static_cast<int>(this->_internal_level().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetSystemPropertyRequest.Param.level");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SetSystemPropertyRequest.Param)
  return target;
}

size_t SetSystemPropertyRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SetSystemPropertyRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string level = 1;
  if (this->level().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_level());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetSystemPropertyRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SetSystemPropertyRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const SetSystemPropertyRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetSystemPropertyRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SetSystemPropertyRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SetSystemPropertyRequest.Param)
    MergeFrom(*source);
  }
}

void SetSystemPropertyRequest_Param::MergeFrom(const SetSystemPropertyRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SetSystemPropertyRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.level().size() > 0) {
    _internal_set_level(from._internal_level());
  }
}

void SetSystemPropertyRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SetSystemPropertyRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetSystemPropertyRequest_Param::CopyFrom(const SetSystemPropertyRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SetSystemPropertyRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetSystemPropertyRequest_Param::IsInitialized() const {
  return true;
}

void SetSystemPropertyRequest_Param::InternalSwap(SetSystemPropertyRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  level_.Swap(&other->level_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SetSystemPropertyRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetSystemPropertyRequest::_Internal {
 public:
  static const ::grpc_cli::SetSystemPropertyRequest_Param& param(const SetSystemPropertyRequest* msg);
};

const ::grpc_cli::SetSystemPropertyRequest_Param&
SetSystemPropertyRequest::_Internal::param(const SetSystemPropertyRequest* msg) {
  return *msg->param_;
}
SetSystemPropertyRequest::SetSystemPropertyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SetSystemPropertyRequest)
}
SetSystemPropertyRequest::SetSystemPropertyRequest(const SetSystemPropertyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::SetSystemPropertyRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SetSystemPropertyRequest)
}

void SetSystemPropertyRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

SetSystemPropertyRequest::~SetSystemPropertyRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.SetSystemPropertyRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetSystemPropertyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void SetSystemPropertyRequest::ArenaDtor(void* object) {
  SetSystemPropertyRequest* _this = reinterpret_cast< SetSystemPropertyRequest* >(object);
  (void)_this;
}
void SetSystemPropertyRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetSystemPropertyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetSystemPropertyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SetSystemPropertyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetSystemPropertyRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetSystemPropertyRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetSystemPropertyRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetSystemPropertyRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.SetSystemPropertyRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetSystemPropertyRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SetSystemPropertyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetSystemPropertyRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetSystemPropertyRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetSystemPropertyRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.SetSystemPropertyRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SetSystemPropertyRequest)
  return target;
}

size_t SetSystemPropertyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SetSystemPropertyRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.SetSystemPropertyRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetSystemPropertyRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SetSystemPropertyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetSystemPropertyRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetSystemPropertyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SetSystemPropertyRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SetSystemPropertyRequest)
    MergeFrom(*source);
  }
}

void SetSystemPropertyRequest::MergeFrom(const SetSystemPropertyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SetSystemPropertyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::SetSystemPropertyRequest_Param::MergeFrom(from._internal_param());
  }
}

void SetSystemPropertyRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SetSystemPropertyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetSystemPropertyRequest::CopyFrom(const SetSystemPropertyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SetSystemPropertyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetSystemPropertyRequest::IsInitialized() const {
  return true;
}

void SetSystemPropertyRequest::InternalSwap(SetSystemPropertyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetSystemPropertyRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetSystemPropertyResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const SetSystemPropertyResponse_Result* msg);
};

const ::grpc_cli::Status&
SetSystemPropertyResponse_Result::_Internal::status(const SetSystemPropertyResponse_Result* msg) {
  return *msg->status_;
}
SetSystemPropertyResponse_Result::SetSystemPropertyResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SetSystemPropertyResponse.Result)
}
SetSystemPropertyResponse_Result::SetSystemPropertyResponse_Result(const SetSystemPropertyResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SetSystemPropertyResponse.Result)
}

void SetSystemPropertyResponse_Result::SharedCtor() {
status_ = nullptr;
}

SetSystemPropertyResponse_Result::~SetSystemPropertyResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.SetSystemPropertyResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetSystemPropertyResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void SetSystemPropertyResponse_Result::ArenaDtor(void* object) {
  SetSystemPropertyResponse_Result* _this = reinterpret_cast< SetSystemPropertyResponse_Result* >(object);
  (void)_this;
}
void SetSystemPropertyResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetSystemPropertyResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetSystemPropertyResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SetSystemPropertyResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetSystemPropertyResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetSystemPropertyResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SetSystemPropertyResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SetSystemPropertyResponse.Result)
  return target;
}

size_t SetSystemPropertyResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SetSystemPropertyResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetSystemPropertyResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SetSystemPropertyResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const SetSystemPropertyResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetSystemPropertyResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SetSystemPropertyResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SetSystemPropertyResponse.Result)
    MergeFrom(*source);
  }
}

void SetSystemPropertyResponse_Result::MergeFrom(const SetSystemPropertyResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SetSystemPropertyResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void SetSystemPropertyResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SetSystemPropertyResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetSystemPropertyResponse_Result::CopyFrom(const SetSystemPropertyResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SetSystemPropertyResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetSystemPropertyResponse_Result::IsInitialized() const {
  return true;
}

void SetSystemPropertyResponse_Result::InternalSwap(SetSystemPropertyResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetSystemPropertyResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SetSystemPropertyResponse::_Internal {
 public:
  static const ::grpc_cli::SetSystemPropertyResponse_Result& result(const SetSystemPropertyResponse* msg);
  static const ::grpc_cli::PosInfo& info(const SetSystemPropertyResponse* msg);
};

const ::grpc_cli::SetSystemPropertyResponse_Result&
SetSystemPropertyResponse::_Internal::result(const SetSystemPropertyResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
SetSystemPropertyResponse::_Internal::info(const SetSystemPropertyResponse* msg) {
  return *msg->info_;
}
SetSystemPropertyResponse::SetSystemPropertyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.SetSystemPropertyResponse)
}
SetSystemPropertyResponse::SetSystemPropertyResponse(const SetSystemPropertyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::SetSystemPropertyResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.SetSystemPropertyResponse)
}

void SetSystemPropertyResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

SetSystemPropertyResponse::~SetSystemPropertyResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.SetSystemPropertyResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetSystemPropertyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void SetSystemPropertyResponse::ArenaDtor(void* object) {
  SetSystemPropertyResponse* _this = reinterpret_cast< SetSystemPropertyResponse* >(object);
  (void)_this;
}
void SetSystemPropertyResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetSystemPropertyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetSystemPropertyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.SetSystemPropertyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetSystemPropertyResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetSystemPropertyResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.SetSystemPropertyResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.SetSystemPropertyResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetSystemPropertyResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.SetSystemPropertyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetSystemPropertyResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.SetSystemPropertyResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.SetSystemPropertyResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.SetSystemPropertyResponse)
  return target;
}

size_t SetSystemPropertyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.SetSystemPropertyResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.SetSystemPropertyResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetSystemPropertyResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.SetSystemPropertyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetSystemPropertyResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetSystemPropertyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.SetSystemPropertyResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.SetSystemPropertyResponse)
    MergeFrom(*source);
  }
}

void SetSystemPropertyResponse::MergeFrom(const SetSystemPropertyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.SetSystemPropertyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::SetSystemPropertyResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void SetSystemPropertyResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.SetSystemPropertyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetSystemPropertyResponse::CopyFrom(const SetSystemPropertyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.SetSystemPropertyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetSystemPropertyResponse::IsInitialized() const {
  return true;
}

void SetSystemPropertyResponse::InternalSwap(SetSystemPropertyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetSystemPropertyResponse, info_)
      + sizeof(SetSystemPropertyResponse::info_)
      - PROTOBUF_FIELD_OFFSET(SetSystemPropertyResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetSystemPropertyResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StartTelemetryRequest::_Internal {
 public:
};

StartTelemetryRequest::StartTelemetryRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.StartTelemetryRequest)
}
StartTelemetryRequest::StartTelemetryRequest(const StartTelemetryRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.StartTelemetryRequest)
}

void StartTelemetryRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StartTelemetryRequest::~StartTelemetryRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.StartTelemetryRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StartTelemetryRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StartTelemetryRequest::ArenaDtor(void* object) {
  StartTelemetryRequest* _this = reinterpret_cast< StartTelemetryRequest* >(object);
  (void)_this;
}
void StartTelemetryRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartTelemetryRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StartTelemetryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.StartTelemetryRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartTelemetryRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StartTelemetryRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StartTelemetryRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StartTelemetryRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartTelemetryRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.StartTelemetryRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StartTelemetryRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StartTelemetryRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StartTelemetryRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.StartTelemetryRequest)
  return target;
}

size_t StartTelemetryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.StartTelemetryRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartTelemetryRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.StartTelemetryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StartTelemetryRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StartTelemetryRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.StartTelemetryRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.StartTelemetryRequest)
    MergeFrom(*source);
  }
}

void StartTelemetryRequest::MergeFrom(const StartTelemetryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.StartTelemetryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
}

void StartTelemetryRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.StartTelemetryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartTelemetryRequest::CopyFrom(const StartTelemetryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.StartTelemetryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartTelemetryRequest::IsInitialized() const {
  return true;
}

void StartTelemetryRequest::InternalSwap(StartTelemetryRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata StartTelemetryRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StartTelemetryResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const StartTelemetryResponse_Result* msg);
};

const ::grpc_cli::Status&
StartTelemetryResponse_Result::_Internal::status(const StartTelemetryResponse_Result* msg) {
  return *msg->status_;
}
StartTelemetryResponse_Result::StartTelemetryResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.StartTelemetryResponse.Result)
}
StartTelemetryResponse_Result::StartTelemetryResponse_Result(const StartTelemetryResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.StartTelemetryResponse.Result)
}

void StartTelemetryResponse_Result::SharedCtor() {
status_ = nullptr;
}

StartTelemetryResponse_Result::~StartTelemetryResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.StartTelemetryResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StartTelemetryResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void StartTelemetryResponse_Result::ArenaDtor(void* object) {
  StartTelemetryResponse_Result* _this = reinterpret_cast< StartTelemetryResponse_Result* >(object);
  (void)_this;
}
void StartTelemetryResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartTelemetryResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StartTelemetryResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.StartTelemetryResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartTelemetryResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartTelemetryResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.StartTelemetryResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.StartTelemetryResponse.Result)
  return target;
}

size_t StartTelemetryResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.StartTelemetryResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartTelemetryResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.StartTelemetryResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const StartTelemetryResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StartTelemetryResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.StartTelemetryResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.StartTelemetryResponse.Result)
    MergeFrom(*source);
  }
}

void StartTelemetryResponse_Result::MergeFrom(const StartTelemetryResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.StartTelemetryResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void StartTelemetryResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.StartTelemetryResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartTelemetryResponse_Result::CopyFrom(const StartTelemetryResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.StartTelemetryResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartTelemetryResponse_Result::IsInitialized() const {
  return true;
}

void StartTelemetryResponse_Result::InternalSwap(StartTelemetryResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StartTelemetryResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StartTelemetryResponse::_Internal {
 public:
  static const ::grpc_cli::StartTelemetryResponse_Result& result(const StartTelemetryResponse* msg);
  static const ::grpc_cli::PosInfo& info(const StartTelemetryResponse* msg);
};

const ::grpc_cli::StartTelemetryResponse_Result&
StartTelemetryResponse::_Internal::result(const StartTelemetryResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
StartTelemetryResponse::_Internal::info(const StartTelemetryResponse* msg) {
  return *msg->info_;
}
StartTelemetryResponse::StartTelemetryResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.StartTelemetryResponse)
}
StartTelemetryResponse::StartTelemetryResponse(const StartTelemetryResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::StartTelemetryResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.StartTelemetryResponse)
}

void StartTelemetryResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

StartTelemetryResponse::~StartTelemetryResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.StartTelemetryResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StartTelemetryResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void StartTelemetryResponse::ArenaDtor(void* object) {
  StartTelemetryResponse* _this = reinterpret_cast< StartTelemetryResponse* >(object);
  (void)_this;
}
void StartTelemetryResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartTelemetryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StartTelemetryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.StartTelemetryResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartTelemetryResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StartTelemetryResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StartTelemetryResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.StartTelemetryResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartTelemetryResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.StartTelemetryResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StartTelemetryResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StartTelemetryResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.StartTelemetryResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.StartTelemetryResponse)
  return target;
}

size_t StartTelemetryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.StartTelemetryResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.StartTelemetryResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartTelemetryResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.StartTelemetryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StartTelemetryResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StartTelemetryResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.StartTelemetryResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.StartTelemetryResponse)
    MergeFrom(*source);
  }
}

void StartTelemetryResponse::MergeFrom(const StartTelemetryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.StartTelemetryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::StartTelemetryResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void StartTelemetryResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.StartTelemetryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartTelemetryResponse::CopyFrom(const StartTelemetryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.StartTelemetryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartTelemetryResponse::IsInitialized() const {
  return true;
}

void StartTelemetryResponse::InternalSwap(StartTelemetryResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StartTelemetryResponse, info_)
      + sizeof(StartTelemetryResponse::info_)
      - PROTOBUF_FIELD_OFFSET(StartTelemetryResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StartTelemetryResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StopTelemetryRequest::_Internal {
 public:
};

StopTelemetryRequest::StopTelemetryRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.StopTelemetryRequest)
}
StopTelemetryRequest::StopTelemetryRequest(const StopTelemetryRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.StopTelemetryRequest)
}

void StopTelemetryRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StopTelemetryRequest::~StopTelemetryRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.StopTelemetryRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopTelemetryRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StopTelemetryRequest::ArenaDtor(void* object) {
  StopTelemetryRequest* _this = reinterpret_cast< StopTelemetryRequest* >(object);
  (void)_this;
}
void StopTelemetryRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopTelemetryRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StopTelemetryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.StopTelemetryRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopTelemetryRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StopTelemetryRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StopTelemetryRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StopTelemetryRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopTelemetryRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.StopTelemetryRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StopTelemetryRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StopTelemetryRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StopTelemetryRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.StopTelemetryRequest)
  return target;
}

size_t StopTelemetryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.StopTelemetryRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopTelemetryRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.StopTelemetryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StopTelemetryRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopTelemetryRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.StopTelemetryRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.StopTelemetryRequest)
    MergeFrom(*source);
  }
}

void StopTelemetryRequest::MergeFrom(const StopTelemetryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.StopTelemetryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
}

void StopTelemetryRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.StopTelemetryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopTelemetryRequest::CopyFrom(const StopTelemetryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.StopTelemetryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopTelemetryRequest::IsInitialized() const {
  return true;
}

void StopTelemetryRequest::InternalSwap(StopTelemetryRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata StopTelemetryRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StopTelemetryResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const StopTelemetryResponse_Result* msg);
};

const ::grpc_cli::Status&
StopTelemetryResponse_Result::_Internal::status(const StopTelemetryResponse_Result* msg) {
  return *msg->status_;
}
StopTelemetryResponse_Result::StopTelemetryResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.StopTelemetryResponse.Result)
}
StopTelemetryResponse_Result::StopTelemetryResponse_Result(const StopTelemetryResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.StopTelemetryResponse.Result)
}

void StopTelemetryResponse_Result::SharedCtor() {
status_ = nullptr;
}

StopTelemetryResponse_Result::~StopTelemetryResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.StopTelemetryResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopTelemetryResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void StopTelemetryResponse_Result::ArenaDtor(void* object) {
  StopTelemetryResponse_Result* _this = reinterpret_cast< StopTelemetryResponse_Result* >(object);
  (void)_this;
}
void StopTelemetryResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopTelemetryResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StopTelemetryResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.StopTelemetryResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopTelemetryResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopTelemetryResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.StopTelemetryResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.StopTelemetryResponse.Result)
  return target;
}

size_t StopTelemetryResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.StopTelemetryResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopTelemetryResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.StopTelemetryResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const StopTelemetryResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopTelemetryResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.StopTelemetryResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.StopTelemetryResponse.Result)
    MergeFrom(*source);
  }
}

void StopTelemetryResponse_Result::MergeFrom(const StopTelemetryResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.StopTelemetryResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void StopTelemetryResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.StopTelemetryResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopTelemetryResponse_Result::CopyFrom(const StopTelemetryResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.StopTelemetryResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopTelemetryResponse_Result::IsInitialized() const {
  return true;
}

void StopTelemetryResponse_Result::InternalSwap(StopTelemetryResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StopTelemetryResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StopTelemetryResponse::_Internal {
 public:
  static const ::grpc_cli::StopTelemetryResponse_Result& result(const StopTelemetryResponse* msg);
  static const ::grpc_cli::PosInfo& info(const StopTelemetryResponse* msg);
};

const ::grpc_cli::StopTelemetryResponse_Result&
StopTelemetryResponse::_Internal::result(const StopTelemetryResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
StopTelemetryResponse::_Internal::info(const StopTelemetryResponse* msg) {
  return *msg->info_;
}
StopTelemetryResponse::StopTelemetryResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.StopTelemetryResponse)
}
StopTelemetryResponse::StopTelemetryResponse(const StopTelemetryResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::StopTelemetryResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.StopTelemetryResponse)
}

void StopTelemetryResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

StopTelemetryResponse::~StopTelemetryResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.StopTelemetryResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopTelemetryResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void StopTelemetryResponse::ArenaDtor(void* object) {
  StopTelemetryResponse* _this = reinterpret_cast< StopTelemetryResponse* >(object);
  (void)_this;
}
void StopTelemetryResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopTelemetryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StopTelemetryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.StopTelemetryResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopTelemetryResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StopTelemetryResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StopTelemetryResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.StopTelemetryResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopTelemetryResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.StopTelemetryResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StopTelemetryResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StopTelemetryResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.StopTelemetryResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.StopTelemetryResponse)
  return target;
}

size_t StopTelemetryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.StopTelemetryResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.StopTelemetryResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopTelemetryResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.StopTelemetryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StopTelemetryResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopTelemetryResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.StopTelemetryResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.StopTelemetryResponse)
    MergeFrom(*source);
  }
}

void StopTelemetryResponse::MergeFrom(const StopTelemetryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.StopTelemetryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::StopTelemetryResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void StopTelemetryResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.StopTelemetryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopTelemetryResponse::CopyFrom(const StopTelemetryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.StopTelemetryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopTelemetryResponse::IsInitialized() const {
  return true;
}

void StopTelemetryResponse::InternalSwap(StopTelemetryResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StopTelemetryResponse, info_)
      + sizeof(StopTelemetryResponse::info_)
      - PROTOBUF_FIELD_OFFSET(StopTelemetryResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StopTelemetryResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ResetEventWrrRequest::_Internal {
 public:
};

ResetEventWrrRequest::ResetEventWrrRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ResetEventWrrRequest)
}
ResetEventWrrRequest::ResetEventWrrRequest(const ResetEventWrrRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ResetEventWrrRequest)
}

void ResetEventWrrRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ResetEventWrrRequest::~ResetEventWrrRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.ResetEventWrrRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResetEventWrrRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResetEventWrrRequest::ArenaDtor(void* object) {
  ResetEventWrrRequest* _this = reinterpret_cast< ResetEventWrrRequest* >(object);
  (void)_this;
}
void ResetEventWrrRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResetEventWrrRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResetEventWrrRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ResetEventWrrRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResetEventWrrRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ResetEventWrrRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ResetEventWrrRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ResetEventWrrRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResetEventWrrRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ResetEventWrrRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ResetEventWrrRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ResetEventWrrRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ResetEventWrrRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ResetEventWrrRequest)
  return target;
}

size_t ResetEventWrrRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ResetEventWrrRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetEventWrrRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ResetEventWrrRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetEventWrrRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResetEventWrrRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ResetEventWrrRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ResetEventWrrRequest)
    MergeFrom(*source);
  }
}

void ResetEventWrrRequest::MergeFrom(const ResetEventWrrRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ResetEventWrrRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
}

void ResetEventWrrRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ResetEventWrrRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetEventWrrRequest::CopyFrom(const ResetEventWrrRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ResetEventWrrRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetEventWrrRequest::IsInitialized() const {
  return true;
}

void ResetEventWrrRequest::InternalSwap(ResetEventWrrRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ResetEventWrrRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ResetEventWrrResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const ResetEventWrrResponse_Result* msg);
};

const ::grpc_cli::Status&
ResetEventWrrResponse_Result::_Internal::status(const ResetEventWrrResponse_Result* msg) {
  return *msg->status_;
}
ResetEventWrrResponse_Result::ResetEventWrrResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ResetEventWrrResponse.Result)
}
ResetEventWrrResponse_Result::ResetEventWrrResponse_Result(const ResetEventWrrResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ResetEventWrrResponse.Result)
}

void ResetEventWrrResponse_Result::SharedCtor() {
status_ = nullptr;
}

ResetEventWrrResponse_Result::~ResetEventWrrResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.ResetEventWrrResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResetEventWrrResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void ResetEventWrrResponse_Result::ArenaDtor(void* object) {
  ResetEventWrrResponse_Result* _this = reinterpret_cast< ResetEventWrrResponse_Result* >(object);
  (void)_this;
}
void ResetEventWrrResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResetEventWrrResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResetEventWrrResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ResetEventWrrResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResetEventWrrResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResetEventWrrResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ResetEventWrrResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ResetEventWrrResponse.Result)
  return target;
}

size_t ResetEventWrrResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ResetEventWrrResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetEventWrrResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ResetEventWrrResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetEventWrrResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResetEventWrrResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ResetEventWrrResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ResetEventWrrResponse.Result)
    MergeFrom(*source);
  }
}

void ResetEventWrrResponse_Result::MergeFrom(const ResetEventWrrResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ResetEventWrrResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void ResetEventWrrResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ResetEventWrrResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetEventWrrResponse_Result::CopyFrom(const ResetEventWrrResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ResetEventWrrResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetEventWrrResponse_Result::IsInitialized() const {
  return true;
}

void ResetEventWrrResponse_Result::InternalSwap(ResetEventWrrResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResetEventWrrResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ResetEventWrrResponse::_Internal {
 public:
  static const ::grpc_cli::ResetEventWrrResponse_Result& result(const ResetEventWrrResponse* msg);
  static const ::grpc_cli::PosInfo& info(const ResetEventWrrResponse* msg);
};

const ::grpc_cli::ResetEventWrrResponse_Result&
ResetEventWrrResponse::_Internal::result(const ResetEventWrrResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
ResetEventWrrResponse::_Internal::info(const ResetEventWrrResponse* msg) {
  return *msg->info_;
}
ResetEventWrrResponse::ResetEventWrrResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ResetEventWrrResponse)
}
ResetEventWrrResponse::ResetEventWrrResponse(const ResetEventWrrResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::ResetEventWrrResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ResetEventWrrResponse)
}

void ResetEventWrrResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

ResetEventWrrResponse::~ResetEventWrrResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.ResetEventWrrResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResetEventWrrResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void ResetEventWrrResponse::ArenaDtor(void* object) {
  ResetEventWrrResponse* _this = reinterpret_cast< ResetEventWrrResponse* >(object);
  (void)_this;
}
void ResetEventWrrResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResetEventWrrResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResetEventWrrResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ResetEventWrrResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResetEventWrrResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ResetEventWrrResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ResetEventWrrResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ResetEventWrrResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResetEventWrrResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ResetEventWrrResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ResetEventWrrResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ResetEventWrrResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.ResetEventWrrResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ResetEventWrrResponse)
  return target;
}

size_t ResetEventWrrResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ResetEventWrrResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.ResetEventWrrResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetEventWrrResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ResetEventWrrResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetEventWrrResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResetEventWrrResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ResetEventWrrResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ResetEventWrrResponse)
    MergeFrom(*source);
  }
}

void ResetEventWrrResponse::MergeFrom(const ResetEventWrrResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ResetEventWrrResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::ResetEventWrrResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void ResetEventWrrResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ResetEventWrrResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetEventWrrResponse::CopyFrom(const ResetEventWrrResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ResetEventWrrResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetEventWrrResponse::IsInitialized() const {
  return true;
}

void ResetEventWrrResponse::InternalSwap(ResetEventWrrResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResetEventWrrResponse, info_)
      + sizeof(ResetEventWrrResponse::info_)
      - PROTOBUF_FIELD_OFFSET(ResetEventWrrResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResetEventWrrResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ResetMbrRequest::_Internal {
 public:
};

ResetMbrRequest::ResetMbrRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ResetMbrRequest)
}
ResetMbrRequest::ResetMbrRequest(const ResetMbrRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ResetMbrRequest)
}

void ResetMbrRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ResetMbrRequest::~ResetMbrRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.ResetMbrRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResetMbrRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResetMbrRequest::ArenaDtor(void* object) {
  ResetMbrRequest* _this = reinterpret_cast< ResetMbrRequest* >(object);
  (void)_this;
}
void ResetMbrRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResetMbrRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResetMbrRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ResetMbrRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResetMbrRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ResetMbrRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ResetMbrRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ResetMbrRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResetMbrRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ResetMbrRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ResetMbrRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ResetMbrRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ResetMbrRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ResetMbrRequest)
  return target;
}

size_t ResetMbrRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ResetMbrRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetMbrRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ResetMbrRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetMbrRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResetMbrRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ResetMbrRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ResetMbrRequest)
    MergeFrom(*source);
  }
}

void ResetMbrRequest::MergeFrom(const ResetMbrRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ResetMbrRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
}

void ResetMbrRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ResetMbrRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetMbrRequest::CopyFrom(const ResetMbrRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ResetMbrRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetMbrRequest::IsInitialized() const {
  return true;
}

void ResetMbrRequest::InternalSwap(ResetMbrRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ResetMbrRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ResetMbrResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const ResetMbrResponse_Result* msg);
};

const ::grpc_cli::Status&
ResetMbrResponse_Result::_Internal::status(const ResetMbrResponse_Result* msg) {
  return *msg->status_;
}
ResetMbrResponse_Result::ResetMbrResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ResetMbrResponse.Result)
}
ResetMbrResponse_Result::ResetMbrResponse_Result(const ResetMbrResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ResetMbrResponse.Result)
}

void ResetMbrResponse_Result::SharedCtor() {
status_ = nullptr;
}

ResetMbrResponse_Result::~ResetMbrResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.ResetMbrResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResetMbrResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void ResetMbrResponse_Result::ArenaDtor(void* object) {
  ResetMbrResponse_Result* _this = reinterpret_cast< ResetMbrResponse_Result* >(object);
  (void)_this;
}
void ResetMbrResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResetMbrResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResetMbrResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ResetMbrResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResetMbrResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResetMbrResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ResetMbrResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ResetMbrResponse.Result)
  return target;
}

size_t ResetMbrResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ResetMbrResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetMbrResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ResetMbrResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetMbrResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResetMbrResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ResetMbrResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ResetMbrResponse.Result)
    MergeFrom(*source);
  }
}

void ResetMbrResponse_Result::MergeFrom(const ResetMbrResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ResetMbrResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void ResetMbrResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ResetMbrResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetMbrResponse_Result::CopyFrom(const ResetMbrResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ResetMbrResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetMbrResponse_Result::IsInitialized() const {
  return true;
}

void ResetMbrResponse_Result::InternalSwap(ResetMbrResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResetMbrResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ResetMbrResponse::_Internal {
 public:
  static const ::grpc_cli::ResetMbrResponse_Result& result(const ResetMbrResponse* msg);
  static const ::grpc_cli::PosInfo& info(const ResetMbrResponse* msg);
};

const ::grpc_cli::ResetMbrResponse_Result&
ResetMbrResponse::_Internal::result(const ResetMbrResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
ResetMbrResponse::_Internal::info(const ResetMbrResponse* msg) {
  return *msg->info_;
}
ResetMbrResponse::ResetMbrResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ResetMbrResponse)
}
ResetMbrResponse::ResetMbrResponse(const ResetMbrResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::ResetMbrResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ResetMbrResponse)
}

void ResetMbrResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

ResetMbrResponse::~ResetMbrResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.ResetMbrResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResetMbrResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void ResetMbrResponse::ArenaDtor(void* object) {
  ResetMbrResponse* _this = reinterpret_cast< ResetMbrResponse* >(object);
  (void)_this;
}
void ResetMbrResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResetMbrResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResetMbrResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ResetMbrResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResetMbrResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ResetMbrResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ResetMbrResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ResetMbrResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResetMbrResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ResetMbrResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ResetMbrResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ResetMbrResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.ResetMbrResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ResetMbrResponse)
  return target;
}

size_t ResetMbrResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ResetMbrResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.ResetMbrResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResetMbrResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ResetMbrResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetMbrResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResetMbrResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ResetMbrResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ResetMbrResponse)
    MergeFrom(*source);
  }
}

void ResetMbrResponse::MergeFrom(const ResetMbrResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ResetMbrResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::ResetMbrResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void ResetMbrResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ResetMbrResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetMbrResponse::CopyFrom(const ResetMbrResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ResetMbrResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetMbrResponse::IsInitialized() const {
  return true;
}

void ResetMbrResponse::InternalSwap(ResetMbrResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResetMbrResponse, info_)
      + sizeof(ResetMbrResponse::info_)
      - PROTOBUF_FIELD_OFFSET(ResetMbrResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResetMbrResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StopRebuildingRequest_Param::_Internal {
 public:
};

StopRebuildingRequest_Param::StopRebuildingRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.StopRebuildingRequest.Param)
}
StopRebuildingRequest_Param::StopRebuildingRequest_Param(const StopRebuildingRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.StopRebuildingRequest.Param)
}

void StopRebuildingRequest_Param::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StopRebuildingRequest_Param::~StopRebuildingRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.StopRebuildingRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopRebuildingRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StopRebuildingRequest_Param::ArenaDtor(void* object) {
  StopRebuildingRequest_Param* _this = reinterpret_cast< StopRebuildingRequest_Param* >(object);
  (void)_this;
}
void StopRebuildingRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopRebuildingRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StopRebuildingRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.StopRebuildingRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopRebuildingRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StopRebuildingRequest.Param.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopRebuildingRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.StopRebuildingRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StopRebuildingRequest.Param.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.StopRebuildingRequest.Param)
  return target;
}

size_t StopRebuildingRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.StopRebuildingRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopRebuildingRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.StopRebuildingRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const StopRebuildingRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopRebuildingRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.StopRebuildingRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.StopRebuildingRequest.Param)
    MergeFrom(*source);
  }
}

void StopRebuildingRequest_Param::MergeFrom(const StopRebuildingRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.StopRebuildingRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void StopRebuildingRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.StopRebuildingRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopRebuildingRequest_Param::CopyFrom(const StopRebuildingRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.StopRebuildingRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopRebuildingRequest_Param::IsInitialized() const {
  return true;
}

void StopRebuildingRequest_Param::InternalSwap(StopRebuildingRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata StopRebuildingRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StopRebuildingRequest::_Internal {
 public:
  static const ::grpc_cli::StopRebuildingRequest_Param& param(const StopRebuildingRequest* msg);
};

const ::grpc_cli::StopRebuildingRequest_Param&
StopRebuildingRequest::_Internal::param(const StopRebuildingRequest* msg) {
  return *msg->param_;
}
StopRebuildingRequest::StopRebuildingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.StopRebuildingRequest)
}
StopRebuildingRequest::StopRebuildingRequest(const StopRebuildingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::StopRebuildingRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.StopRebuildingRequest)
}

void StopRebuildingRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

StopRebuildingRequest::~StopRebuildingRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.StopRebuildingRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopRebuildingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void StopRebuildingRequest::ArenaDtor(void* object) {
  StopRebuildingRequest* _this = reinterpret_cast< StopRebuildingRequest* >(object);
  (void)_this;
}
void StopRebuildingRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopRebuildingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StopRebuildingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.StopRebuildingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopRebuildingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StopRebuildingRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StopRebuildingRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StopRebuildingRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.StopRebuildingRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopRebuildingRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.StopRebuildingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StopRebuildingRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StopRebuildingRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StopRebuildingRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.StopRebuildingRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.StopRebuildingRequest)
  return target;
}

size_t StopRebuildingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.StopRebuildingRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.StopRebuildingRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopRebuildingRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.StopRebuildingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StopRebuildingRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopRebuildingRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.StopRebuildingRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.StopRebuildingRequest)
    MergeFrom(*source);
  }
}

void StopRebuildingRequest::MergeFrom(const StopRebuildingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.StopRebuildingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::StopRebuildingRequest_Param::MergeFrom(from._internal_param());
  }
}

void StopRebuildingRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.StopRebuildingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopRebuildingRequest::CopyFrom(const StopRebuildingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.StopRebuildingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopRebuildingRequest::IsInitialized() const {
  return true;
}

void StopRebuildingRequest::InternalSwap(StopRebuildingRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StopRebuildingRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StopRebuildingResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const StopRebuildingResponse_Result* msg);
};

const ::grpc_cli::Status&
StopRebuildingResponse_Result::_Internal::status(const StopRebuildingResponse_Result* msg) {
  return *msg->status_;
}
StopRebuildingResponse_Result::StopRebuildingResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.StopRebuildingResponse.Result)
}
StopRebuildingResponse_Result::StopRebuildingResponse_Result(const StopRebuildingResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.StopRebuildingResponse.Result)
}

void StopRebuildingResponse_Result::SharedCtor() {
status_ = nullptr;
}

StopRebuildingResponse_Result::~StopRebuildingResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.StopRebuildingResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopRebuildingResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void StopRebuildingResponse_Result::ArenaDtor(void* object) {
  StopRebuildingResponse_Result* _this = reinterpret_cast< StopRebuildingResponse_Result* >(object);
  (void)_this;
}
void StopRebuildingResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopRebuildingResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StopRebuildingResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.StopRebuildingResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopRebuildingResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopRebuildingResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.StopRebuildingResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.StopRebuildingResponse.Result)
  return target;
}

size_t StopRebuildingResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.StopRebuildingResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopRebuildingResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.StopRebuildingResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const StopRebuildingResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopRebuildingResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.StopRebuildingResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.StopRebuildingResponse.Result)
    MergeFrom(*source);
  }
}

void StopRebuildingResponse_Result::MergeFrom(const StopRebuildingResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.StopRebuildingResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void StopRebuildingResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.StopRebuildingResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopRebuildingResponse_Result::CopyFrom(const StopRebuildingResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.StopRebuildingResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopRebuildingResponse_Result::IsInitialized() const {
  return true;
}

void StopRebuildingResponse_Result::InternalSwap(StopRebuildingResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StopRebuildingResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StopRebuildingResponse::_Internal {
 public:
  static const ::grpc_cli::StopRebuildingResponse_Result& result(const StopRebuildingResponse* msg);
  static const ::grpc_cli::PosInfo& info(const StopRebuildingResponse* msg);
};

const ::grpc_cli::StopRebuildingResponse_Result&
StopRebuildingResponse::_Internal::result(const StopRebuildingResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
StopRebuildingResponse::_Internal::info(const StopRebuildingResponse* msg) {
  return *msg->info_;
}
StopRebuildingResponse::StopRebuildingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.StopRebuildingResponse)
}
StopRebuildingResponse::StopRebuildingResponse(const StopRebuildingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::StopRebuildingResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.StopRebuildingResponse)
}

void StopRebuildingResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

StopRebuildingResponse::~StopRebuildingResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.StopRebuildingResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopRebuildingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void StopRebuildingResponse::ArenaDtor(void* object) {
  StopRebuildingResponse* _this = reinterpret_cast< StopRebuildingResponse* >(object);
  (void)_this;
}
void StopRebuildingResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopRebuildingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void StopRebuildingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.StopRebuildingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopRebuildingResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StopRebuildingResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.StopRebuildingResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.StopRebuildingResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopRebuildingResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.StopRebuildingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StopRebuildingResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.StopRebuildingResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.StopRebuildingResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.StopRebuildingResponse)
  return target;
}

size_t StopRebuildingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.StopRebuildingResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.StopRebuildingResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopRebuildingResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.StopRebuildingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StopRebuildingResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopRebuildingResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.StopRebuildingResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.StopRebuildingResponse)
    MergeFrom(*source);
  }
}

void StopRebuildingResponse::MergeFrom(const StopRebuildingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.StopRebuildingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::StopRebuildingResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void StopRebuildingResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.StopRebuildingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopRebuildingResponse::CopyFrom(const StopRebuildingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.StopRebuildingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopRebuildingResponse::IsInitialized() const {
  return true;
}

void StopRebuildingResponse::InternalSwap(StopRebuildingResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StopRebuildingResponse, info_)
      + sizeof(StopRebuildingResponse::info_)
      - PROTOBUF_FIELD_OFFSET(StopRebuildingResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StopRebuildingResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UpdateEventWrrRequest_Param::_Internal {
 public:
};

UpdateEventWrrRequest_Param::UpdateEventWrrRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.UpdateEventWrrRequest.Param)
}
UpdateEventWrrRequest_Param::UpdateEventWrrRequest_Param(const UpdateEventWrrRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  weight_ = from.weight_;
  // @@protoc_insertion_point(copy_constructor:grpc_cli.UpdateEventWrrRequest.Param)
}

void UpdateEventWrrRequest_Param::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
weight_ = 0;
}

UpdateEventWrrRequest_Param::~UpdateEventWrrRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.UpdateEventWrrRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateEventWrrRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpdateEventWrrRequest_Param::ArenaDtor(void* object) {
  UpdateEventWrrRequest_Param* _this = reinterpret_cast< UpdateEventWrrRequest_Param* >(object);
  (void)_this;
}
void UpdateEventWrrRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateEventWrrRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateEventWrrRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.UpdateEventWrrRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  weight_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateEventWrrRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.UpdateEventWrrRequest.Param.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 weight = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          weight_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateEventWrrRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.UpdateEventWrrRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.UpdateEventWrrRequest.Param.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // int32 weight = 2;
  if (this->weight() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_weight(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.UpdateEventWrrRequest.Param)
  return target;
}

size_t UpdateEventWrrRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.UpdateEventWrrRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // int32 weight = 2;
  if (this->weight() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_weight());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateEventWrrRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.UpdateEventWrrRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateEventWrrRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateEventWrrRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.UpdateEventWrrRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.UpdateEventWrrRequest.Param)
    MergeFrom(*source);
  }
}

void UpdateEventWrrRequest_Param::MergeFrom(const UpdateEventWrrRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.UpdateEventWrrRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.weight() != 0) {
    _internal_set_weight(from._internal_weight());
  }
}

void UpdateEventWrrRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.UpdateEventWrrRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateEventWrrRequest_Param::CopyFrom(const UpdateEventWrrRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.UpdateEventWrrRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateEventWrrRequest_Param::IsInitialized() const {
  return true;
}

void UpdateEventWrrRequest_Param::InternalSwap(UpdateEventWrrRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(weight_, other->weight_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateEventWrrRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UpdateEventWrrRequest::_Internal {
 public:
  static const ::grpc_cli::UpdateEventWrrRequest_Param& param(const UpdateEventWrrRequest* msg);
};

const ::grpc_cli::UpdateEventWrrRequest_Param&
UpdateEventWrrRequest::_Internal::param(const UpdateEventWrrRequest* msg) {
  return *msg->param_;
}
UpdateEventWrrRequest::UpdateEventWrrRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.UpdateEventWrrRequest)
}
UpdateEventWrrRequest::UpdateEventWrrRequest(const UpdateEventWrrRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::UpdateEventWrrRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.UpdateEventWrrRequest)
}

void UpdateEventWrrRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

UpdateEventWrrRequest::~UpdateEventWrrRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.UpdateEventWrrRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateEventWrrRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void UpdateEventWrrRequest::ArenaDtor(void* object) {
  UpdateEventWrrRequest* _this = reinterpret_cast< UpdateEventWrrRequest* >(object);
  (void)_this;
}
void UpdateEventWrrRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateEventWrrRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateEventWrrRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.UpdateEventWrrRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateEventWrrRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.UpdateEventWrrRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.UpdateEventWrrRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.UpdateEventWrrRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.UpdateEventWrrRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateEventWrrRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.UpdateEventWrrRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.UpdateEventWrrRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.UpdateEventWrrRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.UpdateEventWrrRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.UpdateEventWrrRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.UpdateEventWrrRequest)
  return target;
}

size_t UpdateEventWrrRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.UpdateEventWrrRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.UpdateEventWrrRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateEventWrrRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.UpdateEventWrrRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateEventWrrRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateEventWrrRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.UpdateEventWrrRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.UpdateEventWrrRequest)
    MergeFrom(*source);
  }
}

void UpdateEventWrrRequest::MergeFrom(const UpdateEventWrrRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.UpdateEventWrrRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::UpdateEventWrrRequest_Param::MergeFrom(from._internal_param());
  }
}

void UpdateEventWrrRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.UpdateEventWrrRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateEventWrrRequest::CopyFrom(const UpdateEventWrrRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.UpdateEventWrrRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateEventWrrRequest::IsInitialized() const {
  return true;
}

void UpdateEventWrrRequest::InternalSwap(UpdateEventWrrRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateEventWrrRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UpdateEventWrrResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const UpdateEventWrrResponse_Result* msg);
};

const ::grpc_cli::Status&
UpdateEventWrrResponse_Result::_Internal::status(const UpdateEventWrrResponse_Result* msg) {
  return *msg->status_;
}
UpdateEventWrrResponse_Result::UpdateEventWrrResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.UpdateEventWrrResponse.Result)
}
UpdateEventWrrResponse_Result::UpdateEventWrrResponse_Result(const UpdateEventWrrResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.UpdateEventWrrResponse.Result)
}

void UpdateEventWrrResponse_Result::SharedCtor() {
status_ = nullptr;
}

UpdateEventWrrResponse_Result::~UpdateEventWrrResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.UpdateEventWrrResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateEventWrrResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void UpdateEventWrrResponse_Result::ArenaDtor(void* object) {
  UpdateEventWrrResponse_Result* _this = reinterpret_cast< UpdateEventWrrResponse_Result* >(object);
  (void)_this;
}
void UpdateEventWrrResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateEventWrrResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateEventWrrResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.UpdateEventWrrResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateEventWrrResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateEventWrrResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.UpdateEventWrrResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.UpdateEventWrrResponse.Result)
  return target;
}

size_t UpdateEventWrrResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.UpdateEventWrrResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateEventWrrResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.UpdateEventWrrResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateEventWrrResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateEventWrrResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.UpdateEventWrrResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.UpdateEventWrrResponse.Result)
    MergeFrom(*source);
  }
}

void UpdateEventWrrResponse_Result::MergeFrom(const UpdateEventWrrResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.UpdateEventWrrResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void UpdateEventWrrResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.UpdateEventWrrResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateEventWrrResponse_Result::CopyFrom(const UpdateEventWrrResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.UpdateEventWrrResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateEventWrrResponse_Result::IsInitialized() const {
  return true;
}

void UpdateEventWrrResponse_Result::InternalSwap(UpdateEventWrrResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateEventWrrResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UpdateEventWrrResponse::_Internal {
 public:
  static const ::grpc_cli::UpdateEventWrrResponse_Result& result(const UpdateEventWrrResponse* msg);
  static const ::grpc_cli::PosInfo& info(const UpdateEventWrrResponse* msg);
};

const ::grpc_cli::UpdateEventWrrResponse_Result&
UpdateEventWrrResponse::_Internal::result(const UpdateEventWrrResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
UpdateEventWrrResponse::_Internal::info(const UpdateEventWrrResponse* msg) {
  return *msg->info_;
}
UpdateEventWrrResponse::UpdateEventWrrResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.UpdateEventWrrResponse)
}
UpdateEventWrrResponse::UpdateEventWrrResponse(const UpdateEventWrrResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::UpdateEventWrrResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.UpdateEventWrrResponse)
}

void UpdateEventWrrResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

UpdateEventWrrResponse::~UpdateEventWrrResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.UpdateEventWrrResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateEventWrrResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void UpdateEventWrrResponse::ArenaDtor(void* object) {
  UpdateEventWrrResponse* _this = reinterpret_cast< UpdateEventWrrResponse* >(object);
  (void)_this;
}
void UpdateEventWrrResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateEventWrrResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateEventWrrResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.UpdateEventWrrResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateEventWrrResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.UpdateEventWrrResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.UpdateEventWrrResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.UpdateEventWrrResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateEventWrrResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.UpdateEventWrrResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.UpdateEventWrrResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.UpdateEventWrrResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.UpdateEventWrrResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.UpdateEventWrrResponse)
  return target;
}

size_t UpdateEventWrrResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.UpdateEventWrrResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.UpdateEventWrrResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateEventWrrResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.UpdateEventWrrResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateEventWrrResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateEventWrrResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.UpdateEventWrrResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.UpdateEventWrrResponse)
    MergeFrom(*source);
  }
}

void UpdateEventWrrResponse::MergeFrom(const UpdateEventWrrResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.UpdateEventWrrResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::UpdateEventWrrResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void UpdateEventWrrResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.UpdateEventWrrResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateEventWrrResponse::CopyFrom(const UpdateEventWrrResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.UpdateEventWrrResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateEventWrrResponse::IsInitialized() const {
  return true;
}

void UpdateEventWrrResponse::InternalSwap(UpdateEventWrrResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateEventWrrResponse, info_)
      + sizeof(UpdateEventWrrResponse::info_)
      - PROTOBUF_FIELD_OFFSET(UpdateEventWrrResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateEventWrrResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AddSpareRequest_SpareDeviceName::_Internal {
 public:
};

AddSpareRequest_SpareDeviceName::AddSpareRequest_SpareDeviceName(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.AddSpareRequest.SpareDeviceName)
}
AddSpareRequest_SpareDeviceName::AddSpareRequest_SpareDeviceName(const AddSpareRequest_SpareDeviceName& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  devicename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_devicename().empty()) {
    devicename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_devicename(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.AddSpareRequest.SpareDeviceName)
}

void AddSpareRequest_SpareDeviceName::SharedCtor() {
devicename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddSpareRequest_SpareDeviceName::~AddSpareRequest_SpareDeviceName() {
  // @@protoc_insertion_point(destructor:grpc_cli.AddSpareRequest.SpareDeviceName)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddSpareRequest_SpareDeviceName::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  devicename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddSpareRequest_SpareDeviceName::ArenaDtor(void* object) {
  AddSpareRequest_SpareDeviceName* _this = reinterpret_cast< AddSpareRequest_SpareDeviceName* >(object);
  (void)_this;
}
void AddSpareRequest_SpareDeviceName::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddSpareRequest_SpareDeviceName::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddSpareRequest_SpareDeviceName::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.AddSpareRequest.SpareDeviceName)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  devicename_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddSpareRequest_SpareDeviceName::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string deviceName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_devicename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AddSpareRequest.SpareDeviceName.deviceName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddSpareRequest_SpareDeviceName::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.AddSpareRequest.SpareDeviceName)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string deviceName = 1;
  if (this->devicename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_devicename().data(), static_cast<int>(this->_internal_devicename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AddSpareRequest.SpareDeviceName.deviceName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_devicename(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.AddSpareRequest.SpareDeviceName)
  return target;
}

size_t AddSpareRequest_SpareDeviceName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.AddSpareRequest.SpareDeviceName)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string deviceName = 1;
  if (this->devicename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_devicename());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddSpareRequest_SpareDeviceName::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.AddSpareRequest.SpareDeviceName)
  GOOGLE_DCHECK_NE(&from, this);
  const AddSpareRequest_SpareDeviceName* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddSpareRequest_SpareDeviceName>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.AddSpareRequest.SpareDeviceName)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.AddSpareRequest.SpareDeviceName)
    MergeFrom(*source);
  }
}

void AddSpareRequest_SpareDeviceName::MergeFrom(const AddSpareRequest_SpareDeviceName& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.AddSpareRequest.SpareDeviceName)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.devicename().size() > 0) {
    _internal_set_devicename(from._internal_devicename());
  }
}

void AddSpareRequest_SpareDeviceName::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.AddSpareRequest.SpareDeviceName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddSpareRequest_SpareDeviceName::CopyFrom(const AddSpareRequest_SpareDeviceName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.AddSpareRequest.SpareDeviceName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddSpareRequest_SpareDeviceName::IsInitialized() const {
  return true;
}

void AddSpareRequest_SpareDeviceName::InternalSwap(AddSpareRequest_SpareDeviceName* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  devicename_.Swap(&other->devicename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddSpareRequest_SpareDeviceName::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AddSpareRequest_Param::_Internal {
 public:
};

AddSpareRequest_Param::AddSpareRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  spare_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.AddSpareRequest.Param)
}
AddSpareRequest_Param::AddSpareRequest_Param(const AddSpareRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      spare_(from.spare_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  array_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_array().empty()) {
    array_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_array(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.AddSpareRequest.Param)
}

void AddSpareRequest_Param::SharedCtor() {
array_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddSpareRequest_Param::~AddSpareRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.AddSpareRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddSpareRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  array_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddSpareRequest_Param::ArenaDtor(void* object) {
  AddSpareRequest_Param* _this = reinterpret_cast< AddSpareRequest_Param* >(object);
  (void)_this;
}
void AddSpareRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddSpareRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddSpareRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.AddSpareRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  spare_.Clear();
  array_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddSpareRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string array = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_array();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AddSpareRequest.Param.array"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .grpc_cli.AddSpareRequest.SpareDeviceName spare = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_spare(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddSpareRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.AddSpareRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string array = 1;
  if (this->array().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_array().data(), static_cast<int>(this->_internal_array().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AddSpareRequest.Param.array");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_array(), target);
  }

  // repeated .grpc_cli.AddSpareRequest.SpareDeviceName spare = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_spare_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_spare(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.AddSpareRequest.Param)
  return target;
}

size_t AddSpareRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.AddSpareRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_cli.AddSpareRequest.SpareDeviceName spare = 2;
  total_size += 1UL * this->_internal_spare_size();
  for (const auto& msg : this->spare_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string array = 1;
  if (this->array().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_array());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddSpareRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.AddSpareRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const AddSpareRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddSpareRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.AddSpareRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.AddSpareRequest.Param)
    MergeFrom(*source);
  }
}

void AddSpareRequest_Param::MergeFrom(const AddSpareRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.AddSpareRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  spare_.MergeFrom(from.spare_);
  if (from.array().size() > 0) {
    _internal_set_array(from._internal_array());
  }
}

void AddSpareRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.AddSpareRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddSpareRequest_Param::CopyFrom(const AddSpareRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.AddSpareRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddSpareRequest_Param::IsInitialized() const {
  return true;
}

void AddSpareRequest_Param::InternalSwap(AddSpareRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  spare_.InternalSwap(&other->spare_);
  array_.Swap(&other->array_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddSpareRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AddSpareRequest::_Internal {
 public:
  static const ::grpc_cli::AddSpareRequest_Param& param(const AddSpareRequest* msg);
};

const ::grpc_cli::AddSpareRequest_Param&
AddSpareRequest::_Internal::param(const AddSpareRequest* msg) {
  return *msg->param_;
}
AddSpareRequest::AddSpareRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.AddSpareRequest)
}
AddSpareRequest::AddSpareRequest(const AddSpareRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::AddSpareRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.AddSpareRequest)
}

void AddSpareRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

AddSpareRequest::~AddSpareRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.AddSpareRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddSpareRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void AddSpareRequest::ArenaDtor(void* object) {
  AddSpareRequest* _this = reinterpret_cast< AddSpareRequest* >(object);
  (void)_this;
}
void AddSpareRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddSpareRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddSpareRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.AddSpareRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddSpareRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AddSpareRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AddSpareRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AddSpareRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.AddSpareRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddSpareRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.AddSpareRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AddSpareRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AddSpareRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AddSpareRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.AddSpareRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.AddSpareRequest)
  return target;
}

size_t AddSpareRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.AddSpareRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.AddSpareRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddSpareRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.AddSpareRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddSpareRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddSpareRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.AddSpareRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.AddSpareRequest)
    MergeFrom(*source);
  }
}

void AddSpareRequest::MergeFrom(const AddSpareRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.AddSpareRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::AddSpareRequest_Param::MergeFrom(from._internal_param());
  }
}

void AddSpareRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.AddSpareRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddSpareRequest::CopyFrom(const AddSpareRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.AddSpareRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddSpareRequest::IsInitialized() const {
  return true;
}

void AddSpareRequest::InternalSwap(AddSpareRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddSpareRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AddSpareResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const AddSpareResponse_Result* msg);
};

const ::grpc_cli::Status&
AddSpareResponse_Result::_Internal::status(const AddSpareResponse_Result* msg) {
  return *msg->status_;
}
AddSpareResponse_Result::AddSpareResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.AddSpareResponse.Result)
}
AddSpareResponse_Result::AddSpareResponse_Result(const AddSpareResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.AddSpareResponse.Result)
}

void AddSpareResponse_Result::SharedCtor() {
status_ = nullptr;
}

AddSpareResponse_Result::~AddSpareResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.AddSpareResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddSpareResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void AddSpareResponse_Result::ArenaDtor(void* object) {
  AddSpareResponse_Result* _this = reinterpret_cast< AddSpareResponse_Result* >(object);
  (void)_this;
}
void AddSpareResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddSpareResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddSpareResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.AddSpareResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddSpareResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddSpareResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.AddSpareResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.AddSpareResponse.Result)
  return target;
}

size_t AddSpareResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.AddSpareResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddSpareResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.AddSpareResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const AddSpareResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddSpareResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.AddSpareResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.AddSpareResponse.Result)
    MergeFrom(*source);
  }
}

void AddSpareResponse_Result::MergeFrom(const AddSpareResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.AddSpareResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void AddSpareResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.AddSpareResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddSpareResponse_Result::CopyFrom(const AddSpareResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.AddSpareResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddSpareResponse_Result::IsInitialized() const {
  return true;
}

void AddSpareResponse_Result::InternalSwap(AddSpareResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddSpareResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AddSpareResponse::_Internal {
 public:
  static const ::grpc_cli::AddSpareResponse_Result& result(const AddSpareResponse* msg);
  static const ::grpc_cli::PosInfo& info(const AddSpareResponse* msg);
};

const ::grpc_cli::AddSpareResponse_Result&
AddSpareResponse::_Internal::result(const AddSpareResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
AddSpareResponse::_Internal::info(const AddSpareResponse* msg) {
  return *msg->info_;
}
AddSpareResponse::AddSpareResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.AddSpareResponse)
}
AddSpareResponse::AddSpareResponse(const AddSpareResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::AddSpareResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.AddSpareResponse)
}

void AddSpareResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

AddSpareResponse::~AddSpareResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.AddSpareResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddSpareResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void AddSpareResponse::ArenaDtor(void* object) {
  AddSpareResponse* _this = reinterpret_cast< AddSpareResponse* >(object);
  (void)_this;
}
void AddSpareResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddSpareResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AddSpareResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.AddSpareResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddSpareResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AddSpareResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AddSpareResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.AddSpareResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddSpareResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.AddSpareResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AddSpareResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AddSpareResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.AddSpareResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.AddSpareResponse)
  return target;
}

size_t AddSpareResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.AddSpareResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.AddSpareResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddSpareResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.AddSpareResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AddSpareResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddSpareResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.AddSpareResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.AddSpareResponse)
    MergeFrom(*source);
  }
}

void AddSpareResponse::MergeFrom(const AddSpareResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.AddSpareResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::AddSpareResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void AddSpareResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.AddSpareResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddSpareResponse::CopyFrom(const AddSpareResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.AddSpareResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddSpareResponse::IsInitialized() const {
  return true;
}

void AddSpareResponse::InternalSwap(AddSpareResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AddSpareResponse, info_)
      + sizeof(AddSpareResponse::info_)
      - PROTOBUF_FIELD_OFFSET(AddSpareResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AddSpareResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RemoveSpareRequest_SpareDeviceName::_Internal {
 public:
};

RemoveSpareRequest_SpareDeviceName::RemoveSpareRequest_SpareDeviceName(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.RemoveSpareRequest.SpareDeviceName)
}
RemoveSpareRequest_SpareDeviceName::RemoveSpareRequest_SpareDeviceName(const RemoveSpareRequest_SpareDeviceName& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  devicename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_devicename().empty()) {
    devicename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_devicename(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.RemoveSpareRequest.SpareDeviceName)
}

void RemoveSpareRequest_SpareDeviceName::SharedCtor() {
devicename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveSpareRequest_SpareDeviceName::~RemoveSpareRequest_SpareDeviceName() {
  // @@protoc_insertion_point(destructor:grpc_cli.RemoveSpareRequest.SpareDeviceName)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveSpareRequest_SpareDeviceName::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  devicename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveSpareRequest_SpareDeviceName::ArenaDtor(void* object) {
  RemoveSpareRequest_SpareDeviceName* _this = reinterpret_cast< RemoveSpareRequest_SpareDeviceName* >(object);
  (void)_this;
}
void RemoveSpareRequest_SpareDeviceName::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveSpareRequest_SpareDeviceName::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveSpareRequest_SpareDeviceName::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.RemoveSpareRequest.SpareDeviceName)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  devicename_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveSpareRequest_SpareDeviceName::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string deviceName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_devicename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.RemoveSpareRequest.SpareDeviceName.deviceName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveSpareRequest_SpareDeviceName::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.RemoveSpareRequest.SpareDeviceName)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string deviceName = 1;
  if (this->devicename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_devicename().data(), static_cast<int>(this->_internal_devicename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.RemoveSpareRequest.SpareDeviceName.deviceName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_devicename(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.RemoveSpareRequest.SpareDeviceName)
  return target;
}

size_t RemoveSpareRequest_SpareDeviceName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.RemoveSpareRequest.SpareDeviceName)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string deviceName = 1;
  if (this->devicename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_devicename());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveSpareRequest_SpareDeviceName::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.RemoveSpareRequest.SpareDeviceName)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveSpareRequest_SpareDeviceName* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveSpareRequest_SpareDeviceName>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.RemoveSpareRequest.SpareDeviceName)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.RemoveSpareRequest.SpareDeviceName)
    MergeFrom(*source);
  }
}

void RemoveSpareRequest_SpareDeviceName::MergeFrom(const RemoveSpareRequest_SpareDeviceName& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.RemoveSpareRequest.SpareDeviceName)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.devicename().size() > 0) {
    _internal_set_devicename(from._internal_devicename());
  }
}

void RemoveSpareRequest_SpareDeviceName::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.RemoveSpareRequest.SpareDeviceName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveSpareRequest_SpareDeviceName::CopyFrom(const RemoveSpareRequest_SpareDeviceName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.RemoveSpareRequest.SpareDeviceName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveSpareRequest_SpareDeviceName::IsInitialized() const {
  return true;
}

void RemoveSpareRequest_SpareDeviceName::InternalSwap(RemoveSpareRequest_SpareDeviceName* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  devicename_.Swap(&other->devicename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveSpareRequest_SpareDeviceName::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RemoveSpareRequest_Param::_Internal {
 public:
};

RemoveSpareRequest_Param::RemoveSpareRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  spare_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.RemoveSpareRequest.Param)
}
RemoveSpareRequest_Param::RemoveSpareRequest_Param(const RemoveSpareRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      spare_(from.spare_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  array_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_array().empty()) {
    array_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_array(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.RemoveSpareRequest.Param)
}

void RemoveSpareRequest_Param::SharedCtor() {
array_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RemoveSpareRequest_Param::~RemoveSpareRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.RemoveSpareRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveSpareRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  array_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RemoveSpareRequest_Param::ArenaDtor(void* object) {
  RemoveSpareRequest_Param* _this = reinterpret_cast< RemoveSpareRequest_Param* >(object);
  (void)_this;
}
void RemoveSpareRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveSpareRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveSpareRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.RemoveSpareRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  spare_.Clear();
  array_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveSpareRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string array = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_array();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.RemoveSpareRequest.Param.array"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .grpc_cli.RemoveSpareRequest.SpareDeviceName spare = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_spare(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveSpareRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.RemoveSpareRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string array = 1;
  if (this->array().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_array().data(), static_cast<int>(this->_internal_array().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.RemoveSpareRequest.Param.array");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_array(), target);
  }

  // repeated .grpc_cli.RemoveSpareRequest.SpareDeviceName spare = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_spare_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_spare(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.RemoveSpareRequest.Param)
  return target;
}

size_t RemoveSpareRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.RemoveSpareRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_cli.RemoveSpareRequest.SpareDeviceName spare = 2;
  total_size += 1UL * this->_internal_spare_size();
  for (const auto& msg : this->spare_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string array = 1;
  if (this->array().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_array());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveSpareRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.RemoveSpareRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveSpareRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveSpareRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.RemoveSpareRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.RemoveSpareRequest.Param)
    MergeFrom(*source);
  }
}

void RemoveSpareRequest_Param::MergeFrom(const RemoveSpareRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.RemoveSpareRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  spare_.MergeFrom(from.spare_);
  if (from.array().size() > 0) {
    _internal_set_array(from._internal_array());
  }
}

void RemoveSpareRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.RemoveSpareRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveSpareRequest_Param::CopyFrom(const RemoveSpareRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.RemoveSpareRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveSpareRequest_Param::IsInitialized() const {
  return true;
}

void RemoveSpareRequest_Param::InternalSwap(RemoveSpareRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  spare_.InternalSwap(&other->spare_);
  array_.Swap(&other->array_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveSpareRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RemoveSpareRequest::_Internal {
 public:
  static const ::grpc_cli::RemoveSpareRequest_Param& param(const RemoveSpareRequest* msg);
};

const ::grpc_cli::RemoveSpareRequest_Param&
RemoveSpareRequest::_Internal::param(const RemoveSpareRequest* msg) {
  return *msg->param_;
}
RemoveSpareRequest::RemoveSpareRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.RemoveSpareRequest)
}
RemoveSpareRequest::RemoveSpareRequest(const RemoveSpareRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::RemoveSpareRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.RemoveSpareRequest)
}

void RemoveSpareRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

RemoveSpareRequest::~RemoveSpareRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.RemoveSpareRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveSpareRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void RemoveSpareRequest::ArenaDtor(void* object) {
  RemoveSpareRequest* _this = reinterpret_cast< RemoveSpareRequest* >(object);
  (void)_this;
}
void RemoveSpareRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveSpareRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveSpareRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.RemoveSpareRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveSpareRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.RemoveSpareRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.RemoveSpareRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.RemoveSpareRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.RemoveSpareRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveSpareRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.RemoveSpareRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.RemoveSpareRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.RemoveSpareRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.RemoveSpareRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.RemoveSpareRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.RemoveSpareRequest)
  return target;
}

size_t RemoveSpareRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.RemoveSpareRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.RemoveSpareRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveSpareRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.RemoveSpareRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveSpareRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveSpareRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.RemoveSpareRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.RemoveSpareRequest)
    MergeFrom(*source);
  }
}

void RemoveSpareRequest::MergeFrom(const RemoveSpareRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.RemoveSpareRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::RemoveSpareRequest_Param::MergeFrom(from._internal_param());
  }
}

void RemoveSpareRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.RemoveSpareRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveSpareRequest::CopyFrom(const RemoveSpareRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.RemoveSpareRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveSpareRequest::IsInitialized() const {
  return true;
}

void RemoveSpareRequest::InternalSwap(RemoveSpareRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveSpareRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RemoveSpareResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const RemoveSpareResponse_Result* msg);
};

const ::grpc_cli::Status&
RemoveSpareResponse_Result::_Internal::status(const RemoveSpareResponse_Result* msg) {
  return *msg->status_;
}
RemoveSpareResponse_Result::RemoveSpareResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.RemoveSpareResponse.Result)
}
RemoveSpareResponse_Result::RemoveSpareResponse_Result(const RemoveSpareResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.RemoveSpareResponse.Result)
}

void RemoveSpareResponse_Result::SharedCtor() {
status_ = nullptr;
}

RemoveSpareResponse_Result::~RemoveSpareResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.RemoveSpareResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveSpareResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void RemoveSpareResponse_Result::ArenaDtor(void* object) {
  RemoveSpareResponse_Result* _this = reinterpret_cast< RemoveSpareResponse_Result* >(object);
  (void)_this;
}
void RemoveSpareResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveSpareResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveSpareResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.RemoveSpareResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveSpareResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveSpareResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.RemoveSpareResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.RemoveSpareResponse.Result)
  return target;
}

size_t RemoveSpareResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.RemoveSpareResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveSpareResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.RemoveSpareResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveSpareResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveSpareResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.RemoveSpareResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.RemoveSpareResponse.Result)
    MergeFrom(*source);
  }
}

void RemoveSpareResponse_Result::MergeFrom(const RemoveSpareResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.RemoveSpareResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void RemoveSpareResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.RemoveSpareResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveSpareResponse_Result::CopyFrom(const RemoveSpareResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.RemoveSpareResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveSpareResponse_Result::IsInitialized() const {
  return true;
}

void RemoveSpareResponse_Result::InternalSwap(RemoveSpareResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveSpareResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RemoveSpareResponse::_Internal {
 public:
  static const ::grpc_cli::RemoveSpareResponse_Result& result(const RemoveSpareResponse* msg);
  static const ::grpc_cli::PosInfo& info(const RemoveSpareResponse* msg);
};

const ::grpc_cli::RemoveSpareResponse_Result&
RemoveSpareResponse::_Internal::result(const RemoveSpareResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
RemoveSpareResponse::_Internal::info(const RemoveSpareResponse* msg) {
  return *msg->info_;
}
RemoveSpareResponse::RemoveSpareResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.RemoveSpareResponse)
}
RemoveSpareResponse::RemoveSpareResponse(const RemoveSpareResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::RemoveSpareResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.RemoveSpareResponse)
}

void RemoveSpareResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

RemoveSpareResponse::~RemoveSpareResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.RemoveSpareResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveSpareResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void RemoveSpareResponse::ArenaDtor(void* object) {
  RemoveSpareResponse* _this = reinterpret_cast< RemoveSpareResponse* >(object);
  (void)_this;
}
void RemoveSpareResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveSpareResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RemoveSpareResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.RemoveSpareResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveSpareResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.RemoveSpareResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.RemoveSpareResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.RemoveSpareResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveSpareResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.RemoveSpareResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.RemoveSpareResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.RemoveSpareResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.RemoveSpareResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.RemoveSpareResponse)
  return target;
}

size_t RemoveSpareResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.RemoveSpareResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.RemoveSpareResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveSpareResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.RemoveSpareResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveSpareResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveSpareResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.RemoveSpareResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.RemoveSpareResponse)
    MergeFrom(*source);
  }
}

void RemoveSpareResponse::MergeFrom(const RemoveSpareResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.RemoveSpareResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::RemoveSpareResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void RemoveSpareResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.RemoveSpareResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveSpareResponse::CopyFrom(const RemoveSpareResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.RemoveSpareResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveSpareResponse::IsInitialized() const {
  return true;
}

void RemoveSpareResponse::InternalSwap(RemoveSpareResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RemoveSpareResponse, info_)
      + sizeof(RemoveSpareResponse::info_)
      - PROTOBUF_FIELD_OFFSET(RemoveSpareResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveSpareResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DeviceNameList::_Internal {
 public:
};

DeviceNameList::DeviceNameList(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.DeviceNameList)
}
DeviceNameList::DeviceNameList(const DeviceNameList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  devicename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_devicename().empty()) {
    devicename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_devicename(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.DeviceNameList)
}

void DeviceNameList::SharedCtor() {
devicename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeviceNameList::~DeviceNameList() {
  // @@protoc_insertion_point(destructor:grpc_cli.DeviceNameList)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeviceNameList::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  devicename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeviceNameList::ArenaDtor(void* object) {
  DeviceNameList* _this = reinterpret_cast< DeviceNameList* >(object);
  (void)_this;
}
void DeviceNameList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeviceNameList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeviceNameList::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.DeviceNameList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  devicename_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeviceNameList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string deviceName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_devicename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.DeviceNameList.deviceName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeviceNameList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.DeviceNameList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string deviceName = 1;
  if (this->devicename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_devicename().data(), static_cast<int>(this->_internal_devicename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.DeviceNameList.deviceName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_devicename(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.DeviceNameList)
  return target;
}

size_t DeviceNameList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.DeviceNameList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string deviceName = 1;
  if (this->devicename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_devicename());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeviceNameList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.DeviceNameList)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceNameList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeviceNameList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.DeviceNameList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.DeviceNameList)
    MergeFrom(*source);
  }
}

void DeviceNameList::MergeFrom(const DeviceNameList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.DeviceNameList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.devicename().size() > 0) {
    _internal_set_devicename(from._internal_devicename());
  }
}

void DeviceNameList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.DeviceNameList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceNameList::CopyFrom(const DeviceNameList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.DeviceNameList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceNameList::IsInitialized() const {
  return true;
}

void DeviceNameList::InternalSwap(DeviceNameList* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  devicename_.Swap(&other->devicename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeviceNameList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AutocreateArrayRequest_Param::_Internal {
 public:
};

AutocreateArrayRequest_Param::AutocreateArrayRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  buffer_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.AutocreateArrayRequest.Param)
}
AutocreateArrayRequest_Param::AutocreateArrayRequest_Param(const AutocreateArrayRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      buffer_(from.buffer_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  raidtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_raidtype().empty()) {
    raidtype_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_raidtype(), 
      GetArena());
  }
  ::memcpy(&numdata_, &from.numdata_,
    static_cast<size_t>(reinterpret_cast<char*>(&numspare_) -
    reinterpret_cast<char*>(&numdata_)) + sizeof(numspare_));
  // @@protoc_insertion_point(copy_constructor:grpc_cli.AutocreateArrayRequest.Param)
}

void AutocreateArrayRequest_Param::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
raidtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&numdata_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&numspare_) -
    reinterpret_cast<char*>(&numdata_)) + sizeof(numspare_));
}

AutocreateArrayRequest_Param::~AutocreateArrayRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.AutocreateArrayRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AutocreateArrayRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  raidtype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AutocreateArrayRequest_Param::ArenaDtor(void* object) {
  AutocreateArrayRequest_Param* _this = reinterpret_cast< AutocreateArrayRequest_Param* >(object);
  (void)_this;
}
void AutocreateArrayRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AutocreateArrayRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AutocreateArrayRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.AutocreateArrayRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  buffer_.Clear();
  name_.ClearToEmpty();
  raidtype_.ClearToEmpty();
  ::memset(&numdata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&numspare_) -
      reinterpret_cast<char*>(&numdata_)) + sizeof(numspare_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AutocreateArrayRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AutocreateArrayRequest.Param.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .grpc_cli.DeviceNameList buffer = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_buffer(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 numData = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          numdata_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 numSpare = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          numspare_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string raidtype = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_raidtype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AutocreateArrayRequest.Param.raidtype"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AutocreateArrayRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.AutocreateArrayRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AutocreateArrayRequest.Param.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // repeated .grpc_cli.DeviceNameList buffer = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_buffer_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_buffer(i), target, stream);
  }

  // int32 numData = 3;
  if (this->numdata() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_numdata(), target);
  }

  // int32 numSpare = 4;
  if (this->numspare() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_numspare(), target);
  }

  // string raidtype = 5;
  if (this->raidtype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_raidtype().data(), static_cast<int>(this->_internal_raidtype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AutocreateArrayRequest.Param.raidtype");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_raidtype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.AutocreateArrayRequest.Param)
  return target;
}

size_t AutocreateArrayRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.AutocreateArrayRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_cli.DeviceNameList buffer = 2;
  total_size += 1UL * this->_internal_buffer_size();
  for (const auto& msg : this->buffer_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string raidtype = 5;
  if (this->raidtype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_raidtype());
  }

  // int32 numData = 3;
  if (this->numdata() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_numdata());
  }

  // int32 numSpare = 4;
  if (this->numspare() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_numspare());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AutocreateArrayRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.AutocreateArrayRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const AutocreateArrayRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AutocreateArrayRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.AutocreateArrayRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.AutocreateArrayRequest.Param)
    MergeFrom(*source);
  }
}

void AutocreateArrayRequest_Param::MergeFrom(const AutocreateArrayRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.AutocreateArrayRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  buffer_.MergeFrom(from.buffer_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.raidtype().size() > 0) {
    _internal_set_raidtype(from._internal_raidtype());
  }
  if (from.numdata() != 0) {
    _internal_set_numdata(from._internal_numdata());
  }
  if (from.numspare() != 0) {
    _internal_set_numspare(from._internal_numspare());
  }
}

void AutocreateArrayRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.AutocreateArrayRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AutocreateArrayRequest_Param::CopyFrom(const AutocreateArrayRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.AutocreateArrayRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutocreateArrayRequest_Param::IsInitialized() const {
  return true;
}

void AutocreateArrayRequest_Param::InternalSwap(AutocreateArrayRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  buffer_.InternalSwap(&other->buffer_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  raidtype_.Swap(&other->raidtype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AutocreateArrayRequest_Param, numspare_)
      + sizeof(AutocreateArrayRequest_Param::numspare_)
      - PROTOBUF_FIELD_OFFSET(AutocreateArrayRequest_Param, numdata_)>(
          reinterpret_cast<char*>(&numdata_),
          reinterpret_cast<char*>(&other->numdata_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AutocreateArrayRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AutocreateArrayRequest::_Internal {
 public:
  static const ::grpc_cli::AutocreateArrayRequest_Param& param(const AutocreateArrayRequest* msg);
};

const ::grpc_cli::AutocreateArrayRequest_Param&
AutocreateArrayRequest::_Internal::param(const AutocreateArrayRequest* msg) {
  return *msg->param_;
}
AutocreateArrayRequest::AutocreateArrayRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.AutocreateArrayRequest)
}
AutocreateArrayRequest::AutocreateArrayRequest(const AutocreateArrayRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::AutocreateArrayRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.AutocreateArrayRequest)
}

void AutocreateArrayRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

AutocreateArrayRequest::~AutocreateArrayRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.AutocreateArrayRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AutocreateArrayRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void AutocreateArrayRequest::ArenaDtor(void* object) {
  AutocreateArrayRequest* _this = reinterpret_cast< AutocreateArrayRequest* >(object);
  (void)_this;
}
void AutocreateArrayRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AutocreateArrayRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AutocreateArrayRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.AutocreateArrayRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AutocreateArrayRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AutocreateArrayRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AutocreateArrayRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AutocreateArrayRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.AutocreateArrayRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AutocreateArrayRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.AutocreateArrayRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AutocreateArrayRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AutocreateArrayRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AutocreateArrayRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.AutocreateArrayRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.AutocreateArrayRequest)
  return target;
}

size_t AutocreateArrayRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.AutocreateArrayRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.AutocreateArrayRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AutocreateArrayRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.AutocreateArrayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AutocreateArrayRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AutocreateArrayRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.AutocreateArrayRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.AutocreateArrayRequest)
    MergeFrom(*source);
  }
}

void AutocreateArrayRequest::MergeFrom(const AutocreateArrayRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.AutocreateArrayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::AutocreateArrayRequest_Param::MergeFrom(from._internal_param());
  }
}

void AutocreateArrayRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.AutocreateArrayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AutocreateArrayRequest::CopyFrom(const AutocreateArrayRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.AutocreateArrayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutocreateArrayRequest::IsInitialized() const {
  return true;
}

void AutocreateArrayRequest::InternalSwap(AutocreateArrayRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AutocreateArrayRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AutocreateArrayResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const AutocreateArrayResponse_Result* msg);
};

const ::grpc_cli::Status&
AutocreateArrayResponse_Result::_Internal::status(const AutocreateArrayResponse_Result* msg) {
  return *msg->status_;
}
AutocreateArrayResponse_Result::AutocreateArrayResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.AutocreateArrayResponse.Result)
}
AutocreateArrayResponse_Result::AutocreateArrayResponse_Result(const AutocreateArrayResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.AutocreateArrayResponse.Result)
}

void AutocreateArrayResponse_Result::SharedCtor() {
status_ = nullptr;
}

AutocreateArrayResponse_Result::~AutocreateArrayResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.AutocreateArrayResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AutocreateArrayResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void AutocreateArrayResponse_Result::ArenaDtor(void* object) {
  AutocreateArrayResponse_Result* _this = reinterpret_cast< AutocreateArrayResponse_Result* >(object);
  (void)_this;
}
void AutocreateArrayResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AutocreateArrayResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AutocreateArrayResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.AutocreateArrayResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AutocreateArrayResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AutocreateArrayResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.AutocreateArrayResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.AutocreateArrayResponse.Result)
  return target;
}

size_t AutocreateArrayResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.AutocreateArrayResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AutocreateArrayResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.AutocreateArrayResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const AutocreateArrayResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AutocreateArrayResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.AutocreateArrayResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.AutocreateArrayResponse.Result)
    MergeFrom(*source);
  }
}

void AutocreateArrayResponse_Result::MergeFrom(const AutocreateArrayResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.AutocreateArrayResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void AutocreateArrayResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.AutocreateArrayResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AutocreateArrayResponse_Result::CopyFrom(const AutocreateArrayResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.AutocreateArrayResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutocreateArrayResponse_Result::IsInitialized() const {
  return true;
}

void AutocreateArrayResponse_Result::InternalSwap(AutocreateArrayResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AutocreateArrayResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AutocreateArrayResponse::_Internal {
 public:
  static const ::grpc_cli::AutocreateArrayResponse_Result& result(const AutocreateArrayResponse* msg);
  static const ::grpc_cli::PosInfo& info(const AutocreateArrayResponse* msg);
};

const ::grpc_cli::AutocreateArrayResponse_Result&
AutocreateArrayResponse::_Internal::result(const AutocreateArrayResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
AutocreateArrayResponse::_Internal::info(const AutocreateArrayResponse* msg) {
  return *msg->info_;
}
AutocreateArrayResponse::AutocreateArrayResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.AutocreateArrayResponse)
}
AutocreateArrayResponse::AutocreateArrayResponse(const AutocreateArrayResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::AutocreateArrayResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.AutocreateArrayResponse)
}

void AutocreateArrayResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

AutocreateArrayResponse::~AutocreateArrayResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.AutocreateArrayResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AutocreateArrayResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void AutocreateArrayResponse::ArenaDtor(void* object) {
  AutocreateArrayResponse* _this = reinterpret_cast< AutocreateArrayResponse* >(object);
  (void)_this;
}
void AutocreateArrayResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AutocreateArrayResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AutocreateArrayResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.AutocreateArrayResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AutocreateArrayResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AutocreateArrayResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.AutocreateArrayResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.AutocreateArrayResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AutocreateArrayResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.AutocreateArrayResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AutocreateArrayResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.AutocreateArrayResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.AutocreateArrayResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.AutocreateArrayResponse)
  return target;
}

size_t AutocreateArrayResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.AutocreateArrayResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.AutocreateArrayResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AutocreateArrayResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.AutocreateArrayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AutocreateArrayResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AutocreateArrayResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.AutocreateArrayResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.AutocreateArrayResponse)
    MergeFrom(*source);
  }
}

void AutocreateArrayResponse::MergeFrom(const AutocreateArrayResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.AutocreateArrayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::AutocreateArrayResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void AutocreateArrayResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.AutocreateArrayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AutocreateArrayResponse::CopyFrom(const AutocreateArrayResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.AutocreateArrayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutocreateArrayResponse::IsInitialized() const {
  return true;
}

void AutocreateArrayResponse::InternalSwap(AutocreateArrayResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AutocreateArrayResponse, info_)
      + sizeof(AutocreateArrayResponse::info_)
      - PROTOBUF_FIELD_OFFSET(AutocreateArrayResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AutocreateArrayResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateArrayRequest_Param::_Internal {
 public:
};

CreateArrayRequest_Param::CreateArrayRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  buffer_(arena),
  data_(arena),
  spare_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.CreateArrayRequest.Param)
}
CreateArrayRequest_Param::CreateArrayRequest_Param(const CreateArrayRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      buffer_(from.buffer_),
      data_(from.data_),
      spare_(from.spare_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  raidtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_raidtype().empty()) {
    raidtype_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_raidtype(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.CreateArrayRequest.Param)
}

void CreateArrayRequest_Param::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
raidtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CreateArrayRequest_Param::~CreateArrayRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.CreateArrayRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateArrayRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  raidtype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateArrayRequest_Param::ArenaDtor(void* object) {
  CreateArrayRequest_Param* _this = reinterpret_cast< CreateArrayRequest_Param* >(object);
  (void)_this;
}
void CreateArrayRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateArrayRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateArrayRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.CreateArrayRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  buffer_.Clear();
  data_.Clear();
  spare_.Clear();
  name_.ClearToEmpty();
  raidtype_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateArrayRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateArrayRequest.Param.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .grpc_cli.DeviceNameList buffer = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_buffer(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .grpc_cli.DeviceNameList data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .grpc_cli.DeviceNameList spare = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_spare(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // string raidtype = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_raidtype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateArrayRequest.Param.raidtype"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateArrayRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.CreateArrayRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateArrayRequest.Param.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // repeated .grpc_cli.DeviceNameList buffer = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_buffer_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_buffer(i), target, stream);
  }

  // repeated .grpc_cli.DeviceNameList data = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_data(i), target, stream);
  }

  // repeated .grpc_cli.DeviceNameList spare = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_spare_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_spare(i), target, stream);
  }

  // string raidtype = 5;
  if (this->raidtype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_raidtype().data(), static_cast<int>(this->_internal_raidtype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateArrayRequest.Param.raidtype");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_raidtype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.CreateArrayRequest.Param)
  return target;
}

size_t CreateArrayRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.CreateArrayRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_cli.DeviceNameList buffer = 2;
  total_size += 1UL * this->_internal_buffer_size();
  for (const auto& msg : this->buffer_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .grpc_cli.DeviceNameList data = 3;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .grpc_cli.DeviceNameList spare = 4;
  total_size += 1UL * this->_internal_spare_size();
  for (const auto& msg : this->spare_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string raidtype = 5;
  if (this->raidtype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_raidtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateArrayRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.CreateArrayRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateArrayRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateArrayRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.CreateArrayRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.CreateArrayRequest.Param)
    MergeFrom(*source);
  }
}

void CreateArrayRequest_Param::MergeFrom(const CreateArrayRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.CreateArrayRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  buffer_.MergeFrom(from.buffer_);
  data_.MergeFrom(from.data_);
  spare_.MergeFrom(from.spare_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.raidtype().size() > 0) {
    _internal_set_raidtype(from._internal_raidtype());
  }
}

void CreateArrayRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.CreateArrayRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateArrayRequest_Param::CopyFrom(const CreateArrayRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.CreateArrayRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateArrayRequest_Param::IsInitialized() const {
  return true;
}

void CreateArrayRequest_Param::InternalSwap(CreateArrayRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  buffer_.InternalSwap(&other->buffer_);
  data_.InternalSwap(&other->data_);
  spare_.InternalSwap(&other->spare_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  raidtype_.Swap(&other->raidtype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateArrayRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateArrayRequest::_Internal {
 public:
  static const ::grpc_cli::CreateArrayRequest_Param& param(const CreateArrayRequest* msg);
};

const ::grpc_cli::CreateArrayRequest_Param&
CreateArrayRequest::_Internal::param(const CreateArrayRequest* msg) {
  return *msg->param_;
}
CreateArrayRequest::CreateArrayRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.CreateArrayRequest)
}
CreateArrayRequest::CreateArrayRequest(const CreateArrayRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::CreateArrayRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.CreateArrayRequest)
}

void CreateArrayRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

CreateArrayRequest::~CreateArrayRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.CreateArrayRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateArrayRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void CreateArrayRequest::ArenaDtor(void* object) {
  CreateArrayRequest* _this = reinterpret_cast< CreateArrayRequest* >(object);
  (void)_this;
}
void CreateArrayRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateArrayRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateArrayRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.CreateArrayRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateArrayRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateArrayRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateArrayRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateArrayRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.CreateArrayRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateArrayRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.CreateArrayRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateArrayRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateArrayRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateArrayRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.CreateArrayRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.CreateArrayRequest)
  return target;
}

size_t CreateArrayRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.CreateArrayRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.CreateArrayRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateArrayRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.CreateArrayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateArrayRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateArrayRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.CreateArrayRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.CreateArrayRequest)
    MergeFrom(*source);
  }
}

void CreateArrayRequest::MergeFrom(const CreateArrayRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.CreateArrayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::CreateArrayRequest_Param::MergeFrom(from._internal_param());
  }
}

void CreateArrayRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.CreateArrayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateArrayRequest::CopyFrom(const CreateArrayRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.CreateArrayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateArrayRequest::IsInitialized() const {
  return true;
}

void CreateArrayRequest::InternalSwap(CreateArrayRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateArrayRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateArrayResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const CreateArrayResponse_Result* msg);
};

const ::grpc_cli::Status&
CreateArrayResponse_Result::_Internal::status(const CreateArrayResponse_Result* msg) {
  return *msg->status_;
}
CreateArrayResponse_Result::CreateArrayResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.CreateArrayResponse.Result)
}
CreateArrayResponse_Result::CreateArrayResponse_Result(const CreateArrayResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.CreateArrayResponse.Result)
}

void CreateArrayResponse_Result::SharedCtor() {
status_ = nullptr;
}

CreateArrayResponse_Result::~CreateArrayResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.CreateArrayResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateArrayResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void CreateArrayResponse_Result::ArenaDtor(void* object) {
  CreateArrayResponse_Result* _this = reinterpret_cast< CreateArrayResponse_Result* >(object);
  (void)_this;
}
void CreateArrayResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateArrayResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateArrayResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.CreateArrayResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateArrayResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateArrayResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.CreateArrayResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.CreateArrayResponse.Result)
  return target;
}

size_t CreateArrayResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.CreateArrayResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateArrayResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.CreateArrayResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateArrayResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateArrayResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.CreateArrayResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.CreateArrayResponse.Result)
    MergeFrom(*source);
  }
}

void CreateArrayResponse_Result::MergeFrom(const CreateArrayResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.CreateArrayResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void CreateArrayResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.CreateArrayResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateArrayResponse_Result::CopyFrom(const CreateArrayResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.CreateArrayResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateArrayResponse_Result::IsInitialized() const {
  return true;
}

void CreateArrayResponse_Result::InternalSwap(CreateArrayResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateArrayResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateArrayResponse::_Internal {
 public:
  static const ::grpc_cli::CreateArrayResponse_Result& result(const CreateArrayResponse* msg);
  static const ::grpc_cli::PosInfo& info(const CreateArrayResponse* msg);
};

const ::grpc_cli::CreateArrayResponse_Result&
CreateArrayResponse::_Internal::result(const CreateArrayResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
CreateArrayResponse::_Internal::info(const CreateArrayResponse* msg) {
  return *msg->info_;
}
CreateArrayResponse::CreateArrayResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.CreateArrayResponse)
}
CreateArrayResponse::CreateArrayResponse(const CreateArrayResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::CreateArrayResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.CreateArrayResponse)
}

void CreateArrayResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

CreateArrayResponse::~CreateArrayResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.CreateArrayResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateArrayResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void CreateArrayResponse::ArenaDtor(void* object) {
  CreateArrayResponse* _this = reinterpret_cast< CreateArrayResponse* >(object);
  (void)_this;
}
void CreateArrayResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateArrayResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreateArrayResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.CreateArrayResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateArrayResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateArrayResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.CreateArrayResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.CreateArrayResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateArrayResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.CreateArrayResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateArrayResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.CreateArrayResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.CreateArrayResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.CreateArrayResponse)
  return target;
}

size_t CreateArrayResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.CreateArrayResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.CreateArrayResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateArrayResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.CreateArrayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateArrayResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateArrayResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.CreateArrayResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.CreateArrayResponse)
    MergeFrom(*source);
  }
}

void CreateArrayResponse::MergeFrom(const CreateArrayResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.CreateArrayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::CreateArrayResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void CreateArrayResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.CreateArrayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateArrayResponse::CopyFrom(const CreateArrayResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.CreateArrayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateArrayResponse::IsInitialized() const {
  return true;
}

void CreateArrayResponse::InternalSwap(CreateArrayResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateArrayResponse, info_)
      + sizeof(CreateArrayResponse::info_)
      - PROTOBUF_FIELD_OFFSET(CreateArrayResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateArrayResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DeleteArrayRequest_Param::_Internal {
 public:
};

DeleteArrayRequest_Param::DeleteArrayRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.DeleteArrayRequest.Param)
}
DeleteArrayRequest_Param::DeleteArrayRequest_Param(const DeleteArrayRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.DeleteArrayRequest.Param)
}

void DeleteArrayRequest_Param::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteArrayRequest_Param::~DeleteArrayRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.DeleteArrayRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteArrayRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteArrayRequest_Param::ArenaDtor(void* object) {
  DeleteArrayRequest_Param* _this = reinterpret_cast< DeleteArrayRequest_Param* >(object);
  (void)_this;
}
void DeleteArrayRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteArrayRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteArrayRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.DeleteArrayRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteArrayRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.DeleteArrayRequest.Param.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteArrayRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.DeleteArrayRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.DeleteArrayRequest.Param.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.DeleteArrayRequest.Param)
  return target;
}

size_t DeleteArrayRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.DeleteArrayRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteArrayRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.DeleteArrayRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteArrayRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteArrayRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.DeleteArrayRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.DeleteArrayRequest.Param)
    MergeFrom(*source);
  }
}

void DeleteArrayRequest_Param::MergeFrom(const DeleteArrayRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.DeleteArrayRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void DeleteArrayRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.DeleteArrayRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteArrayRequest_Param::CopyFrom(const DeleteArrayRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.DeleteArrayRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteArrayRequest_Param::IsInitialized() const {
  return true;
}

void DeleteArrayRequest_Param::InternalSwap(DeleteArrayRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteArrayRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DeleteArrayRequest::_Internal {
 public:
  static const ::grpc_cli::DeleteArrayRequest_Param& param(const DeleteArrayRequest* msg);
};

const ::grpc_cli::DeleteArrayRequest_Param&
DeleteArrayRequest::_Internal::param(const DeleteArrayRequest* msg) {
  return *msg->param_;
}
DeleteArrayRequest::DeleteArrayRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.DeleteArrayRequest)
}
DeleteArrayRequest::DeleteArrayRequest(const DeleteArrayRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::DeleteArrayRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.DeleteArrayRequest)
}

void DeleteArrayRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

DeleteArrayRequest::~DeleteArrayRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.DeleteArrayRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteArrayRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void DeleteArrayRequest::ArenaDtor(void* object) {
  DeleteArrayRequest* _this = reinterpret_cast< DeleteArrayRequest* >(object);
  (void)_this;
}
void DeleteArrayRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteArrayRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteArrayRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.DeleteArrayRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteArrayRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.DeleteArrayRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.DeleteArrayRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.DeleteArrayRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.DeleteArrayRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteArrayRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.DeleteArrayRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.DeleteArrayRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.DeleteArrayRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.DeleteArrayRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.DeleteArrayRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.DeleteArrayRequest)
  return target;
}

size_t DeleteArrayRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.DeleteArrayRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.DeleteArrayRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteArrayRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.DeleteArrayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteArrayRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteArrayRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.DeleteArrayRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.DeleteArrayRequest)
    MergeFrom(*source);
  }
}

void DeleteArrayRequest::MergeFrom(const DeleteArrayRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.DeleteArrayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::DeleteArrayRequest_Param::MergeFrom(from._internal_param());
  }
}

void DeleteArrayRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.DeleteArrayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteArrayRequest::CopyFrom(const DeleteArrayRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.DeleteArrayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteArrayRequest::IsInitialized() const {
  return true;
}

void DeleteArrayRequest::InternalSwap(DeleteArrayRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteArrayRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DeleteArrayResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const DeleteArrayResponse_Result* msg);
};

const ::grpc_cli::Status&
DeleteArrayResponse_Result::_Internal::status(const DeleteArrayResponse_Result* msg) {
  return *msg->status_;
}
DeleteArrayResponse_Result::DeleteArrayResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.DeleteArrayResponse.Result)
}
DeleteArrayResponse_Result::DeleteArrayResponse_Result(const DeleteArrayResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.DeleteArrayResponse.Result)
}

void DeleteArrayResponse_Result::SharedCtor() {
status_ = nullptr;
}

DeleteArrayResponse_Result::~DeleteArrayResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.DeleteArrayResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteArrayResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void DeleteArrayResponse_Result::ArenaDtor(void* object) {
  DeleteArrayResponse_Result* _this = reinterpret_cast< DeleteArrayResponse_Result* >(object);
  (void)_this;
}
void DeleteArrayResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteArrayResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteArrayResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.DeleteArrayResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteArrayResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteArrayResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.DeleteArrayResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.DeleteArrayResponse.Result)
  return target;
}

size_t DeleteArrayResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.DeleteArrayResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteArrayResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.DeleteArrayResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteArrayResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteArrayResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.DeleteArrayResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.DeleteArrayResponse.Result)
    MergeFrom(*source);
  }
}

void DeleteArrayResponse_Result::MergeFrom(const DeleteArrayResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.DeleteArrayResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void DeleteArrayResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.DeleteArrayResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteArrayResponse_Result::CopyFrom(const DeleteArrayResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.DeleteArrayResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteArrayResponse_Result::IsInitialized() const {
  return true;
}

void DeleteArrayResponse_Result::InternalSwap(DeleteArrayResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteArrayResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DeleteArrayResponse::_Internal {
 public:
  static const ::grpc_cli::DeleteArrayResponse_Result& result(const DeleteArrayResponse* msg);
  static const ::grpc_cli::PosInfo& info(const DeleteArrayResponse* msg);
};

const ::grpc_cli::DeleteArrayResponse_Result&
DeleteArrayResponse::_Internal::result(const DeleteArrayResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
DeleteArrayResponse::_Internal::info(const DeleteArrayResponse* msg) {
  return *msg->info_;
}
DeleteArrayResponse::DeleteArrayResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.DeleteArrayResponse)
}
DeleteArrayResponse::DeleteArrayResponse(const DeleteArrayResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::DeleteArrayResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.DeleteArrayResponse)
}

void DeleteArrayResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

DeleteArrayResponse::~DeleteArrayResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.DeleteArrayResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteArrayResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void DeleteArrayResponse::ArenaDtor(void* object) {
  DeleteArrayResponse* _this = reinterpret_cast< DeleteArrayResponse* >(object);
  (void)_this;
}
void DeleteArrayResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteArrayResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeleteArrayResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.DeleteArrayResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteArrayResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.DeleteArrayResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.DeleteArrayResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.DeleteArrayResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteArrayResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.DeleteArrayResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.DeleteArrayResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.DeleteArrayResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.DeleteArrayResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.DeleteArrayResponse)
  return target;
}

size_t DeleteArrayResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.DeleteArrayResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.DeleteArrayResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteArrayResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.DeleteArrayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteArrayResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteArrayResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.DeleteArrayResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.DeleteArrayResponse)
    MergeFrom(*source);
  }
}

void DeleteArrayResponse::MergeFrom(const DeleteArrayResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.DeleteArrayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::DeleteArrayResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void DeleteArrayResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.DeleteArrayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteArrayResponse::CopyFrom(const DeleteArrayResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.DeleteArrayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteArrayResponse::IsInitialized() const {
  return true;
}

void DeleteArrayResponse::InternalSwap(DeleteArrayResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeleteArrayResponse, info_)
      + sizeof(DeleteArrayResponse::info_)
      - PROTOBUF_FIELD_OFFSET(DeleteArrayResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteArrayResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Device::_Internal {
 public:
};

Device::Device(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.Device)
}
Device::Device(const Device& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_type().empty()) {
    type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_type(), 
      GetArena());
  }
  address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_address().empty()) {
    address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_address(), 
      GetArena());
  }
  class__.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_class_().empty()) {
    class__.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_class_(), 
      GetArena());
  }
  mn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mn().empty()) {
    mn_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_mn(), 
      GetArena());
  }
  numa_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_numa().empty()) {
    numa_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_numa(), 
      GetArena());
  }
  serial_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_serial().empty()) {
    serial_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_serial(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.Device)
}

void Device::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
class__.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
mn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
numa_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
serial_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Device::~Device() {
  // @@protoc_insertion_point(destructor:grpc_cli.Device)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Device::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  class__.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mn_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  numa_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  serial_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Device::ArenaDtor(void* object) {
  Device* _this = reinterpret_cast< Device* >(object);
  (void)_this;
}
void Device::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Device::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Device::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.Device)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  type_.ClearToEmpty();
  address_.ClearToEmpty();
  class__.ClearToEmpty();
  mn_.ClearToEmpty();
  numa_.ClearToEmpty();
  serial_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Device::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Device.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Device.type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string address = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Device.address"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string class = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_class_();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Device.class"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string mn = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_mn();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Device.mn"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string numa = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_numa();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Device.numa"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string serial = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_serial();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Device.serial"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Device::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.Device)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Device.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Device.type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_type(), target);
  }

  // string address = 3;
  if (this->address().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_address().data(), static_cast<int>(this->_internal_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Device.address");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_address(), target);
  }

  // string class = 4;
  if (this->class_().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_class_().data(), static_cast<int>(this->_internal_class_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Device.class");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_class_(), target);
  }

  // string mn = 5;
  if (this->mn().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mn().data(), static_cast<int>(this->_internal_mn().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Device.mn");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_mn(), target);
  }

  // string numa = 6;
  if (this->numa().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_numa().data(), static_cast<int>(this->_internal_numa().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Device.numa");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_numa(), target);
  }

  // string serial = 7;
  if (this->serial().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_serial().data(), static_cast<int>(this->_internal_serial().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Device.serial");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_serial(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.Device)
  return target;
}

size_t Device::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.Device)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string type = 2;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // string address = 3;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_address());
  }

  // string class = 4;
  if (this->class_().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_class_());
  }

  // string mn = 5;
  if (this->mn().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mn());
  }

  // string numa = 6;
  if (this->numa().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_numa());
  }

  // string serial = 7;
  if (this->serial().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_serial());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Device::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.Device)
  GOOGLE_DCHECK_NE(&from, this);
  const Device* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Device>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.Device)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.Device)
    MergeFrom(*source);
  }
}

void Device::MergeFrom(const Device& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.Device)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.type().size() > 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.address().size() > 0) {
    _internal_set_address(from._internal_address());
  }
  if (from.class_().size() > 0) {
    _internal_set_class_(from._internal_class_());
  }
  if (from.mn().size() > 0) {
    _internal_set_mn(from._internal_mn());
  }
  if (from.numa().size() > 0) {
    _internal_set_numa(from._internal_numa());
  }
  if (from.serial().size() > 0) {
    _internal_set_serial(from._internal_serial());
  }
}

void Device::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.Device)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Device::CopyFrom(const Device& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.Device)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Device::IsInitialized() const {
  return true;
}

void Device::InternalSwap(Device* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_.Swap(&other->type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  address_.Swap(&other->address_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  class__.Swap(&other->class__, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mn_.Swap(&other->mn_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  numa_.Swap(&other->numa_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  serial_.Swap(&other->serial_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Device::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Array::_Internal {
 public:
};

Array::Array(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  devicelist_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.Array)
}
Array::Array(const Array& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      devicelist_(from.devicelist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArena());
  }
  state_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_state().empty()) {
    state_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_state(), 
      GetArena());
  }
  situation_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_situation().empty()) {
    situation_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_situation(), 
      GetArena());
  }
  createdatetime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_createdatetime().empty()) {
    createdatetime_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_createdatetime(), 
      GetArena());
  }
  updatedatetime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_updatedatetime().empty()) {
    updatedatetime_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_updatedatetime(), 
      GetArena());
  }
  rebuildingprogress_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rebuildingprogress().empty()) {
    rebuildingprogress_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rebuildingprogress(), 
      GetArena());
  }
  gcmode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_gcmode().empty()) {
    gcmode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_gcmode(), 
      GetArena());
  }
  metaraid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_metaraid().empty()) {
    metaraid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_metaraid(), 
      GetArena());
  }
  dataraid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_dataraid().empty()) {
    dataraid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_dataraid(), 
      GetArena());
  }
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&writethroughenabled_) -
    reinterpret_cast<char*>(&index_)) + sizeof(writethroughenabled_));
  // @@protoc_insertion_point(copy_constructor:grpc_cli.Array)
}

void Array::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
state_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
situation_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
createdatetime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
updatedatetime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rebuildingprogress_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
gcmode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
metaraid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
dataraid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&index_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&writethroughenabled_) -
    reinterpret_cast<char*>(&index_)) + sizeof(writethroughenabled_));
}

Array::~Array() {
  // @@protoc_insertion_point(destructor:grpc_cli.Array)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Array::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  state_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  situation_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  createdatetime_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  updatedatetime_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rebuildingprogress_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  gcmode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  metaraid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dataraid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Array::ArenaDtor(void* object) {
  Array* _this = reinterpret_cast< Array* >(object);
  (void)_this;
}
void Array::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Array::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Array::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.Array)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  devicelist_.Clear();
  name_.ClearToEmpty();
  status_.ClearToEmpty();
  state_.ClearToEmpty();
  situation_.ClearToEmpty();
  createdatetime_.ClearToEmpty();
  updatedatetime_.ClearToEmpty();
  rebuildingprogress_.ClearToEmpty();
  gcmode_.ClearToEmpty();
  metaraid_.ClearToEmpty();
  dataraid_.ClearToEmpty();
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&writethroughenabled_) -
      reinterpret_cast<char*>(&index_)) + sizeof(writethroughenabled_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Array::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 unique_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          unique_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Array.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string status = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Array.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string state = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_state();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Array.state"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string situation = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_situation();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Array.situation"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string createDatetime = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_createdatetime();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Array.createDatetime"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string updateDatetime = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_updatedatetime();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Array.updateDatetime"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rebuildingProgress = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_rebuildingprogress();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Array.rebuildingProgress"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 capacity = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          capacity_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 used = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          used_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string gcMode = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_gcmode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Array.gcMode"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string metaRaid = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          auto str = _internal_mutable_metaraid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Array.metaRaid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string dataRaid = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_dataraid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.Array.dataRaid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool writeThroughEnabled = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          writethroughenabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .grpc_cli.Device devicelist = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_devicelist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<130>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Array::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.Array)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_index(), target);
  }

  // int32 unique_id = 2;
  if (this->unique_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_unique_id(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Array.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  // string status = 4;
  if (this->status().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Array.status");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_status(), target);
  }

  // string state = 5;
  if (this->state().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_state().data(), static_cast<int>(this->_internal_state().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Array.state");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_state(), target);
  }

  // string situation = 6;
  if (this->situation().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_situation().data(), static_cast<int>(this->_internal_situation().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Array.situation");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_situation(), target);
  }

  // string createDatetime = 7;
  if (this->createdatetime().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_createdatetime().data(), static_cast<int>(this->_internal_createdatetime().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Array.createDatetime");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_createdatetime(), target);
  }

  // string updateDatetime = 8;
  if (this->updatedatetime().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_updatedatetime().data(), static_cast<int>(this->_internal_updatedatetime().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Array.updateDatetime");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_updatedatetime(), target);
  }

  // string rebuildingProgress = 9;
  if (this->rebuildingprogress().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rebuildingprogress().data(), static_cast<int>(this->_internal_rebuildingprogress().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Array.rebuildingProgress");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_rebuildingprogress(), target);
  }

  // uint64 capacity = 10;
  if (this->capacity() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(10, this->_internal_capacity(), target);
  }

  // uint64 used = 11;
  if (this->used() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(11, this->_internal_used(), target);
  }

  // string gcMode = 12;
  if (this->gcmode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_gcmode().data(), static_cast<int>(this->_internal_gcmode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Array.gcMode");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_gcmode(), target);
  }

  // string metaRaid = 13;
  if (this->metaraid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_metaraid().data(), static_cast<int>(this->_internal_metaraid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Array.metaRaid");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_metaraid(), target);
  }

  // string dataRaid = 14;
  if (this->dataraid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dataraid().data(), static_cast<int>(this->_internal_dataraid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.Array.dataRaid");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_dataraid(), target);
  }

  // bool writeThroughEnabled = 15;
  if (this->writethroughenabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(15, this->_internal_writethroughenabled(), target);
  }

  // repeated .grpc_cli.Device devicelist = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_devicelist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(16, this->_internal_devicelist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.Array)
  return target;
}

size_t Array::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.Array)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_cli.Device devicelist = 16;
  total_size += 2UL * this->_internal_devicelist_size();
  for (const auto& msg : this->devicelist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string status = 4;
  if (this->status().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // string state = 5;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_state());
  }

  // string situation = 6;
  if (this->situation().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_situation());
  }

  // string createDatetime = 7;
  if (this->createdatetime().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_createdatetime());
  }

  // string updateDatetime = 8;
  if (this->updatedatetime().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_updatedatetime());
  }

  // string rebuildingProgress = 9;
  if (this->rebuildingprogress().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rebuildingprogress());
  }

  // string gcMode = 12;
  if (this->gcmode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_gcmode());
  }

  // string metaRaid = 13;
  if (this->metaraid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_metaraid());
  }

  // string dataRaid = 14;
  if (this->dataraid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dataraid());
  }

  // int32 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_index());
  }

  // int32 unique_id = 2;
  if (this->unique_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_unique_id());
  }

  // uint64 capacity = 10;
  if (this->capacity() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_capacity());
  }

  // uint64 used = 11;
  if (this->used() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_used());
  }

  // bool writeThroughEnabled = 15;
  if (this->writethroughenabled() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Array::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.Array)
  GOOGLE_DCHECK_NE(&from, this);
  const Array* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Array>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.Array)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.Array)
    MergeFrom(*source);
  }
}

void Array::MergeFrom(const Array& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.Array)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  devicelist_.MergeFrom(from.devicelist_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.status().size() > 0) {
    _internal_set_status(from._internal_status());
  }
  if (from.state().size() > 0) {
    _internal_set_state(from._internal_state());
  }
  if (from.situation().size() > 0) {
    _internal_set_situation(from._internal_situation());
  }
  if (from.createdatetime().size() > 0) {
    _internal_set_createdatetime(from._internal_createdatetime());
  }
  if (from.updatedatetime().size() > 0) {
    _internal_set_updatedatetime(from._internal_updatedatetime());
  }
  if (from.rebuildingprogress().size() > 0) {
    _internal_set_rebuildingprogress(from._internal_rebuildingprogress());
  }
  if (from.gcmode().size() > 0) {
    _internal_set_gcmode(from._internal_gcmode());
  }
  if (from.metaraid().size() > 0) {
    _internal_set_metaraid(from._internal_metaraid());
  }
  if (from.dataraid().size() > 0) {
    _internal_set_dataraid(from._internal_dataraid());
  }
  if (from.index() != 0) {
    _internal_set_index(from._internal_index());
  }
  if (from.unique_id() != 0) {
    _internal_set_unique_id(from._internal_unique_id());
  }
  if (from.capacity() != 0) {
    _internal_set_capacity(from._internal_capacity());
  }
  if (from.used() != 0) {
    _internal_set_used(from._internal_used());
  }
  if (from.writethroughenabled() != 0) {
    _internal_set_writethroughenabled(from._internal_writethroughenabled());
  }
}

void Array::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.Array)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Array::CopyFrom(const Array& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.Array)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Array::IsInitialized() const {
  return true;
}

void Array::InternalSwap(Array* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  devicelist_.InternalSwap(&other->devicelist_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  status_.Swap(&other->status_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  state_.Swap(&other->state_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  situation_.Swap(&other->situation_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  createdatetime_.Swap(&other->createdatetime_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  updatedatetime_.Swap(&other->updatedatetime_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rebuildingprogress_.Swap(&other->rebuildingprogress_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  gcmode_.Swap(&other->gcmode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  metaraid_.Swap(&other->metaraid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  dataraid_.Swap(&other->dataraid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Array, writethroughenabled_)
      + sizeof(Array::writethroughenabled_)
      - PROTOBUF_FIELD_OFFSET(Array, index_)>(
          reinterpret_cast<char*>(&index_),
          reinterpret_cast<char*>(&other->index_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Array::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListArrayRequest::_Internal {
 public:
};

ListArrayRequest::ListArrayRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListArrayRequest)
}
ListArrayRequest::ListArrayRequest(const ListArrayRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListArrayRequest)
}

void ListArrayRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListArrayRequest::~ListArrayRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListArrayRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListArrayRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListArrayRequest::ArenaDtor(void* object) {
  ListArrayRequest* _this = reinterpret_cast< ListArrayRequest* >(object);
  (void)_this;
}
void ListArrayRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListArrayRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListArrayRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListArrayRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListArrayRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListArrayRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListArrayRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListArrayRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListArrayRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListArrayRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListArrayRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListArrayRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListArrayRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListArrayRequest)
  return target;
}

size_t ListArrayRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListArrayRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListArrayRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListArrayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListArrayRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListArrayRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListArrayRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListArrayRequest)
    MergeFrom(*source);
  }
}

void ListArrayRequest::MergeFrom(const ListArrayRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListArrayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
}

void ListArrayRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListArrayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListArrayRequest::CopyFrom(const ListArrayRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListArrayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListArrayRequest::IsInitialized() const {
  return true;
}

void ListArrayRequest::InternalSwap(ListArrayRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ListArrayRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListArrayResponse_Result_ArrayList::_Internal {
 public:
};

ListArrayResponse_Result_ArrayList::ListArrayResponse_Result_ArrayList(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  arraylist_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListArrayResponse.Result.ArrayList)
}
ListArrayResponse_Result_ArrayList::ListArrayResponse_Result_ArrayList(const ListArrayResponse_Result_ArrayList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      arraylist_(from.arraylist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListArrayResponse.Result.ArrayList)
}

void ListArrayResponse_Result_ArrayList::SharedCtor() {
}

ListArrayResponse_Result_ArrayList::~ListArrayResponse_Result_ArrayList() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListArrayResponse.Result.ArrayList)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListArrayResponse_Result_ArrayList::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ListArrayResponse_Result_ArrayList::ArenaDtor(void* object) {
  ListArrayResponse_Result_ArrayList* _this = reinterpret_cast< ListArrayResponse_Result_ArrayList* >(object);
  (void)_this;
}
void ListArrayResponse_Result_ArrayList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListArrayResponse_Result_ArrayList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListArrayResponse_Result_ArrayList::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListArrayResponse.Result.ArrayList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arraylist_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListArrayResponse_Result_ArrayList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .grpc_cli.Array arrayList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_arraylist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListArrayResponse_Result_ArrayList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListArrayResponse.Result.ArrayList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grpc_cli.Array arrayList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_arraylist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_arraylist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListArrayResponse.Result.ArrayList)
  return target;
}

size_t ListArrayResponse_Result_ArrayList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListArrayResponse.Result.ArrayList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_cli.Array arrayList = 1;
  total_size += 1UL * this->_internal_arraylist_size();
  for (const auto& msg : this->arraylist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListArrayResponse_Result_ArrayList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListArrayResponse.Result.ArrayList)
  GOOGLE_DCHECK_NE(&from, this);
  const ListArrayResponse_Result_ArrayList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListArrayResponse_Result_ArrayList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListArrayResponse.Result.ArrayList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListArrayResponse.Result.ArrayList)
    MergeFrom(*source);
  }
}

void ListArrayResponse_Result_ArrayList::MergeFrom(const ListArrayResponse_Result_ArrayList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListArrayResponse.Result.ArrayList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arraylist_.MergeFrom(from.arraylist_);
}

void ListArrayResponse_Result_ArrayList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListArrayResponse.Result.ArrayList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListArrayResponse_Result_ArrayList::CopyFrom(const ListArrayResponse_Result_ArrayList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListArrayResponse.Result.ArrayList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListArrayResponse_Result_ArrayList::IsInitialized() const {
  return true;
}

void ListArrayResponse_Result_ArrayList::InternalSwap(ListArrayResponse_Result_ArrayList* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  arraylist_.InternalSwap(&other->arraylist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListArrayResponse_Result_ArrayList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListArrayResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const ListArrayResponse_Result* msg);
  static const ::grpc_cli::ListArrayResponse_Result_ArrayList& data(const ListArrayResponse_Result* msg);
};

const ::grpc_cli::Status&
ListArrayResponse_Result::_Internal::status(const ListArrayResponse_Result* msg) {
  return *msg->status_;
}
const ::grpc_cli::ListArrayResponse_Result_ArrayList&
ListArrayResponse_Result::_Internal::data(const ListArrayResponse_Result* msg) {
  return *msg->data_;
}
ListArrayResponse_Result::ListArrayResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListArrayResponse.Result)
}
ListArrayResponse_Result::ListArrayResponse_Result(const ListArrayResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_data()) {
    data_ = new ::grpc_cli::ListArrayResponse_Result_ArrayList(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListArrayResponse.Result)
}

void ListArrayResponse_Result::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&data_) -
    reinterpret_cast<char*>(&status_)) + sizeof(data_));
}

ListArrayResponse_Result::~ListArrayResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListArrayResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListArrayResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete data_;
}

void ListArrayResponse_Result::ArenaDtor(void* object) {
  ListArrayResponse_Result* _this = reinterpret_cast< ListArrayResponse_Result* >(object);
  (void)_this;
}
void ListArrayResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListArrayResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListArrayResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListArrayResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListArrayResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ListArrayResponse.Result.ArrayList data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListArrayResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListArrayResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .grpc_cli.ListArrayResponse.Result.ArrayList data = 2;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListArrayResponse.Result)
  return target;
}

size_t ListArrayResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListArrayResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .grpc_cli.ListArrayResponse.Result.ArrayList data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListArrayResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListArrayResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const ListArrayResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListArrayResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListArrayResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListArrayResponse.Result)
    MergeFrom(*source);
  }
}

void ListArrayResponse_Result::MergeFrom(const ListArrayResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListArrayResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
  if (from.has_data()) {
    _internal_mutable_data()->::grpc_cli::ListArrayResponse_Result_ArrayList::MergeFrom(from._internal_data());
  }
}

void ListArrayResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListArrayResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListArrayResponse_Result::CopyFrom(const ListArrayResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListArrayResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListArrayResponse_Result::IsInitialized() const {
  return true;
}

void ListArrayResponse_Result::InternalSwap(ListArrayResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListArrayResponse_Result, data_)
      + sizeof(ListArrayResponse_Result::data_)
      - PROTOBUF_FIELD_OFFSET(ListArrayResponse_Result, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListArrayResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListArrayResponse::_Internal {
 public:
  static const ::grpc_cli::ListArrayResponse_Result& result(const ListArrayResponse* msg);
  static const ::grpc_cli::PosInfo& info(const ListArrayResponse* msg);
};

const ::grpc_cli::ListArrayResponse_Result&
ListArrayResponse::_Internal::result(const ListArrayResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
ListArrayResponse::_Internal::info(const ListArrayResponse* msg) {
  return *msg->info_;
}
ListArrayResponse::ListArrayResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ListArrayResponse)
}
ListArrayResponse::ListArrayResponse(const ListArrayResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::ListArrayResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ListArrayResponse)
}

void ListArrayResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

ListArrayResponse::~ListArrayResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.ListArrayResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListArrayResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void ListArrayResponse::ArenaDtor(void* object) {
  ListArrayResponse* _this = reinterpret_cast< ListArrayResponse* >(object);
  (void)_this;
}
void ListArrayResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListArrayResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListArrayResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ListArrayResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListArrayResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListArrayResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ListArrayResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ListArrayResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListArrayResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ListArrayResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListArrayResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ListArrayResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.ListArrayResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ListArrayResponse)
  return target;
}

size_t ListArrayResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ListArrayResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.ListArrayResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListArrayResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ListArrayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListArrayResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListArrayResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ListArrayResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ListArrayResponse)
    MergeFrom(*source);
  }
}

void ListArrayResponse::MergeFrom(const ListArrayResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ListArrayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::ListArrayResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void ListArrayResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ListArrayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListArrayResponse::CopyFrom(const ListArrayResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ListArrayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListArrayResponse::IsInitialized() const {
  return true;
}

void ListArrayResponse::InternalSwap(ListArrayResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListArrayResponse, info_)
      + sizeof(ListArrayResponse::info_)
      - PROTOBUF_FIELD_OFFSET(ListArrayResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListArrayResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ArrayInfoRequest_Param::_Internal {
 public:
};

ArrayInfoRequest_Param::ArrayInfoRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ArrayInfoRequest.Param)
}
ArrayInfoRequest_Param::ArrayInfoRequest_Param(const ArrayInfoRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ArrayInfoRequest.Param)
}

void ArrayInfoRequest_Param::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ArrayInfoRequest_Param::~ArrayInfoRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.ArrayInfoRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ArrayInfoRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ArrayInfoRequest_Param::ArenaDtor(void* object) {
  ArrayInfoRequest_Param* _this = reinterpret_cast< ArrayInfoRequest_Param* >(object);
  (void)_this;
}
void ArrayInfoRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ArrayInfoRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ArrayInfoRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ArrayInfoRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ArrayInfoRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ArrayInfoRequest.Param.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ArrayInfoRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ArrayInfoRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ArrayInfoRequest.Param.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ArrayInfoRequest.Param)
  return target;
}

size_t ArrayInfoRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ArrayInfoRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ArrayInfoRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ArrayInfoRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const ArrayInfoRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ArrayInfoRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ArrayInfoRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ArrayInfoRequest.Param)
    MergeFrom(*source);
  }
}

void ArrayInfoRequest_Param::MergeFrom(const ArrayInfoRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ArrayInfoRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void ArrayInfoRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ArrayInfoRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArrayInfoRequest_Param::CopyFrom(const ArrayInfoRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ArrayInfoRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArrayInfoRequest_Param::IsInitialized() const {
  return true;
}

void ArrayInfoRequest_Param::InternalSwap(ArrayInfoRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ArrayInfoRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ArrayInfoRequest::_Internal {
 public:
  static const ::grpc_cli::ArrayInfoRequest_Param& param(const ArrayInfoRequest* msg);
};

const ::grpc_cli::ArrayInfoRequest_Param&
ArrayInfoRequest::_Internal::param(const ArrayInfoRequest* msg) {
  return *msg->param_;
}
ArrayInfoRequest::ArrayInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ArrayInfoRequest)
}
ArrayInfoRequest::ArrayInfoRequest(const ArrayInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::ArrayInfoRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ArrayInfoRequest)
}

void ArrayInfoRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

ArrayInfoRequest::~ArrayInfoRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.ArrayInfoRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ArrayInfoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void ArrayInfoRequest::ArenaDtor(void* object) {
  ArrayInfoRequest* _this = reinterpret_cast< ArrayInfoRequest* >(object);
  (void)_this;
}
void ArrayInfoRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ArrayInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ArrayInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ArrayInfoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ArrayInfoRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ArrayInfoRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ArrayInfoRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ArrayInfoRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ArrayInfoRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ArrayInfoRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ArrayInfoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ArrayInfoRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ArrayInfoRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ArrayInfoRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.ArrayInfoRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ArrayInfoRequest)
  return target;
}

size_t ArrayInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ArrayInfoRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.ArrayInfoRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ArrayInfoRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ArrayInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ArrayInfoRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ArrayInfoRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ArrayInfoRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ArrayInfoRequest)
    MergeFrom(*source);
  }
}

void ArrayInfoRequest::MergeFrom(const ArrayInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ArrayInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::ArrayInfoRequest_Param::MergeFrom(from._internal_param());
  }
}

void ArrayInfoRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ArrayInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArrayInfoRequest::CopyFrom(const ArrayInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ArrayInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArrayInfoRequest::IsInitialized() const {
  return true;
}

void ArrayInfoRequest::InternalSwap(ArrayInfoRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ArrayInfoRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ArrayInfoResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const ArrayInfoResponse_Result* msg);
  static const ::grpc_cli::Array& data(const ArrayInfoResponse_Result* msg);
};

const ::grpc_cli::Status&
ArrayInfoResponse_Result::_Internal::status(const ArrayInfoResponse_Result* msg) {
  return *msg->status_;
}
const ::grpc_cli::Array&
ArrayInfoResponse_Result::_Internal::data(const ArrayInfoResponse_Result* msg) {
  return *msg->data_;
}
ArrayInfoResponse_Result::ArrayInfoResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ArrayInfoResponse.Result)
}
ArrayInfoResponse_Result::ArrayInfoResponse_Result(const ArrayInfoResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_data()) {
    data_ = new ::grpc_cli::Array(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ArrayInfoResponse.Result)
}

void ArrayInfoResponse_Result::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&data_) -
    reinterpret_cast<char*>(&status_)) + sizeof(data_));
}

ArrayInfoResponse_Result::~ArrayInfoResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.ArrayInfoResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ArrayInfoResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete data_;
}

void ArrayInfoResponse_Result::ArenaDtor(void* object) {
  ArrayInfoResponse_Result* _this = reinterpret_cast< ArrayInfoResponse_Result* >(object);
  (void)_this;
}
void ArrayInfoResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ArrayInfoResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ArrayInfoResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ArrayInfoResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ArrayInfoResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.Array data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ArrayInfoResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ArrayInfoResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .grpc_cli.Array data = 2;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ArrayInfoResponse.Result)
  return target;
}

size_t ArrayInfoResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ArrayInfoResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .grpc_cli.Array data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ArrayInfoResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ArrayInfoResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const ArrayInfoResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ArrayInfoResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ArrayInfoResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ArrayInfoResponse.Result)
    MergeFrom(*source);
  }
}

void ArrayInfoResponse_Result::MergeFrom(const ArrayInfoResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ArrayInfoResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
  if (from.has_data()) {
    _internal_mutable_data()->::grpc_cli::Array::MergeFrom(from._internal_data());
  }
}

void ArrayInfoResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ArrayInfoResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArrayInfoResponse_Result::CopyFrom(const ArrayInfoResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ArrayInfoResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArrayInfoResponse_Result::IsInitialized() const {
  return true;
}

void ArrayInfoResponse_Result::InternalSwap(ArrayInfoResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ArrayInfoResponse_Result, data_)
      + sizeof(ArrayInfoResponse_Result::data_)
      - PROTOBUF_FIELD_OFFSET(ArrayInfoResponse_Result, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ArrayInfoResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ArrayInfoResponse::_Internal {
 public:
  static const ::grpc_cli::ArrayInfoResponse_Result& result(const ArrayInfoResponse* msg);
  static const ::grpc_cli::PosInfo& info(const ArrayInfoResponse* msg);
};

const ::grpc_cli::ArrayInfoResponse_Result&
ArrayInfoResponse::_Internal::result(const ArrayInfoResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
ArrayInfoResponse::_Internal::info(const ArrayInfoResponse* msg) {
  return *msg->info_;
}
ArrayInfoResponse::ArrayInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.ArrayInfoResponse)
}
ArrayInfoResponse::ArrayInfoResponse(const ArrayInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::ArrayInfoResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.ArrayInfoResponse)
}

void ArrayInfoResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

ArrayInfoResponse::~ArrayInfoResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.ArrayInfoResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ArrayInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void ArrayInfoResponse::ArenaDtor(void* object) {
  ArrayInfoResponse* _this = reinterpret_cast< ArrayInfoResponse* >(object);
  (void)_this;
}
void ArrayInfoResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ArrayInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ArrayInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.ArrayInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ArrayInfoResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ArrayInfoResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.ArrayInfoResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.ArrayInfoResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ArrayInfoResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.ArrayInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ArrayInfoResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.ArrayInfoResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.ArrayInfoResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.ArrayInfoResponse)
  return target;
}

size_t ArrayInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.ArrayInfoResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.ArrayInfoResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ArrayInfoResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.ArrayInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ArrayInfoResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ArrayInfoResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.ArrayInfoResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.ArrayInfoResponse)
    MergeFrom(*source);
  }
}

void ArrayInfoResponse::MergeFrom(const ArrayInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.ArrayInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::ArrayInfoResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void ArrayInfoResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.ArrayInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArrayInfoResponse::CopyFrom(const ArrayInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.ArrayInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArrayInfoResponse::IsInitialized() const {
  return true;
}

void ArrayInfoResponse::InternalSwap(ArrayInfoResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ArrayInfoResponse, info_)
      + sizeof(ArrayInfoResponse::info_)
      - PROTOBUF_FIELD_OFFSET(ArrayInfoResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ArrayInfoResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MountArrayRequest_Param::_Internal {
 public:
  using HasBits = decltype(std::declval<MountArrayRequest_Param>()._has_bits_);
  static void set_has_enable_write_through(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MountArrayRequest_Param::MountArrayRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.MountArrayRequest.Param)
}
MountArrayRequest_Param::MountArrayRequest_Param(const MountArrayRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  enable_write_through_ = from.enable_write_through_;
  // @@protoc_insertion_point(copy_constructor:grpc_cli.MountArrayRequest.Param)
}

void MountArrayRequest_Param::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
enable_write_through_ = false;
}

MountArrayRequest_Param::~MountArrayRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.MountArrayRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MountArrayRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MountArrayRequest_Param::ArenaDtor(void* object) {
  MountArrayRequest_Param* _this = reinterpret_cast< MountArrayRequest_Param* >(object);
  (void)_this;
}
void MountArrayRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MountArrayRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MountArrayRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.MountArrayRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  enable_write_through_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MountArrayRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.MountArrayRequest.Param.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool enable_write_through = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_enable_write_through(&has_bits);
          enable_write_through_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MountArrayRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.MountArrayRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.MountArrayRequest.Param.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // bool enable_write_through = 2;
  if (_internal_has_enable_write_through()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_enable_write_through(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.MountArrayRequest.Param)
  return target;
}

size_t MountArrayRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.MountArrayRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bool enable_write_through = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MountArrayRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.MountArrayRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const MountArrayRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MountArrayRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.MountArrayRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.MountArrayRequest.Param)
    MergeFrom(*source);
  }
}

void MountArrayRequest_Param::MergeFrom(const MountArrayRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.MountArrayRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_has_enable_write_through()) {
    _internal_set_enable_write_through(from._internal_enable_write_through());
  }
}

void MountArrayRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.MountArrayRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MountArrayRequest_Param::CopyFrom(const MountArrayRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.MountArrayRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MountArrayRequest_Param::IsInitialized() const {
  return true;
}

void MountArrayRequest_Param::InternalSwap(MountArrayRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(enable_write_through_, other->enable_write_through_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MountArrayRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MountArrayRequest::_Internal {
 public:
  static const ::grpc_cli::MountArrayRequest_Param& param(const MountArrayRequest* msg);
};

const ::grpc_cli::MountArrayRequest_Param&
MountArrayRequest::_Internal::param(const MountArrayRequest* msg) {
  return *msg->param_;
}
MountArrayRequest::MountArrayRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.MountArrayRequest)
}
MountArrayRequest::MountArrayRequest(const MountArrayRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::MountArrayRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.MountArrayRequest)
}

void MountArrayRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

MountArrayRequest::~MountArrayRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.MountArrayRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MountArrayRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void MountArrayRequest::ArenaDtor(void* object) {
  MountArrayRequest* _this = reinterpret_cast< MountArrayRequest* >(object);
  (void)_this;
}
void MountArrayRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MountArrayRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MountArrayRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.MountArrayRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MountArrayRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.MountArrayRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.MountArrayRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.MountArrayRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.MountArrayRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MountArrayRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.MountArrayRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.MountArrayRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.MountArrayRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.MountArrayRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.MountArrayRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.MountArrayRequest)
  return target;
}

size_t MountArrayRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.MountArrayRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.MountArrayRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MountArrayRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.MountArrayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MountArrayRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MountArrayRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.MountArrayRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.MountArrayRequest)
    MergeFrom(*source);
  }
}

void MountArrayRequest::MergeFrom(const MountArrayRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.MountArrayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::MountArrayRequest_Param::MergeFrom(from._internal_param());
  }
}

void MountArrayRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.MountArrayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MountArrayRequest::CopyFrom(const MountArrayRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.MountArrayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MountArrayRequest::IsInitialized() const {
  return true;
}

void MountArrayRequest::InternalSwap(MountArrayRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MountArrayRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MountArrayResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const MountArrayResponse_Result* msg);
};

const ::grpc_cli::Status&
MountArrayResponse_Result::_Internal::status(const MountArrayResponse_Result* msg) {
  return *msg->status_;
}
MountArrayResponse_Result::MountArrayResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.MountArrayResponse.Result)
}
MountArrayResponse_Result::MountArrayResponse_Result(const MountArrayResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.MountArrayResponse.Result)
}

void MountArrayResponse_Result::SharedCtor() {
status_ = nullptr;
}

MountArrayResponse_Result::~MountArrayResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.MountArrayResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MountArrayResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void MountArrayResponse_Result::ArenaDtor(void* object) {
  MountArrayResponse_Result* _this = reinterpret_cast< MountArrayResponse_Result* >(object);
  (void)_this;
}
void MountArrayResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MountArrayResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MountArrayResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.MountArrayResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MountArrayResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MountArrayResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.MountArrayResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.MountArrayResponse.Result)
  return target;
}

size_t MountArrayResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.MountArrayResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MountArrayResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.MountArrayResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const MountArrayResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MountArrayResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.MountArrayResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.MountArrayResponse.Result)
    MergeFrom(*source);
  }
}

void MountArrayResponse_Result::MergeFrom(const MountArrayResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.MountArrayResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void MountArrayResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.MountArrayResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MountArrayResponse_Result::CopyFrom(const MountArrayResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.MountArrayResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MountArrayResponse_Result::IsInitialized() const {
  return true;
}

void MountArrayResponse_Result::InternalSwap(MountArrayResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MountArrayResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MountArrayResponse::_Internal {
 public:
  static const ::grpc_cli::MountArrayResponse_Result& result(const MountArrayResponse* msg);
  static const ::grpc_cli::PosInfo& info(const MountArrayResponse* msg);
};

const ::grpc_cli::MountArrayResponse_Result&
MountArrayResponse::_Internal::result(const MountArrayResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
MountArrayResponse::_Internal::info(const MountArrayResponse* msg) {
  return *msg->info_;
}
MountArrayResponse::MountArrayResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.MountArrayResponse)
}
MountArrayResponse::MountArrayResponse(const MountArrayResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::MountArrayResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.MountArrayResponse)
}

void MountArrayResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

MountArrayResponse::~MountArrayResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.MountArrayResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MountArrayResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void MountArrayResponse::ArenaDtor(void* object) {
  MountArrayResponse* _this = reinterpret_cast< MountArrayResponse* >(object);
  (void)_this;
}
void MountArrayResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MountArrayResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MountArrayResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.MountArrayResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MountArrayResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.MountArrayResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.MountArrayResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.MountArrayResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MountArrayResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.MountArrayResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.MountArrayResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.MountArrayResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.MountArrayResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.MountArrayResponse)
  return target;
}

size_t MountArrayResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.MountArrayResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.MountArrayResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MountArrayResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.MountArrayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MountArrayResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MountArrayResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.MountArrayResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.MountArrayResponse)
    MergeFrom(*source);
  }
}

void MountArrayResponse::MergeFrom(const MountArrayResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.MountArrayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::MountArrayResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void MountArrayResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.MountArrayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MountArrayResponse::CopyFrom(const MountArrayResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.MountArrayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MountArrayResponse::IsInitialized() const {
  return true;
}

void MountArrayResponse::InternalSwap(MountArrayResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MountArrayResponse, info_)
      + sizeof(MountArrayResponse::info_)
      - PROTOBUF_FIELD_OFFSET(MountArrayResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MountArrayResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UnmountArrayRequest_Param::_Internal {
 public:
};

UnmountArrayRequest_Param::UnmountArrayRequest_Param(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.UnmountArrayRequest.Param)
}
UnmountArrayRequest_Param::UnmountArrayRequest_Param(const UnmountArrayRequest_Param& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.UnmountArrayRequest.Param)
}

void UnmountArrayRequest_Param::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UnmountArrayRequest_Param::~UnmountArrayRequest_Param() {
  // @@protoc_insertion_point(destructor:grpc_cli.UnmountArrayRequest.Param)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UnmountArrayRequest_Param::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UnmountArrayRequest_Param::ArenaDtor(void* object) {
  UnmountArrayRequest_Param* _this = reinterpret_cast< UnmountArrayRequest_Param* >(object);
  (void)_this;
}
void UnmountArrayRequest_Param::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnmountArrayRequest_Param::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UnmountArrayRequest_Param::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.UnmountArrayRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnmountArrayRequest_Param::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.UnmountArrayRequest.Param.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnmountArrayRequest_Param::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.UnmountArrayRequest.Param)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.UnmountArrayRequest.Param.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.UnmountArrayRequest.Param)
  return target;
}

size_t UnmountArrayRequest_Param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.UnmountArrayRequest.Param)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnmountArrayRequest_Param::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.UnmountArrayRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  const UnmountArrayRequest_Param* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnmountArrayRequest_Param>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.UnmountArrayRequest.Param)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.UnmountArrayRequest.Param)
    MergeFrom(*source);
  }
}

void UnmountArrayRequest_Param::MergeFrom(const UnmountArrayRequest_Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.UnmountArrayRequest.Param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void UnmountArrayRequest_Param::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.UnmountArrayRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnmountArrayRequest_Param::CopyFrom(const UnmountArrayRequest_Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.UnmountArrayRequest.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnmountArrayRequest_Param::IsInitialized() const {
  return true;
}

void UnmountArrayRequest_Param::InternalSwap(UnmountArrayRequest_Param* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata UnmountArrayRequest_Param::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UnmountArrayRequest::_Internal {
 public:
  static const ::grpc_cli::UnmountArrayRequest_Param& param(const UnmountArrayRequest* msg);
};

const ::grpc_cli::UnmountArrayRequest_Param&
UnmountArrayRequest::_Internal::param(const UnmountArrayRequest* msg) {
  return *msg->param_;
}
UnmountArrayRequest::UnmountArrayRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.UnmountArrayRequest)
}
UnmountArrayRequest::UnmountArrayRequest(const UnmountArrayRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requestor().empty()) {
    requestor_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_requestor(), 
      GetArena());
  }
  if (from._internal_has_param()) {
    param_ = new ::grpc_cli::UnmountArrayRequest_Param(*from.param_);
  } else {
    param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.UnmountArrayRequest)
}

void UnmountArrayRequest::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
requestor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
param_ = nullptr;
}

UnmountArrayRequest::~UnmountArrayRequest() {
  // @@protoc_insertion_point(destructor:grpc_cli.UnmountArrayRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UnmountArrayRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requestor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete param_;
}

void UnmountArrayRequest::ArenaDtor(void* object) {
  UnmountArrayRequest* _this = reinterpret_cast< UnmountArrayRequest* >(object);
  (void)_this;
}
void UnmountArrayRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnmountArrayRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UnmountArrayRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.UnmountArrayRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  requestor_.ClearToEmpty();
  if (GetArena() == nullptr && param_ != nullptr) {
    delete param_;
  }
  param_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnmountArrayRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.UnmountArrayRequest.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.UnmountArrayRequest.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requestor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_requestor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.UnmountArrayRequest.requestor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.UnmountArrayRequest.Param param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnmountArrayRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.UnmountArrayRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.UnmountArrayRequest.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.UnmountArrayRequest.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestor().data(), static_cast<int>(this->_internal_requestor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.UnmountArrayRequest.requestor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_requestor(), target);
  }

  // .grpc_cli.UnmountArrayRequest.Param param = 4;
  if (this->has_param()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.UnmountArrayRequest)
  return target;
}

size_t UnmountArrayRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.UnmountArrayRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // string requestor = 3;
  if (this->requestor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestor());
  }

  // .grpc_cli.UnmountArrayRequest.Param param = 4;
  if (this->has_param()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *param_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnmountArrayRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.UnmountArrayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UnmountArrayRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnmountArrayRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.UnmountArrayRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.UnmountArrayRequest)
    MergeFrom(*source);
  }
}

void UnmountArrayRequest::MergeFrom(const UnmountArrayRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.UnmountArrayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.requestor().size() > 0) {
    _internal_set_requestor(from._internal_requestor());
  }
  if (from.has_param()) {
    _internal_mutable_param()->::grpc_cli::UnmountArrayRequest_Param::MergeFrom(from._internal_param());
  }
}

void UnmountArrayRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.UnmountArrayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnmountArrayRequest::CopyFrom(const UnmountArrayRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.UnmountArrayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnmountArrayRequest::IsInitialized() const {
  return true;
}

void UnmountArrayRequest::InternalSwap(UnmountArrayRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requestor_.Swap(&other->requestor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnmountArrayRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UnmountArrayResponse_Result::_Internal {
 public:
  static const ::grpc_cli::Status& status(const UnmountArrayResponse_Result* msg);
};

const ::grpc_cli::Status&
UnmountArrayResponse_Result::_Internal::status(const UnmountArrayResponse_Result* msg) {
  return *msg->status_;
}
UnmountArrayResponse_Result::UnmountArrayResponse_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.UnmountArrayResponse.Result)
}
UnmountArrayResponse_Result::UnmountArrayResponse_Result(const UnmountArrayResponse_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::grpc_cli::Status(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.UnmountArrayResponse.Result)
}

void UnmountArrayResponse_Result::SharedCtor() {
status_ = nullptr;
}

UnmountArrayResponse_Result::~UnmountArrayResponse_Result() {
  // @@protoc_insertion_point(destructor:grpc_cli.UnmountArrayResponse.Result)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UnmountArrayResponse_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void UnmountArrayResponse_Result::ArenaDtor(void* object) {
  UnmountArrayResponse_Result* _this = reinterpret_cast< UnmountArrayResponse_Result* >(object);
  (void)_this;
}
void UnmountArrayResponse_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnmountArrayResponse_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UnmountArrayResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.UnmountArrayResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnmountArrayResponse_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .grpc_cli.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnmountArrayResponse_Result::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.UnmountArrayResponse.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.UnmountArrayResponse.Result)
  return target;
}

size_t UnmountArrayResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.UnmountArrayResponse.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpc_cli.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnmountArrayResponse_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.UnmountArrayResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const UnmountArrayResponse_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnmountArrayResponse_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.UnmountArrayResponse.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.UnmountArrayResponse.Result)
    MergeFrom(*source);
  }
}

void UnmountArrayResponse_Result::MergeFrom(const UnmountArrayResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.UnmountArrayResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::grpc_cli::Status::MergeFrom(from._internal_status());
  }
}

void UnmountArrayResponse_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.UnmountArrayResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnmountArrayResponse_Result::CopyFrom(const UnmountArrayResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.UnmountArrayResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnmountArrayResponse_Result::IsInitialized() const {
  return true;
}

void UnmountArrayResponse_Result::InternalSwap(UnmountArrayResponse_Result* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnmountArrayResponse_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UnmountArrayResponse::_Internal {
 public:
  static const ::grpc_cli::UnmountArrayResponse_Result& result(const UnmountArrayResponse* msg);
  static const ::grpc_cli::PosInfo& info(const UnmountArrayResponse* msg);
};

const ::grpc_cli::UnmountArrayResponse_Result&
UnmountArrayResponse::_Internal::result(const UnmountArrayResponse* msg) {
  return *msg->result_;
}
const ::grpc_cli::PosInfo&
UnmountArrayResponse::_Internal::info(const UnmountArrayResponse* msg) {
  return *msg->info_;
}
UnmountArrayResponse::UnmountArrayResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_cli.UnmountArrayResponse)
}
UnmountArrayResponse::UnmountArrayResponse(const UnmountArrayResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_command().empty()) {
    command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_command(), 
      GetArena());
  }
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArena());
  }
  if (from._internal_has_result()) {
    result_ = new ::grpc_cli::UnmountArrayResponse_Result(*from.result_);
  } else {
    result_ = nullptr;
  }
  if (from._internal_has_info()) {
    info_ = new ::grpc_cli::PosInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_cli.UnmountArrayResponse)
}

void UnmountArrayResponse::SharedCtor() {
command_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&result_)) + sizeof(info_));
}

UnmountArrayResponse::~UnmountArrayResponse() {
  // @@protoc_insertion_point(destructor:grpc_cli.UnmountArrayResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UnmountArrayResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  command_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete info_;
}

void UnmountArrayResponse::ArenaDtor(void* object) {
  UnmountArrayResponse* _this = reinterpret_cast< UnmountArrayResponse* >(object);
  (void)_this;
}
void UnmountArrayResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnmountArrayResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UnmountArrayResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_cli.UnmountArrayResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.ClearToEmpty();
  rid_.ClearToEmpty();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnmountArrayResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_command();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.UnmountArrayResponse.command"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_cli.UnmountArrayResponse.rid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.UnmountArrayResponse.Result result = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .grpc_cli.PosInfo info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnmountArrayResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_cli.UnmountArrayResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.UnmountArrayResponse.command");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_command(), target);
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_cli.UnmountArrayResponse.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // .grpc_cli.UnmountArrayResponse.Result result = 3;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::result(this), target, stream);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_cli.UnmountArrayResponse)
  return target;
}

size_t UnmountArrayResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_cli.UnmountArrayResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string rid = 2;
  if (this->rid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // .grpc_cli.UnmountArrayResponse.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .grpc_cli.PosInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnmountArrayResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_cli.UnmountArrayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UnmountArrayResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnmountArrayResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_cli.UnmountArrayResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_cli.UnmountArrayResponse)
    MergeFrom(*source);
  }
}

void UnmountArrayResponse::MergeFrom(const UnmountArrayResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_cli.UnmountArrayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command().size() > 0) {
    _internal_set_command(from._internal_command());
  }
  if (from.rid().size() > 0) {
    _internal_set_rid(from._internal_rid());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::grpc_cli::UnmountArrayResponse_Result::MergeFrom(from._internal_result());
  }
  if (from.has_info()) {
    _internal_mutable_info()->::grpc_cli::PosInfo::MergeFrom(from._internal_info());
  }
}

void UnmountArrayResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_cli.UnmountArrayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnmountArrayResponse::CopyFrom(const UnmountArrayResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_cli.UnmountArrayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnmountArrayResponse::IsInitialized() const {
  return true;
}

void UnmountArrayResponse::InternalSwap(UnmountArrayResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  command_.Swap(&other->command_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rid_.Swap(&other->rid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UnmountArrayResponse, info_)
      + sizeof(UnmountArrayResponse::info_)
      - PROTOBUF_FIELD_OFFSET(UnmountArrayResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UnmountArrayResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace grpc_cli
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpc_cli::Status* Arena::CreateMaybeMessage< ::grpc_cli::Status >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::Status >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::PosInfo* Arena::CreateMaybeMessage< ::grpc_cli::PosInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::PosInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SystemInfoRequest* Arena::CreateMaybeMessage< ::grpc_cli::SystemInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SystemInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SystemInfoResponse_Result_Data* Arena::CreateMaybeMessage< ::grpc_cli::SystemInfoResponse_Result_Data >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SystemInfoResponse_Result_Data >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SystemInfoResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::SystemInfoResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SystemInfoResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SystemInfoResponse* Arena::CreateMaybeMessage< ::grpc_cli::SystemInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SystemInfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SystemStopRequest* Arena::CreateMaybeMessage< ::grpc_cli::SystemStopRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SystemStopRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SystemStopResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::SystemStopResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SystemStopResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SystemStopResponse* Arena::CreateMaybeMessage< ::grpc_cli::SystemStopResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SystemStopResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::GetSystemPropertyRequest* Arena::CreateMaybeMessage< ::grpc_cli::GetSystemPropertyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::GetSystemPropertyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::GetSystemPropertyResponse_Result_Data* Arena::CreateMaybeMessage< ::grpc_cli::GetSystemPropertyResponse_Result_Data >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::GetSystemPropertyResponse_Result_Data >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::GetSystemPropertyResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::GetSystemPropertyResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::GetSystemPropertyResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::GetSystemPropertyResponse* Arena::CreateMaybeMessage< ::grpc_cli::GetSystemPropertyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::GetSystemPropertyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SetSystemPropertyRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::SetSystemPropertyRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SetSystemPropertyRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SetSystemPropertyRequest* Arena::CreateMaybeMessage< ::grpc_cli::SetSystemPropertyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SetSystemPropertyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SetSystemPropertyResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::SetSystemPropertyResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SetSystemPropertyResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::SetSystemPropertyResponse* Arena::CreateMaybeMessage< ::grpc_cli::SetSystemPropertyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::SetSystemPropertyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::StartTelemetryRequest* Arena::CreateMaybeMessage< ::grpc_cli::StartTelemetryRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::StartTelemetryRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::StartTelemetryResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::StartTelemetryResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::StartTelemetryResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::StartTelemetryResponse* Arena::CreateMaybeMessage< ::grpc_cli::StartTelemetryResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::StartTelemetryResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::StopTelemetryRequest* Arena::CreateMaybeMessage< ::grpc_cli::StopTelemetryRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::StopTelemetryRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::StopTelemetryResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::StopTelemetryResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::StopTelemetryResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::StopTelemetryResponse* Arena::CreateMaybeMessage< ::grpc_cli::StopTelemetryResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::StopTelemetryResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ResetEventWrrRequest* Arena::CreateMaybeMessage< ::grpc_cli::ResetEventWrrRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ResetEventWrrRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ResetEventWrrResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::ResetEventWrrResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ResetEventWrrResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ResetEventWrrResponse* Arena::CreateMaybeMessage< ::grpc_cli::ResetEventWrrResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ResetEventWrrResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ResetMbrRequest* Arena::CreateMaybeMessage< ::grpc_cli::ResetMbrRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ResetMbrRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ResetMbrResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::ResetMbrResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ResetMbrResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ResetMbrResponse* Arena::CreateMaybeMessage< ::grpc_cli::ResetMbrResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ResetMbrResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::StopRebuildingRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::StopRebuildingRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::StopRebuildingRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::StopRebuildingRequest* Arena::CreateMaybeMessage< ::grpc_cli::StopRebuildingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::StopRebuildingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::StopRebuildingResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::StopRebuildingResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::StopRebuildingResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::StopRebuildingResponse* Arena::CreateMaybeMessage< ::grpc_cli::StopRebuildingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::StopRebuildingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::UpdateEventWrrRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::UpdateEventWrrRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::UpdateEventWrrRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::UpdateEventWrrRequest* Arena::CreateMaybeMessage< ::grpc_cli::UpdateEventWrrRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::UpdateEventWrrRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::UpdateEventWrrResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::UpdateEventWrrResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::UpdateEventWrrResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::UpdateEventWrrResponse* Arena::CreateMaybeMessage< ::grpc_cli::UpdateEventWrrResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::UpdateEventWrrResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::AddSpareRequest_SpareDeviceName* Arena::CreateMaybeMessage< ::grpc_cli::AddSpareRequest_SpareDeviceName >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::AddSpareRequest_SpareDeviceName >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::AddSpareRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::AddSpareRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::AddSpareRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::AddSpareRequest* Arena::CreateMaybeMessage< ::grpc_cli::AddSpareRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::AddSpareRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::AddSpareResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::AddSpareResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::AddSpareResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::AddSpareResponse* Arena::CreateMaybeMessage< ::grpc_cli::AddSpareResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::AddSpareResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::RemoveSpareRequest_SpareDeviceName* Arena::CreateMaybeMessage< ::grpc_cli::RemoveSpareRequest_SpareDeviceName >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::RemoveSpareRequest_SpareDeviceName >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::RemoveSpareRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::RemoveSpareRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::RemoveSpareRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::RemoveSpareRequest* Arena::CreateMaybeMessage< ::grpc_cli::RemoveSpareRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::RemoveSpareRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::RemoveSpareResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::RemoveSpareResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::RemoveSpareResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::RemoveSpareResponse* Arena::CreateMaybeMessage< ::grpc_cli::RemoveSpareResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::RemoveSpareResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::DeviceNameList* Arena::CreateMaybeMessage< ::grpc_cli::DeviceNameList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::DeviceNameList >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::AutocreateArrayRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::AutocreateArrayRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::AutocreateArrayRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::AutocreateArrayRequest* Arena::CreateMaybeMessage< ::grpc_cli::AutocreateArrayRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::AutocreateArrayRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::AutocreateArrayResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::AutocreateArrayResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::AutocreateArrayResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::AutocreateArrayResponse* Arena::CreateMaybeMessage< ::grpc_cli::AutocreateArrayResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::AutocreateArrayResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::CreateArrayRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::CreateArrayRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::CreateArrayRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::CreateArrayRequest* Arena::CreateMaybeMessage< ::grpc_cli::CreateArrayRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::CreateArrayRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::CreateArrayResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::CreateArrayResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::CreateArrayResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::CreateArrayResponse* Arena::CreateMaybeMessage< ::grpc_cli::CreateArrayResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::CreateArrayResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::DeleteArrayRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::DeleteArrayRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::DeleteArrayRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::DeleteArrayRequest* Arena::CreateMaybeMessage< ::grpc_cli::DeleteArrayRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::DeleteArrayRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::DeleteArrayResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::DeleteArrayResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::DeleteArrayResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::DeleteArrayResponse* Arena::CreateMaybeMessage< ::grpc_cli::DeleteArrayResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::DeleteArrayResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::Device* Arena::CreateMaybeMessage< ::grpc_cli::Device >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::Device >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::Array* Arena::CreateMaybeMessage< ::grpc_cli::Array >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::Array >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListArrayRequest* Arena::CreateMaybeMessage< ::grpc_cli::ListArrayRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListArrayRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListArrayResponse_Result_ArrayList* Arena::CreateMaybeMessage< ::grpc_cli::ListArrayResponse_Result_ArrayList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListArrayResponse_Result_ArrayList >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListArrayResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::ListArrayResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListArrayResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ListArrayResponse* Arena::CreateMaybeMessage< ::grpc_cli::ListArrayResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ListArrayResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ArrayInfoRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::ArrayInfoRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ArrayInfoRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ArrayInfoRequest* Arena::CreateMaybeMessage< ::grpc_cli::ArrayInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ArrayInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ArrayInfoResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::ArrayInfoResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ArrayInfoResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::ArrayInfoResponse* Arena::CreateMaybeMessage< ::grpc_cli::ArrayInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::ArrayInfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::MountArrayRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::MountArrayRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::MountArrayRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::MountArrayRequest* Arena::CreateMaybeMessage< ::grpc_cli::MountArrayRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::MountArrayRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::MountArrayResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::MountArrayResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::MountArrayResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::MountArrayResponse* Arena::CreateMaybeMessage< ::grpc_cli::MountArrayResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::MountArrayResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::UnmountArrayRequest_Param* Arena::CreateMaybeMessage< ::grpc_cli::UnmountArrayRequest_Param >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::UnmountArrayRequest_Param >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::UnmountArrayRequest* Arena::CreateMaybeMessage< ::grpc_cli::UnmountArrayRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::UnmountArrayRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::UnmountArrayResponse_Result* Arena::CreateMaybeMessage< ::grpc_cli::UnmountArrayResponse_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::UnmountArrayResponse_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_cli::UnmountArrayResponse* Arena::CreateMaybeMessage< ::grpc_cli::UnmountArrayResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_cli::UnmountArrayResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
